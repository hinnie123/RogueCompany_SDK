// RogueCompany (Dumped by Hinnie) SDK

#ifdef _MSC_VER
	#pragma pack(push, 0x8)
#endif

#include "../SDK.hpp"

namespace SDK
{
//---------------------------------------------------------------------------
//Functions
//---------------------------------------------------------------------------

// Function Killstreak.AttachmentCollection.GetCompatibleAttachmentsForWeaponType
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag*           WeaponType                     (ConstParm, Parm, OutParm, ReferenceParm)

void UAttachmentCollection::GetCompatibleAttachmentsForWeaponType(struct FGameplayTag* WeaponType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.AttachmentCollection.GetCompatibleAttachmentsForWeaponType");

	UAttachmentCollection_GetCompatibleAttachmentsForWeaponType_Params params;
	params.WeaponType = WeaponType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.EchoBlueprintLibrary.RequestEchoFromActor
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class UAkAudioEvent**          EchoEvent                      (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 OriginActor                    (Parm, ZeroConstructor, IsPlainOldData)
// float*                         ZOffset                        (Parm, ZeroConstructor, IsPlainOldData)
// float*                         SpeedOfSound                   (Parm, ZeroConstructor, IsPlainOldData)
// int*                           NumberOfEchosToTrace           (Parm, ZeroConstructor, IsPlainOldData)
// float*                         EchoTraceRange                 (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bAllowPostAtMaxDistance        (Parm, ZeroConstructor, IsPlainOldData)

void UEchoBlueprintLibrary::STATIC_RequestEchoFromActor(class UObject** WorldContextObject, class UAkAudioEvent** EchoEvent, class AActor** OriginActor, float* ZOffset, float* SpeedOfSound, int* NumberOfEchosToTrace, float* EchoTraceRange, bool* bAllowPostAtMaxDistance)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.EchoBlueprintLibrary.RequestEchoFromActor");

	UEchoBlueprintLibrary_RequestEchoFromActor_Params params;
	params.WorldContextObject = WorldContextObject;
	params.EchoEvent = EchoEvent;
	params.OriginActor = OriginActor;
	params.ZOffset = ZOffset;
	params.SpeedOfSound = SpeedOfSound;
	params.NumberOfEchosToTrace = NumberOfEchosToTrace;
	params.EchoTraceRange = EchoTraceRange;
	params.bAllowPostAtMaxDistance = bAllowPostAtMaxDistance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.EchoBlueprintLibrary.RequestEcho
// (Final, BlueprintCosmetic, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class UAkAudioEvent**          EchoEvent                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                EchoOrigin                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FRotator*               EchoOrientation                (Parm, ZeroConstructor, IsPlainOldData)
// float*                         SpeedOfSound                   (Parm, ZeroConstructor, IsPlainOldData)
// int*                           NumberOfEchosToTrace           (Parm, ZeroConstructor, IsPlainOldData)
// float*                         EchoTraceRange                 (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bAllowPostAtMaxDistance        (Parm, ZeroConstructor, IsPlainOldData)

void UEchoBlueprintLibrary::STATIC_RequestEcho(class UObject** WorldContextObject, class UAkAudioEvent** EchoEvent, struct FVector* EchoOrigin, struct FRotator* EchoOrientation, float* SpeedOfSound, int* NumberOfEchosToTrace, float* EchoTraceRange, bool* bAllowPostAtMaxDistance)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.EchoBlueprintLibrary.RequestEcho");

	UEchoBlueprintLibrary_RequestEcho_Params params;
	params.WorldContextObject = WorldContextObject;
	params.EchoEvent = EchoEvent;
	params.EchoOrigin = EchoOrigin;
	params.EchoOrientation = EchoOrientation;
	params.SpeedOfSound = SpeedOfSound;
	params.NumberOfEchosToTrace = NumberOfEchosToTrace;
	params.EchoTraceRange = EchoTraceRange;
	params.bAllowPostAtMaxDistance = bAllowPostAtMaxDistance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.EnvironmentActorInterface.TrackerLeave
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UEnvironmentTrackerComponent** tracker                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UEnvironmentActorInterface::TrackerLeave(class UEnvironmentTrackerComponent** tracker)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.EnvironmentActorInterface.TrackerLeave");

	UEnvironmentActorInterface_TrackerLeave_Params params;
	params.tracker = tracker;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.EnvironmentActorInterface.TrackerEnter
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UEnvironmentTrackerComponent** tracker                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UEnvironmentActorInterface::TrackerEnter(class UEnvironmentTrackerComponent** tracker)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.EnvironmentActorInterface.TrackerEnter");

	UEnvironmentActorInterface_TrackerEnter_Params params;
	params.tracker = tracker;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.EnvironmentActorInterface.GetEnvironmentTag
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FName                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FName UEnvironmentActorInterface::GetEnvironmentTag()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.EnvironmentActorInterface.GetEnvironmentTag");

	UEnvironmentActorInterface_GetEnvironmentTag_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.EnvironmentListenerComponent.ViewTargetEnvironmentChanged
// (Final, Native, Protected)
// Parameters:
// struct FName*                  OldEnvironmentTag              (Parm, ZeroConstructor, IsPlainOldData)
// struct FName*                  NewEnvironmentTag              (Parm, ZeroConstructor, IsPlainOldData)

void UEnvironmentListenerComponent::ViewTargetEnvironmentChanged(struct FName* OldEnvironmentTag, struct FName* NewEnvironmentTag)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.EnvironmentListenerComponent.ViewTargetEnvironmentChanged");

	UEnvironmentListenerComponent_ViewTargetEnvironmentChanged_Params params;
	params.OldEnvironmentTag = OldEnvironmentTag;
	params.NewEnvironmentTag = NewEnvironmentTag;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.EnvironmentListenerComponent.OnEnvironmentChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// struct FName*                  OldEnvironmentTag              (Parm, ZeroConstructor, IsPlainOldData)

void UEnvironmentListenerComponent::OnEnvironmentChanged(struct FName* OldEnvironmentTag)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.EnvironmentListenerComponent.OnEnvironmentChanged");

	UEnvironmentListenerComponent_OnEnvironmentChanged_Params params;
	params.OldEnvironmentTag = OldEnvironmentTag;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.EnvironmentListenerComponent.GetCurrentEnvironment
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FName                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FName UEnvironmentListenerComponent::GetCurrentEnvironment()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.EnvironmentListenerComponent.GetCurrentEnvironment");

	UEnvironmentListenerComponent_GetCurrentEnvironment_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.EnvironmentTrackerComponent.ReevalulateEnvironment
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// struct FName                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FName UEnvironmentTrackerComponent::ReevalulateEnvironment()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.EnvironmentTrackerComponent.ReevalulateEnvironment");

	UEnvironmentTrackerComponent_ReevalulateEnvironment_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.EnvironmentTrackerComponent.GetCurrentEnvironment
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FName                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FName UEnvironmentTrackerComponent::GetCurrentEnvironment()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.EnvironmentTrackerComponent.GetCurrentEnvironment");

	UEnvironmentTrackerComponent_GetCurrentEnvironment_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.EnvironmentTrackerComponent.EndTouchingOwnerUpdatedComponent
// (Native, Protected)
// Parameters:
// class UPrimitiveComponent**    OverlappedComp                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor**                 OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent**    OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int*                           OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)

void UEnvironmentTrackerComponent::EndTouchingOwnerUpdatedComponent(class UPrimitiveComponent** OverlappedComp, class AActor** OtherActor, class UPrimitiveComponent** OtherComp, int* OtherBodyIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.EnvironmentTrackerComponent.EndTouchingOwnerUpdatedComponent");

	UEnvironmentTrackerComponent_EndTouchingOwnerUpdatedComponent_Params params;
	params.OverlappedComp = OverlappedComp;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.EnvironmentTrackerComponent.BlueprintEnvironmentChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// struct FName*                  OldEnvironment                 (Parm, ZeroConstructor, IsPlainOldData)

void UEnvironmentTrackerComponent::BlueprintEnvironmentChanged(struct FName* OldEnvironment)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.EnvironmentTrackerComponent.BlueprintEnvironmentChanged");

	UEnvironmentTrackerComponent_BlueprintEnvironmentChanged_Params params;
	params.OldEnvironment = OldEnvironment;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.EnvironmentTrackerComponent.BeginTouchingOwnerUpdatedComponent
// (Native, Protected, HasOutParms)
// Parameters:
// class UPrimitiveComponent**    OverlappedComp                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor**                 OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent**    OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int*                           OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult*             SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UEnvironmentTrackerComponent::BeginTouchingOwnerUpdatedComponent(class UPrimitiveComponent** OverlappedComp, class AActor** OtherActor, class UPrimitiveComponent** OtherComp, int* OtherBodyIndex, bool* bFromSweep, struct FHitResult* SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.EnvironmentTrackerComponent.BeginTouchingOwnerUpdatedComponent");

	UEnvironmentTrackerComponent_BeginTouchingOwnerUpdatedComponent_Params params;
	params.OverlappedComp = OverlappedComp;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobRole.GetRoleIcon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTexture2D*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTexture2D* UKSJobRole::GetRoleIcon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobRole.GetRoleIcon");

	UKSJobRole_GetRoleIcon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KickbackModule.MakeKickbackInstance
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// int*                           ShotIndex                      (Parm, ZeroConstructor, IsPlainOldData)
// float*                         AbsoluteMaxDuration            (Parm, ZeroConstructor, IsPlainOldData)
// struct FInterpCurveVector2D    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FInterpCurveVector2D UKickbackModule::MakeKickbackInstance(int* ShotIndex, float* AbsoluteMaxDuration)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KickbackModule.MakeKickbackInstance");

	UKickbackModule_MakeKickbackInstance_Params params;
	params.ShotIndex = ShotIndex;
	params.AbsoluteMaxDuration = AbsoluteMaxDuration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KickbackModule.GetMaximumVerticalKick
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKickbackModule::GetMaximumVerticalKick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KickbackModule.GetMaximumVerticalKick");

	UKickbackModule_GetMaximumVerticalKick_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KickbackModule.GetMaximumHorizontalKick
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKickbackModule::GetMaximumHorizontalKick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KickbackModule.GetMaximumHorizontalKick");

	UKickbackModule_GetMaximumHorizontalKick_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSAccoladeTracker.StartTracking
// (Native, Event, Public, BlueprintEvent)

void UKSAccoladeTracker::StartTracking()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAccoladeTracker.StartTracking");

	UKSAccoladeTracker_StartTracking_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAccoladeTracker.ResetTracker
// (Native, Event, Public, BlueprintEvent)

void UKSAccoladeTracker::ResetTracker()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAccoladeTracker.ResetTracker");

	UKSAccoladeTracker_ResetTracker_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAccoladeTracker.NativeHandleElimEvent
// (Native, Public)
// Parameters:
// struct FCombatEventInfo*       ElimEvent                      (Parm)

void UKSAccoladeTracker::NativeHandleElimEvent(struct FCombatEventInfo* ElimEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAccoladeTracker.NativeHandleElimEvent");

	UKSAccoladeTracker_NativeHandleElimEvent_Params params;
	params.ElimEvent = ElimEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAccoladeTracker.NativeHandleDownEvent
// (Native, Public)
// Parameters:
// struct FCombatEventInfo*       DownEvent                      (Parm)

void UKSAccoladeTracker::NativeHandleDownEvent(struct FCombatEventInfo* DownEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAccoladeTracker.NativeHandleDownEvent");

	UKSAccoladeTracker_NativeHandleDownEvent_Params params;
	params.DownEvent = DownEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAccoladeTracker.HandleElimEvent
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// struct FCombatEventInfo*       ElimEvent                      (Parm)

void UKSAccoladeTracker::HandleElimEvent(struct FCombatEventInfo* ElimEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAccoladeTracker.HandleElimEvent");

	UKSAccoladeTracker_HandleElimEvent_Params params;
	params.ElimEvent = ElimEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAccoladeTracker.HandleDownEvent
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// struct FCombatEventInfo*       DownEvent                      (Parm)

void UKSAccoladeTracker::HandleDownEvent(struct FCombatEventInfo* DownEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAccoladeTracker.HandleDownEvent");

	UKSAccoladeTracker_HandleDownEvent_Params params;
	params.DownEvent = DownEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAccoladeTracker.GetPrimaryAccoladeDisplayInfo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FAccoladeDisplayInfo    ReturnValue                    (Parm, OutParm, ReturnParm)

struct FAccoladeDisplayInfo UKSAccoladeTracker::GetPrimaryAccoladeDisplayInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAccoladeTracker.GetPrimaryAccoladeDisplayInfo");

	UKSAccoladeTracker_GetPrimaryAccoladeDisplayInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSAccoladeTracker.GetOwningGameMode
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class AKSGameMode*             OutGameMode                    (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSAccoladeTracker::GetOwningGameMode(class AKSGameMode** OutGameMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAccoladeTracker.GetOwningGameMode");

	UKSAccoladeTracker_GetOwningGameMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutGameMode != nullptr)
		*OutGameMode = params.OutGameMode;

	return params.ReturnValue;
}


// Function Killstreak.KSAccoladeTracker.DispatchGameStateAccoladeDisplay
// (Native, Protected, BlueprintCallable)
// Parameters:
// class AKSPlayerState**         RelevantPlayer                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FAccoladeDisplayInfo*   AccoladeToDisplay              (Parm)
// bool*                          IgnoreRelevantPlayerId         (Parm, ZeroConstructor, IsPlainOldData)

void UKSAccoladeTracker::DispatchGameStateAccoladeDisplay(class AKSPlayerState** RelevantPlayer, struct FAccoladeDisplayInfo* AccoladeToDisplay, bool* IgnoreRelevantPlayerId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAccoladeTracker.DispatchGameStateAccoladeDisplay");

	UKSAccoladeTracker_DispatchGameStateAccoladeDisplay_Params params;
	params.RelevantPlayer = RelevantPlayer;
	params.AccoladeToDisplay = AccoladeToDisplay;
	params.IgnoreRelevantPlayerId = IgnoreRelevantPlayerId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSActivity.InitNewlyCreatedActivity
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// int64_t*                       InItemId                       (Parm, ZeroConstructor, IsPlainOldData)
// int64_t*                       InProgressLootId               (Parm, ZeroConstructor, IsPlainOldData)
// int64_t*                       InRewardXpTableId              (Parm, ZeroConstructor, IsPlainOldData)
// int64_t*                       InRewardVendorId               (Parm, ZeroConstructor, IsPlainOldData)

void UKSActivity::InitNewlyCreatedActivity(int64_t* InItemId, int64_t* InProgressLootId, int64_t* InRewardXpTableId, int64_t* InRewardVendorId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivity.InitNewlyCreatedActivity");

	UKSActivity_InitNewlyCreatedActivity_Params params;
	params.InItemId = InItemId;
	params.InProgressLootId = InProgressLootId;
	params.InRewardXpTableId = InRewardXpTableId;
	params.InRewardVendorId = InRewardVendorId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSActivity.GetInstanceForPlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject**                WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AKSPlayerController**    Player                         (Parm, ZeroConstructor, IsPlainOldData)
// class UKSActivityInstance*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UKSActivityInstance* UKSActivity::GetInstanceForPlayer(class UObject** WorldContextObject, class AKSPlayerController** Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivity.GetInstanceForPlayer");

	UKSActivity_GetInstanceForPlayer_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSActivityInstance.UpdateActivityTiers
// (Final, Native, Public)

void UKSActivityInstance::UpdateActivityTiers()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityInstance.UpdateActivityTiers");

	UKSActivityInstance_UpdateActivityTiers_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSActivityInstance.OnEventTrackerTriggered
// (Final, Native, Protected)
// Parameters:
// int*                           Count                          (Parm, ZeroConstructor, IsPlainOldData)

void UKSActivityInstance::OnEventTrackerTriggered(int* Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityInstance.OnEventTrackerTriggered");

	UKSActivityInstance_OnEventTrackerTriggered_Params params;
	params.Count = Count;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSActivityInstance.IsUnlocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSActivityInstance::IsUnlocked()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityInstance.IsUnlocked");

	UKSActivityInstance_IsUnlocked_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSActivityInstance.IsFinished
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSActivityInstance::IsFinished()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityInstance.IsFinished");

	UKSActivityInstance_IsFinished_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSActivityInstance.IsActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSActivityInstance::IsActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityInstance.IsActive");

	UKSActivityInstance_IsActive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSActivityInstance.IncrementProgress
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int*                           Count                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSActivityInstance::IncrementProgress(int* Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityInstance.IncrementProgress");

	UKSActivityInstance_IncrementProgress_Params params;
	params.Count = Count;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSActivityInstance.HasPlatformAchievement
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSActivityInstance::HasPlatformAchievement()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityInstance.HasPlatformAchievement");

	UKSActivityInstance_HasPlatformAchievement_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSActivityInstance.HasAuthority
// (Final, Native, Protected, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSActivityInstance::HasAuthority()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityInstance.HasAuthority");

	UKSActivityInstance_HasAuthority_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSActivityInstance.GetTiers
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FActivityTier>   Tiers                          (Parm, OutParm, ZeroConstructor)

void UKSActivityInstance::GetTiers(TArray<struct FActivityTier>* Tiers)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityInstance.GetTiers");

	UKSActivityInstance_GetTiers_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Tiers != nullptr)
		*Tiers = params.Tiers;
}


// Function Killstreak.KSActivityInstance.GetProgressTier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FActivityTier           ReturnValue                    (Parm, OutParm, ReturnParm)

struct FActivityTier UKSActivityInstance::GetProgressTier()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityInstance.GetProgressTier");

	UKSActivityInstance_GetProgressTier_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSActivityInstance.GetProgressPercentageToNextTier
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ProgressPercentage             (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSActivityInstance::GetProgressPercentageToNextTier(float* ProgressPercentage)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityInstance.GetProgressPercentageToNextTier");

	UKSActivityInstance_GetProgressPercentageToNextTier_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (ProgressPercentage != nullptr)
		*ProgressPercentage = params.ProgressPercentage;

	return params.ReturnValue;
}


// Function Killstreak.KSActivityInstance.GetProgressPercentageToMaxTier
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ProgressPercentage             (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSActivityInstance::GetProgressPercentageToMaxTier(float* ProgressPercentage)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityInstance.GetProgressPercentageToMaxTier");

	UKSActivityInstance_GetProgressPercentageToMaxTier_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (ProgressPercentage != nullptr)
		*ProgressPercentage = params.ProgressPercentage;

	return params.ReturnValue;
}


// Function Killstreak.KSActivityInstance.GetProgressEarned
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UKSActivityInstance::GetProgressEarned()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityInstance.GetProgressEarned");

	UKSActivityInstance_GetProgressEarned_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSActivityInstance.GetProgressDisplayText
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EKSActivityProgressDisplayType* DisplayType                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UKSActivityInstance::GetProgressDisplayText(EKSActivityProgressDisplayType* DisplayType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityInstance.GetProgressDisplayText");

	UKSActivityInstance_GetProgressDisplayText_Params params;
	params.DisplayType = DisplayType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSActivityInstance.GetProgressCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UKSActivityInstance::GetProgressCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityInstance.GetProgressCount");

	UKSActivityInstance_GetProgressCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSActivityInstance.GetPlayerId
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int64_t                        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int64_t UKSActivityInstance::GetPlayerId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityInstance.GetPlayerId");

	UKSActivityInstance_GetPlayerId_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSActivityInstance.GetNextTier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FActivityTier           ReturnValue                    (Parm, OutParm, ReturnParm)

struct FActivityTier UKSActivityInstance::GetNextTier()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityInstance.GetNextTier");

	UKSActivityInstance_GetNextTier_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSActivityInstance.GetMaxTier
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FActivityTier           MaxTier                        (Parm, OutParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSActivityInstance::GetMaxTier(struct FActivityTier* MaxTier)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityInstance.GetMaxTier");

	UKSActivityInstance_GetMaxTier_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (MaxTier != nullptr)
		*MaxTier = params.MaxTier;

	return params.ReturnValue;
}


// Function Killstreak.KSActivityInstance.GetLastProgressTime
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FDateTime               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FDateTime UKSActivityInstance::GetLastProgressTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityInstance.GetLastProgressTime");

	UKSActivityInstance_GetLastProgressTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSActivityInstance.GetInventoryProgressCount
// (Final, Native, Protected)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UKSActivityInstance::GetInventoryProgressCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityInstance.GetInventoryProgressCount");

	UKSActivityInstance_GetInventoryProgressCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSActivityInstance.GetInventoryId
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FInventoryId            ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm)

struct FInventoryId UKSActivityInstance::GetInventoryId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityInstance.GetInventoryId");

	UKSActivityInstance_GetInventoryId_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSActivityInstance.CreateTracker
// (Final, Native, Protected)

void UKSActivityInstance::CreateTracker()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityInstance.CreateTracker");

	UKSActivityInstance_CreateTracker_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSActivityManagerBase.RequestActivitiesLoad
// (Final, Native, Private)

void UKSActivityManagerBase::RequestActivitiesLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityManagerBase.RequestActivitiesLoad");

	UKSActivityManagerBase_RequestActivitiesLoad_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSActivityManagerBase.QueryActivityInstancesByTime
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// TArray<class UKSActivityInstance*>* ActivityInstances              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// struct FTimespan*              TimeWindow                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// TArray<class UKSActivityInstance*> Results                        (Parm, OutParm, ZeroConstructor)
// EKSActivityTimeQueryType*      QueryType                      (Parm, ZeroConstructor, IsPlainOldData)
// class AKSPlayerController**    Player                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSActivityManagerBase::QueryActivityInstancesByTime(TArray<class UKSActivityInstance*>* ActivityInstances, struct FTimespan* TimeWindow, EKSActivityTimeQueryType* QueryType, class AKSPlayerController** Player, TArray<class UKSActivityInstance*>* Results)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityManagerBase.QueryActivityInstancesByTime");

	UKSActivityManagerBase_QueryActivityInstancesByTime_Params params;
	params.ActivityInstances = ActivityInstances;
	params.TimeWindow = TimeWindow;
	params.QueryType = QueryType;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Results != nullptr)
		*Results = params.Results;

	return params.ReturnValue;
}


// Function Killstreak.KSActivityManagerBase.QueryActivityInstances
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<class UKSActivityInstance*>* ActivityInstances              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// EKSActivityInstanceQueryType*  QueryType                      (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UKSActivityInstance*> Results                        (Parm, OutParm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSActivityManagerBase::QueryActivityInstances(TArray<class UKSActivityInstance*>* ActivityInstances, EKSActivityInstanceQueryType* QueryType, TArray<class UKSActivityInstance*>* Results)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityManagerBase.QueryActivityInstances");

	UKSActivityManagerBase_QueryActivityInstances_Params params;
	params.ActivityInstances = ActivityInstances;
	params.QueryType = QueryType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Results != nullptr)
		*Results = params.Results;

	return params.ReturnValue;
}


// Function Killstreak.KSActivityManagerBase.OnStoreVendorsLoaded
// (Final, Native, Private, HasOutParms)
// Parameters:
// int*                           GroupId                        (Parm, ZeroConstructor, IsPlainOldData)
// TArray<int>*                   VendorIds                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UKSActivityManagerBase::OnStoreVendorsLoaded(int* GroupId, TArray<int>* VendorIds)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityManagerBase.OnStoreVendorsLoaded");

	UKSActivityManagerBase_OnStoreVendorsLoaded_Params params;
	params.GroupId = GroupId;
	params.VendorIds = VendorIds;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSActivityManagerBase.OnSetupPhaseStarted
// (Native, Protected)
// Parameters:
// EKSActivityManagerSetupPhase*  Phase                          (Parm, ZeroConstructor, IsPlainOldData)

void UKSActivityManagerBase::OnSetupPhaseStarted(EKSActivityManagerSetupPhase* Phase)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityManagerBase.OnSetupPhaseStarted");

	UKSActivityManagerBase_OnSetupPhaseStarted_Params params;
	params.Phase = Phase;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSActivityManagerBase.OnSetupPhaseFinished
// (Native, Protected)
// Parameters:
// EKSActivityManagerSetupPhase*  Phase                          (Parm, ZeroConstructor, IsPlainOldData)

void UKSActivityManagerBase::OnSetupPhaseFinished(EKSActivityManagerSetupPhase* Phase)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityManagerBase.OnSetupPhaseFinished");

	UKSActivityManagerBase_OnSetupPhaseFinished_Params params;
	params.Phase = Phase;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSActivityManagerBase.OnServerPlayerPostLogin
// (Final, Native, Private)
// Parameters:
// class AGameModeBase**          InGameMode                     (Parm, ZeroConstructor, IsPlainOldData)
// class APlayerController**      NewPlayer                      (Parm, ZeroConstructor, IsPlainOldData)

void UKSActivityManagerBase::OnServerPlayerPostLogin(class AGameModeBase** InGameMode, class APlayerController** NewPlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityManagerBase.OnServerPlayerPostLogin");

	UKSActivityManagerBase_OnServerPlayerPostLogin_Params params;
	params.InGameMode = InGameMode;
	params.NewPlayer = NewPlayer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSActivityManagerBase.OnServerPlayerLogout
// (Final, Native, Private)
// Parameters:
// class AGameModeBase**          InGameMode                     (Parm, ZeroConstructor, IsPlainOldData)
// class AController**            Player                         (Parm, ZeroConstructor, IsPlainOldData)

void UKSActivityManagerBase::OnServerPlayerLogout(class AGameModeBase** InGameMode, class AController** Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityManagerBase.OnServerPlayerLogout");

	UKSActivityManagerBase_OnServerPlayerLogout_Params params;
	params.InGameMode = InGameMode;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSActivityManagerBase.OnGameModePhaseChanged
// (Native, Protected)
// Parameters:
// struct FName*                  PreviousPhaseName              (Parm, ZeroConstructor, IsPlainOldData)
// struct FName*                  NewPhaseName                   (Parm, ZeroConstructor, IsPlainOldData)

void UKSActivityManagerBase::OnGameModePhaseChanged(struct FName* PreviousPhaseName, struct FName* NewPhaseName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityManagerBase.OnGameModePhaseChanged");

	UKSActivityManagerBase_OnGameModePhaseChanged_Params params;
	params.PreviousPhaseName = PreviousPhaseName;
	params.NewPhaseName = NewPhaseName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSActivityManagerBase.OnGameModeInitialized
// (Final, Native, Private)
// Parameters:
// class AGameModeBase**          InGameMode                     (Parm, ZeroConstructor, IsPlainOldData)

void UKSActivityManagerBase::OnGameModeInitialized(class AGameModeBase** InGameMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityManagerBase.OnGameModeInitialized");

	UKSActivityManagerBase_OnGameModeInitialized_Params params;
	params.InGameMode = InGameMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSActivityManagerBase.OnClientLoggedIn
// (Final, Native, Private)

void UKSActivityManagerBase::OnClientLoggedIn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityManagerBase.OnClientLoggedIn");

	UKSActivityManagerBase_OnClientLoggedIn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSActivityManagerBase.OnAllActivitiesLoaded
// (Final, Native, Private)

void UKSActivityManagerBase::OnAllActivitiesLoaded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityManagerBase.OnAllActivitiesLoaded");

	UKSActivityManagerBase_OnAllActivitiesLoaded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSActivityManagerBase.IsSetupFinished
// (Final, Native, Protected)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSActivityManagerBase::IsSetupFinished()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityManagerBase.IsSetupFinished");

	UKSActivityManagerBase_IsSetupFinished_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSActivityManagerBase.IsAchievementIntegrationEnabled
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSActivityManagerBase::IsAchievementIntegrationEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityManagerBase.IsAchievementIntegrationEnabled");

	UKSActivityManagerBase_IsAchievementIntegrationEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSActivityManagerBase.GoToNextSetupPhase
// (Final, Native, Private)

void UKSActivityManagerBase::GoToNextSetupPhase()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityManagerBase.GoToNextSetupPhase");

	UKSActivityManagerBase_GoToNextSetupPhase_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSActivityManagerBase.GetActivityInstances
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<class UKSActivityInstance*> ActivityInstances              (Parm, OutParm, ZeroConstructor)
// class AKSPlayerController**    Player                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSActivityManagerBase::GetActivityInstances(class AKSPlayerController** Player, TArray<class UKSActivityInstance*>* ActivityInstances)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityManagerBase.GetActivityInstances");

	UKSActivityManagerBase_GetActivityInstances_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (ActivityInstances != nullptr)
		*ActivityInstances = params.ActivityInstances;

	return params.ReturnValue;
}


// Function Killstreak.KSActivityManagerBase.GetActivityInstanceByItemId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64_t*                       ItemId                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AKSPlayerController**    Player                         (Parm, ZeroConstructor, IsPlainOldData)
// class UKSActivityInstance*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UKSActivityInstance* UKSActivityManagerBase::GetActivityInstanceByItemId(int64_t* ItemId, class AKSPlayerController** Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityManagerBase.GetActivityInstanceByItemId");

	UKSActivityManagerBase_GetActivityInstanceByItemId_Params params;
	params.ItemId = ItemId;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSActivityManagerBase.GetActivityInstance
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FInventoryId*           InventoryId                    (ConstParm, Parm, OutParm, ReferenceParm)
// class UKSActivityInstance*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UKSActivityInstance* UKSActivityManagerBase::GetActivityInstance(struct FInventoryId* InventoryId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityManagerBase.GetActivityInstance");

	UKSActivityManagerBase_GetActivityInstance_Params params;
	params.InventoryId = InventoryId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSActivityManagerBase.FindActivity
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// int64_t*                       ReferenceValue1                (Parm, ZeroConstructor, IsPlainOldData)
// int64_t*                       ReferenceValue2                (Parm, ZeroConstructor, IsPlainOldData)
// int64_t*                       ReferenceValue3                (Parm, ZeroConstructor, IsPlainOldData)
// class UKSActivity*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UKSActivity* UKSActivityManagerBase::FindActivity(int64_t* ReferenceValue1, int64_t* ReferenceValue2, int64_t* ReferenceValue3)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityManagerBase.FindActivity");

	UKSActivityManagerBase_FindActivity_Params params;
	params.ReferenceValue1 = ReferenceValue1;
	params.ReferenceValue2 = ReferenceValue2;
	params.ReferenceValue3 = ReferenceValue3;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSActivityManagerBase.FindActivitiesByJob
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UKSJobItem**             JobItem                        (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UKSJobActivity*>  JobActivities                  (Parm, OutParm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSActivityManagerBase::FindActivitiesByJob(class UKSJobItem** JobItem, TArray<class UKSJobActivity*>* JobActivities)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityManagerBase.FindActivitiesByJob");

	UKSActivityManagerBase_FindActivitiesByJob_Params params;
	params.JobItem = JobItem;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (JobActivities != nullptr)
		*JobActivities = params.JobActivities;

	return params.ReturnValue;
}


// Function Killstreak.KSActivityManagerBase.DoesRequireSetupPhase
// (Native, Protected)
// Parameters:
// EKSActivityManagerSetupPhase*  Phase                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSActivityManagerBase::DoesRequireSetupPhase(EKSActivityManagerSetupPhase* Phase)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityManagerBase.DoesRequireSetupPhase");

	UKSActivityManagerBase_DoesRequireSetupPhase_Params params;
	params.Phase = Phase;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSActivityManagerBase.AttemptInitialActivityCreation
// (Final, Native, Private)

void UKSActivityManagerBase::AttemptInitialActivityCreation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityManagerBase.AttemptInitialActivityCreation");

	UKSActivityManagerBase_AttemptInitialActivityCreation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLagCompensatedActor.YieldToRealActor
// (Native, Event, Protected, BlueprintEvent)

void AKSLagCompensatedActor::YieldToRealActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLagCompensatedActor.YieldToRealActor");

	AKSLagCompensatedActor_YieldToRealActor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLagCompensatedActor.TryToDestroy
// (Final, Native, Public, BlueprintCallable)

void AKSLagCompensatedActor::TryToDestroy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLagCompensatedActor.TryToDestroy");

	AKSLagCompensatedActor_TryToDestroy_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLagCompensatedActor.SetLagCompActorIDFromWeapon
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AKSWeapon**              SpawningWeapon                 (Parm, ZeroConstructor, IsPlainOldData)

void AKSLagCompensatedActor::SetLagCompActorIDFromWeapon(class AKSWeapon** SpawningWeapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLagCompensatedActor.SetLagCompActorIDFromWeapon");

	AKSLagCompensatedActor_SetLagCompActorIDFromWeapon_Params params;
	params.SpawningWeapon = SpawningWeapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLagCompensatedActor.SetLagCompActorIDFromParentProjectile
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AKSProjectile**          ParentProjectile               (Parm, ZeroConstructor, IsPlainOldData)
// int*                           Index                          (Parm, ZeroConstructor, IsPlainOldData)

void AKSLagCompensatedActor::SetLagCompActorIDFromParentProjectile(class AKSProjectile** ParentProjectile, int* Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLagCompensatedActor.SetLagCompActorIDFromParentProjectile");

	AKSLagCompensatedActor_SetLagCompActorIDFromParentProjectile_Params params;
	params.ParentProjectile = ParentProjectile;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLagCompensatedActor.SetLagCompActorIDFromModInstance
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UKSPlayerModInstance**   SpawningModInst                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void AKSLagCompensatedActor::SetLagCompActorIDFromModInstance(class UKSPlayerModInstance** SpawningModInst)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLagCompensatedActor.SetLagCompActorIDFromModInstance");

	AKSLagCompensatedActor_SetLagCompActorIDFromModInstance_Params params;
	params.SpawningModInst = SpawningModInst;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLagCompensatedActor.RealActorTakeOver
// (Native, Protected, BlueprintCallable)

void AKSLagCompensatedActor::RealActorTakeOver()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLagCompensatedActor.RealActorTakeOver");

	AKSLagCompensatedActor_RealActorTakeOver_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLagCompensatedActor.RealActorDestroyed
// (Final, Native, Private)
// Parameters:
// class AActor**                 Real                           (Parm, ZeroConstructor, IsPlainOldData)

void AKSLagCompensatedActor::RealActorDestroyed(class AActor** Real)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLagCompensatedActor.RealActorDestroyed");

	AKSLagCompensatedActor_RealActorDestroyed_Params params;
	params.Real = Real;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLagCompensatedActor.OnTakeOverAsRealActor
// (Native, Event, Protected, BlueprintEvent)

void AKSLagCompensatedActor::OnTakeOverAsRealActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLagCompensatedActor.OnTakeOverAsRealActor");

	AKSLagCompensatedActor_OnTakeOverAsRealActor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLagCompensatedActor.OnRep_LagCompActorID
// (Final, Native, Private)

void AKSLagCompensatedActor::OnRep_LagCompActorID()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLagCompensatedActor.OnRep_LagCompActorID");

	AKSLagCompensatedActor_OnRep_LagCompActorID_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLagCompensatedActor.OnRealActorSpawn
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class AKSLagCompensatedActor** Real                           (Parm, ZeroConstructor, IsPlainOldData)

void AKSLagCompensatedActor::OnRealActorSpawn(class AKSLagCompensatedActor** Real)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLagCompensatedActor.OnRealActorSpawn");

	AKSLagCompensatedActor_OnRealActorSpawn_Params params;
	params.Real = Real;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLagCompensatedActor.IsClientPredictedActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSLagCompensatedActor::IsClientPredictedActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLagCompensatedActor.IsClientPredictedActor");

	AKSLagCompensatedActor_IsClientPredictedActor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSLagCompensatedActor.IsActiveRealActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSLagCompensatedActor::IsActiveRealActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLagCompensatedActor.IsActiveRealActor");

	AKSLagCompensatedActor_IsActiveRealActor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSLagCompensatedActor.InitializeRealActor
// (Native, Event, Protected, BlueprintEvent)

void AKSLagCompensatedActor::InitializeRealActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLagCompensatedActor.InitializeRealActor");

	AKSLagCompensatedActor_InitializeRealActor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLagCompensatedActor.InitializeFakeActor
// (Native, Event, Protected, BlueprintEvent)

void AKSLagCompensatedActor::InitializeFakeActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLagCompensatedActor.InitializeFakeActor");

	AKSLagCompensatedActor_InitializeFakeActor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLagCompensatedActor.FakeDestroyCleanup
// (Native, Event, Protected, BlueprintEvent)

void AKSLagCompensatedActor::FakeDestroyCleanup()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLagCompensatedActor.FakeDestroyCleanup");

	AKSLagCompensatedActor_FakeDestroyCleanup_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAgentBase.RefundAgentAsset
// (Native, Protected, BlueprintCallable)

void AKSAgentBase::RefundAgentAsset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAgentBase.RefundAgentAsset");

	AKSAgentBase_RefundAgentAsset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAgentBase.OnRep_CurrentHealth
// (Final, Native, Protected)

void AKSAgentBase::OnRep_CurrentHealth()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAgentBase.OnRep_CurrentHealth");

	AKSAgentBase_OnRep_CurrentHealth_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAgentBase.OnMissionBegin
// (Event, Protected, BlueprintEvent)

void AKSAgentBase::OnMissionBegin()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAgentBase.OnMissionBegin");

	AKSAgentBase_OnMissionBegin_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAgentBase.MovementPlaybackStop
// (Native, Public, HasOutParms)
// Parameters:
// struct FHitResult*             ImpactResult                   (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float*                         Time                           (Parm, ZeroConstructor, IsPlainOldData)

void AKSAgentBase::MovementPlaybackStop(struct FHitResult* ImpactResult, float* Time)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAgentBase.MovementPlaybackStop");

	AKSAgentBase_MovementPlaybackStop_Params params;
	params.ImpactResult = ImpactResult;
	params.Time = Time;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAgentBase.BroadcastMissionBegin
// (Net, NetReliable, Native, Event, NetMulticast, Protected)

void AKSAgentBase::BroadcastMissionBegin()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAgentBase.BroadcastMissionBegin");

	AKSAgentBase_BroadcastMissionBegin_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAgent_RevealDrone.UpdateReplicatedTimer
// (Final, Native, Protected)

void AKSAgent_RevealDrone::UpdateReplicatedTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAgent_RevealDrone.UpdateReplicatedTimer");

	AKSAgent_RevealDrone_UpdateReplicatedTimer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAgent_RevealDrone.StartNextReveal
// (Net, Native, Event, NetMulticast, Protected)

void AKSAgent_RevealDrone::StartNextReveal()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAgent_RevealDrone.StartNextReveal");

	AKSAgent_RevealDrone_StartNextReveal_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAgent_RevealDrone.SetPlayerOwner
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AKSCharacter**           InOwner                        (Parm, ZeroConstructor, IsPlainOldData)

void AKSAgent_RevealDrone::SetPlayerOwner(class AKSCharacter** InOwner)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAgent_RevealDrone.SetPlayerOwner");

	AKSAgent_RevealDrone_SetPlayerOwner_Params params;
	params.InOwner = InOwner;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAgent_RevealDrone.ScrambleEnemies
// (Final, Native, Protected)

void AKSAgent_RevealDrone::ScrambleEnemies()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAgent_RevealDrone.ScrambleEnemies");

	AKSAgent_RevealDrone_ScrambleEnemies_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAgent_RevealDrone.RevealOpposingTeam
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class AKSPlayerController**    PlayerController               (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Threshold                      (Parm, ZeroConstructor, IsPlainOldData)

void AKSAgent_RevealDrone::RevealOpposingTeam(class AKSPlayerController** PlayerController, float* Threshold)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAgent_RevealDrone.RevealOpposingTeam");

	AKSAgent_RevealDrone_RevealOpposingTeam_Params params;
	params.PlayerController = PlayerController;
	params.Threshold = Threshold;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAgent_RevealDrone.Ping
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// int*                           Team                           (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Threshold                      (Parm, ZeroConstructor, IsPlainOldData)
// float*                         SweepSpeed                     (Parm, ZeroConstructor, IsPlainOldData)
// float*                         SweepTimeRemaining             (Parm, ZeroConstructor, IsPlainOldData)

void AKSAgent_RevealDrone::Ping(int* Team, float* Threshold, float* SweepSpeed, float* SweepTimeRemaining)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAgent_RevealDrone.Ping");

	AKSAgent_RevealDrone_Ping_Params params;
	params.Team = Team;
	params.Threshold = Threshold;
	params.SweepSpeed = SweepSpeed;
	params.SweepTimeRemaining = SweepTimeRemaining;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAgent_RevealDrone.GetRevealPeriodDuration
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// float                          Duration                       (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// float                          RemainingTime                  (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void AKSAgent_RevealDrone::GetRevealPeriodDuration(float* Duration, float* RemainingTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAgent_RevealDrone.GetRevealPeriodDuration");

	AKSAgent_RevealDrone_GetRevealPeriodDuration_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Duration != nullptr)
		*Duration = params.Duration;
	if (RemainingTime != nullptr)
		*RemainingTime = params.RemainingTime;
}


// Function Killstreak.KSAgent_RevealDrone.EndRevealPeriod
// (Final, Native, Protected)

void AKSAgent_RevealDrone::EndRevealPeriod()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAgent_RevealDrone.EndRevealPeriod");

	AKSAgent_RevealDrone_EndRevealPeriod_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAgent_RevivalDrone.TargetStartGuaranteedRevive
// (Final, Native, Protected)
// Parameters:
// class AKSCharacter**           InCharacter                    (Parm, ZeroConstructor, IsPlainOldData)

void AKSAgent_RevivalDrone::TargetStartGuaranteedRevive(class AKSCharacter** InCharacter)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAgent_RevivalDrone.TargetStartGuaranteedRevive");

	AKSAgent_RevivalDrone_TargetStartGuaranteedRevive_Params params;
	params.InCharacter = InCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAgent_RevivalDrone.StartReviveEffects
// (Net, NetReliable, Native, Event, NetMulticast, Protected)

void AKSAgent_RevivalDrone::StartReviveEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAgent_RevivalDrone.StartReviveEffects");

	AKSAgent_RevivalDrone_StartReviveEffects_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAgent_RevivalDrone.SetOutlineVisibility
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool*                          UseOutline                     (Parm, ZeroConstructor, IsPlainOldData)

void AKSAgent_RevivalDrone::SetOutlineVisibility(bool* UseOutline)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAgent_RevivalDrone.SetOutlineVisibility");

	AKSAgent_RevivalDrone_SetOutlineVisibility_Params params;
	params.UseOutline = UseOutline;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAgent_RevivalDrone.SetFriendlyOutlineVisibility
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool*                          UseOutline                     (Parm, ZeroConstructor, IsPlainOldData)

void AKSAgent_RevivalDrone::SetFriendlyOutlineVisibility(bool* UseOutline)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAgent_RevivalDrone.SetFriendlyOutlineVisibility");

	AKSAgent_RevivalDrone_SetFriendlyOutlineVisibility_Params params;
	params.UseOutline = UseOutline;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAgent_RevivalDrone.OnReviveEnd
// (Final, Native, Protected)
// Parameters:
// class AKSCharacter**           RevivingCharacter              (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          SuccessfulRevive               (Parm, ZeroConstructor, IsPlainOldData)

void AKSAgent_RevivalDrone::OnReviveEnd(class AKSCharacter** RevivingCharacter, bool* SuccessfulRevive)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAgent_RevivalDrone.OnReviveEnd");

	AKSAgent_RevivalDrone_OnReviveEnd_Params params;
	params.RevivingCharacter = RevivingCharacter;
	params.SuccessfulRevive = SuccessfulRevive;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAgent_RevivalDrone.OnRep_OngoingReviveEffectsActive
// (Final, Native, Protected)

void AKSAgent_RevivalDrone::OnRep_OngoingReviveEffectsActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAgent_RevivalDrone.OnRep_OngoingReviveEffectsActive");

	AKSAgent_RevivalDrone_OnRep_OngoingReviveEffectsActive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAgent_RevivalDrone.OnRep_DroneVulnerability
// (Final, Native, Protected)

void AKSAgent_RevivalDrone::OnRep_DroneVulnerability()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAgent_RevivalDrone.OnRep_DroneVulnerability");

	AKSAgent_RevivalDrone_OnRep_DroneVulnerability_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAgent_RevivalDrone.OnRep_DroneVisibility
// (Final, Native, Protected)

void AKSAgent_RevivalDrone::OnRep_DroneVisibility()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAgent_RevivalDrone.OnRep_DroneVisibility");

	AKSAgent_RevivalDrone_OnRep_DroneVisibility_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAgent_RevivalDrone.GetReviveProgress
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSAgent_RevivalDrone::GetReviveProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAgent_RevivalDrone.GetReviveProgress");

	AKSAgent_RevivalDrone_GetReviveProgress_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSAgent_RevivalDrone.GetMovementStage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EReviveDroneState              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EReviveDroneState AKSAgent_RevivalDrone::GetMovementStage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAgent_RevivalDrone.GetMovementStage");

	AKSAgent_RevivalDrone_GetMovementStage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSAgent_RevivalDrone.GetFlightPath
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EReviveDroneFlightPath         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EReviveDroneFlightPath AKSAgent_RevivalDrone::GetFlightPath()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAgent_RevivalDrone.GetFlightPath");

	AKSAgent_RevivalDrone_GetFlightPath_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSAgent_RevivalDrone.EventStartReviveEffects
// (Event, Protected, BlueprintEvent)

void AKSAgent_RevivalDrone::EventStartReviveEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAgent_RevivalDrone.EventStartReviveEffects");

	AKSAgent_RevivalDrone_EventStartReviveEffects_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAgent_RevivalDrone.EventOngoingReviveEffectsStarted
// (Event, Protected, BlueprintEvent)

void AKSAgent_RevivalDrone::EventOngoingReviveEffectsStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAgent_RevivalDrone.EventOngoingReviveEffectsStarted");

	AKSAgent_RevivalDrone_EventOngoingReviveEffectsStarted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAgent_RevivalDrone.EventEndReviveEffects
// (Event, Protected, BlueprintEvent)

void AKSAgent_RevivalDrone::EventEndReviveEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAgent_RevivalDrone.EventEndReviveEffects");

	AKSAgent_RevivalDrone_EventEndReviveEffects_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAgent_RevivalDrone.BroadcastMovementState
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// EReviveDroneState*             State                          (Parm, ZeroConstructor, IsPlainOldData)

void AKSAgent_RevivalDrone::BroadcastMovementState(EReviveDroneState* State)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAgent_RevivalDrone.BroadcastMovementState");

	AKSAgent_RevivalDrone_BroadcastMovementState_Params params;
	params.State = State;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAgent_RevivalDrone.BroadcastEndReviveEffects
// (Net, Native, Event, NetMulticast, Protected)

void AKSAgent_RevivalDrone::BroadcastEndReviveEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAgent_RevivalDrone.BroadcastEndReviveEffects");

	AKSAgent_RevivalDrone_BroadcastEndReviveEffects_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAgent_RevivalDrone.BroadcastDroneVulnerability
// (Final, Native, Protected)
// Parameters:
// bool*                          Vulnerable                     (Parm, ZeroConstructor, IsPlainOldData)

void AKSAgent_RevivalDrone::BroadcastDroneVulnerability(bool* Vulnerable)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAgent_RevivalDrone.BroadcastDroneVulnerability");

	AKSAgent_RevivalDrone_BroadcastDroneVulnerability_Params params;
	params.Vulnerable = Vulnerable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAgent_RevivalDrone.BroadcastDroneVisibility
// (Final, Native, Protected)
// Parameters:
// bool*                          Visible                        (Parm, ZeroConstructor, IsPlainOldData)

void AKSAgent_RevivalDrone::BroadcastDroneVisibility(bool* Visible)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAgent_RevivalDrone.BroadcastDroneVisibility");

	AKSAgent_RevivalDrone_BroadcastDroneVisibility_Params params;
	params.Visible = Visible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAgent_RevivalDrone.BeginRevive
// (Final, Native, Protected)

void AKSAgent_RevivalDrone::BeginRevive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAgent_RevivalDrone.BeginRevive");

	AKSAgent_RevivalDrone_BeginRevive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAgent_RevivalDrone.ApplyDroneVulnerabilityInternal
// (Final, Native, Protected)

void AKSAgent_RevivalDrone::ApplyDroneVulnerabilityInternal()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAgent_RevivalDrone.ApplyDroneVulnerabilityInternal");

	AKSAgent_RevivalDrone_ApplyDroneVulnerabilityInternal_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAgent_RevivalDrone.ApplyDroneVisibilityInternal
// (Final, Native, Protected)

void AKSAgent_RevivalDrone::ApplyDroneVisibilityInternal()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAgent_RevivalDrone.ApplyDroneVisibilityInternal");

	AKSAgent_RevivalDrone_ApplyDroneVisibilityInternal_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAgent_RevivalDrone.ActivateDroneOngoingEffects
// (Final, Native, Public, BlueprintCallable)

void AKSAgent_RevivalDrone::ActivateDroneOngoingEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAgent_RevivalDrone.ActivateDroneOngoingEffects");

	AKSAgent_RevivalDrone_ActivateDroneOngoingEffects_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAIController.SetNavigationInteractTarget
// (Final, Native, Public)

void AKSAIController::SetNavigationInteractTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAIController.SetNavigationInteractTarget");

	AKSAIController_SetNavigationInteractTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAIController.OnPawnKilled
// (Final, Native, Protected)
// Parameters:
// class AKSCharacterBase**       KillerCharacter                (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void AKSAIController::OnPawnKilled(class AKSCharacterBase** KillerCharacter)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAIController.OnPawnKilled");

	AKSAIController_OnPawnKilled_Params params;
	params.KillerCharacter = KillerCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAIController.HandleTeamSidesFlipped
// (Final, Native, Protected)

void AKSAIController::HandleTeamSidesFlipped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAIController.HandleTeamSidesFlipped");

	AKSAIController_HandleTeamSidesFlipped_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAIController.GetOwnedCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AKSCharacter*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AKSCharacter* AKSAIController::GetOwnedCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAIController.GetOwnedCharacter");

	AKSAIController_GetOwnedCharacter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSAIController.GetNavigationInteractTarget
// (Final, Native, Public, Const)
// Parameters:
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AActor* AKSAIController::GetNavigationInteractTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAIController.GetNavigationInteractTarget");

	AKSAIController_GetNavigationInteractTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSAIController.GetKSPerceptionComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UKSAIPerceptionComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UKSAIPerceptionComponent* AKSAIController::GetKSPerceptionComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAIController.GetKSPerceptionComponent");

	AKSAIController_GetKSPerceptionComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSAIController.ClearNavigationInteractTarget
// (Final, Native, Public)

void AKSAIController::ClearNavigationInteractTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAIController.ClearNavigationInteractTarget");

	AKSAIController_ClearNavigationInteractTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAIDifficultyComponent.GetCurrentDifficulty
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UKSBTDifficulty*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UKSBTDifficulty* UKSAIDifficultyComponent::GetCurrentDifficulty()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAIDifficultyComponent.GetCurrentDifficulty");

	UKSAIDifficultyComponent_GetCurrentDifficulty_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSAIDifficultyComponent.ChangeDifficulty
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UKSBTDifficulty**        DifficultyIn                   (Parm, ZeroConstructor, IsPlainOldData)

void UKSAIDifficultyComponent::ChangeDifficulty(class UKSBTDifficulty** DifficultyIn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAIDifficultyComponent.ChangeDifficulty");

	UKSAIDifficultyComponent_ChangeDifficulty_Params params;
	params.DifficultyIn = DifficultyIn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAIItemPriorityComponent.InsertPriority
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FKSBTItemPriorityTableRow* ItemPriority                   (ConstParm, Parm, OutParm, ReferenceParm)

void UKSAIItemPriorityComponent::InsertPriority(struct FKSBTItemPriorityTableRow* ItemPriority)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAIItemPriorityComponent.InsertPriority");

	UKSAIItemPriorityComponent_InsertPriority_Params params;
	params.ItemPriority = ItemPriority;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAIItemPriorityComponent.InsertPriorities
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UDataTable**             ItemPriorityTable              (Parm, ZeroConstructor, IsPlainOldData)

void UKSAIItemPriorityComponent::InsertPriorities(class UDataTable** ItemPriorityTable)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAIItemPriorityComponent.InsertPriorities");

	UKSAIItemPriorityComponent_InsertPriorities_Params params;
	params.ItemPriorityTable = ItemPriorityTable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAIItemPriorityComponent.GetWeightByName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString*                ItemName                       (Parm, ZeroConstructor)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSAIItemPriorityComponent::GetWeightByName(struct FString* ItemName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAIItemPriorityComponent.GetWeightByName");

	UKSAIItemPriorityComponent_GetWeightByName_Params params;
	params.ItemName = ItemName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSAIItemPriorityComponent.GetWeight
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSAIItemPriorityComponent::GetWeight()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAIItemPriorityComponent.GetWeight");

	UKSAIItemPriorityComponent_GetWeight_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSAIItemPriorityComponent.GetShopPurchaseWeightByName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString*                ItemName                       (Parm, ZeroConstructor)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSAIItemPriorityComponent::GetShopPurchaseWeightByName(struct FString* ItemName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAIItemPriorityComponent.GetShopPurchaseWeightByName");

	UKSAIItemPriorityComponent_GetShopPurchaseWeightByName_Params params;
	params.ItemName = ItemName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSAIItemPriorityComponent.GetShopPurchaseWeight
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSAIItemPriorityComponent::GetShopPurchaseWeight()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAIItemPriorityComponent.GetShopPurchaseWeight");

	UKSAIItemPriorityComponent_GetShopPurchaseWeight_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSAIItemPriorityComponent.GetShopPriorityGroupByName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString*                ItemName                       (Parm, ZeroConstructor)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSAIItemPriorityComponent::GetShopPriorityGroupByName(struct FString* ItemName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAIItemPriorityComponent.GetShopPriorityGroupByName");

	UKSAIItemPriorityComponent_GetShopPriorityGroupByName_Params params;
	params.ItemName = ItemName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSAIItemPriorityComponent.GetShopPriorityGroup
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSAIItemPriorityComponent::GetShopPriorityGroup()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAIItemPriorityComponent.GetShopPriorityGroup");

	UKSAIItemPriorityComponent_GetShopPriorityGroup_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSAIItemPriorityComponent.GetPriorityMultiplierByName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString*                ItemName                       (Parm, ZeroConstructor)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSAIItemPriorityComponent::GetPriorityMultiplierByName(struct FString* ItemName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAIItemPriorityComponent.GetPriorityMultiplierByName");

	UKSAIItemPriorityComponent_GetPriorityMultiplierByName_Params params;
	params.ItemName = ItemName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSAIItemPriorityComponent.GetPriorityMultiplier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSAIItemPriorityComponent::GetPriorityMultiplier()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAIItemPriorityComponent.GetPriorityMultiplier");

	UKSAIItemPriorityComponent_GetPriorityMultiplier_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSAIItemPriorityComponent.ClearPriorities
// (Final, Native, Public, BlueprintCallable)

void UKSAIItemPriorityComponent::ClearPriorities()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAIItemPriorityComponent.ClearPriorities");

	UKSAIItemPriorityComponent_ClearPriorities_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAimAssistActor.ResetHealth
// (Final, Native, Public, BlueprintCallable)

void AKSAimAssistActor::ResetHealth()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAimAssistActor.ResetHealth");

	AKSAimAssistActor_ResetHealth_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAimAssistActor.OnRep_HealthInfo
// (Final, Native, Protected)

void AKSAimAssistActor::OnRep_HealthInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAimAssistActor.OnRep_HealthInfo");

	AKSAimAssistActor_OnRep_HealthInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAimAssistActor.OnKilled
// (Native, Event, Protected, BlueprintEvent)

void AKSAimAssistActor::OnKilled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAimAssistActor.OnKilled");

	AKSAimAssistActor_OnKilled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAimAssistActor.ModifyIncomingDamageTaken
// (Native, Event, Public, HasOutParms, BlueprintEvent, Const)
// Parameters:
// float*                         DamageAmount                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FDamageEvent*           DamageEvent                    (ConstParm, Parm, OutParm, ReferenceParm)
// class AController**            EventInstigator                (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 DamagedActor                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSAimAssistActor::ModifyIncomingDamageTaken(float* DamageAmount, struct FDamageEvent* DamageEvent, class AController** EventInstigator, class AActor** DamageCauser, class AActor** DamagedActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAimAssistActor.ModifyIncomingDamageTaken");

	AKSAimAssistActor_ModifyIncomingDamageTaken_Params params;
	params.DamageAmount = DamageAmount;
	params.DamageEvent = DamageEvent;
	params.EventInstigator = EventInstigator;
	params.DamageCauser = DamageCauser;
	params.DamagedActor = DamagedActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSAimAssistActor.IsValidIncomingDamage
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class UClass**                 DamageTypeClass                (Parm, ZeroConstructor, IsPlainOldData)
// class AController**            EventInstigator                (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 DamagedActor                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSAimAssistActor::IsValidIncomingDamage(class UClass** DamageTypeClass, class AController** EventInstigator, class AActor** DamageCauser, class AActor** DamagedActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAimAssistActor.IsValidIncomingDamage");

	AKSAimAssistActor_IsValidIncomingDamage_Params params;
	params.DamageTypeClass = DamageTypeClass;
	params.EventInstigator = EventInstigator;
	params.DamageCauser = DamageCauser;
	params.DamagedActor = DamagedActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSAimAssistActor.GetAAHeadLocation
// (Native, Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector AKSAimAssistActor::GetAAHeadLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAimAssistActor.GetAAHeadLocation");

	AKSAimAssistActor_GetAAHeadLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSAimAssistActor.GetAABodyLocation
// (Native, Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector AKSAimAssistActor::GetAABodyLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAimAssistActor.GetAABodyLocation");

	AKSAimAssistActor_GetAABodyLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSAimAssistActor.CanBeHitByWeapon
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class UKSWeaponAsset**         Weapon                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSAimAssistActor::CanBeHitByWeapon(class UKSWeaponAsset** Weapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAimAssistActor.CanBeHitByWeapon");

	AKSAimAssistActor_CanBeHitByWeapon_Params params;
	params.Weapon = Weapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSAimAssistActor.AimAssistRightNow
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class AKSPlayerController**    PlayerController               (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSAimAssistActor::AimAssistRightNow(class AKSPlayerController** PlayerController)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAimAssistActor.AimAssistRightNow");

	AKSAimAssistActor_AimAssistRightNow_Params params;
	params.PlayerController = PlayerController;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSAimAssistComponent.GetScaledProjectionBoundsForActor
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class APlayerController**      Player                         (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 InActor                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FBox2D                  OutBounds                      (Parm, OutParm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSAimAssistComponent::STATIC_GetScaledProjectionBoundsForActor(class APlayerController** Player, class AActor** InActor, struct FBox2D* OutBounds)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAimAssistComponent.GetScaledProjectionBoundsForActor");

	UKSAimAssistComponent_GetScaledProjectionBoundsForActor_Params params;
	params.Player = Player;
	params.InActor = InActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutBounds != nullptr)
		*OutBounds = params.OutBounds;

	return params.ReturnValue;
}


// Function Killstreak.KSAimAssistComponent.GetProjectionSpaceStackBoundary
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSAimAssistComponent::GetProjectionSpaceStackBoundary()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAimAssistComponent.GetProjectionSpaceStackBoundary");

	UKSAimAssistComponent_GetProjectionSpaceStackBoundary_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSAimAssistComponent.GetPlayerOwner
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AKSPlayerController*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AKSPlayerController* UKSAimAssistComponent::GetPlayerOwner()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAimAssistComponent.GetPlayerOwner");

	UKSAimAssistComponent_GetPlayerOwner_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSAimAssistComponent.GetAssistRingScreenSize
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class APlayerController**      Player                         (Parm, ZeroConstructor, IsPlainOldData)
// float*                         ProjectionSpaceSize            (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSAimAssistComponent::STATIC_GetAssistRingScreenSize(class APlayerController** Player, float* ProjectionSpaceSize)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAimAssistComponent.GetAssistRingScreenSize");

	UKSAimAssistComponent_GetAssistRingScreenSize_Params params;
	params.Player = Player;
	params.ProjectionSpaceSize = ProjectionSpaceSize;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSAimAssistComponent.GetActorScreenBoundsForActor
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class APlayerController**      Player                         (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 InActor                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FBox2D                  OutBounds                      (Parm, OutParm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSAimAssistComponent::STATIC_GetActorScreenBoundsForActor(class APlayerController** Player, class AActor** InActor, struct FBox2D* OutBounds)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAimAssistComponent.GetActorScreenBoundsForActor");

	UKSAimAssistComponent_GetActorScreenBoundsForActor_Params params;
	params.Player = Player;
	params.InActor = InActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutBounds != nullptr)
		*OutBounds = params.OutBounds;

	return params.ReturnValue;
}


// Function Killstreak.KSAimAssistTargetInterface.UnregisterAsAimAssistTarget
// (Native, Public, BlueprintCallable)

void UKSAimAssistTargetInterface::UnregisterAsAimAssistTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAimAssistTargetInterface.UnregisterAsAimAssistTarget");

	UKSAimAssistTargetInterface_UnregisterAsAimAssistTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAimAssistTargetInterface.RegisterAsAimAssistTarget
// (Native, Public, BlueprintCallable)

void UKSAimAssistTargetInterface::RegisterAsAimAssistTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAimAssistTargetInterface.RegisterAsAimAssistTarget");

	UKSAimAssistTargetInterface_RegisterAsAimAssistTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAimAssistTargetInterface.GetHeadLocation
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector UKSAimAssistTargetInterface::GetHeadLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAimAssistTargetInterface.GetHeadLocation");

	UKSAimAssistTargetInterface_GetHeadLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSAimAssistTargetInterface.GetBodyLocation
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector UKSAimAssistTargetInterface::GetBodyLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAimAssistTargetInterface.GetBodyLocation");

	UKSAimAssistTargetInterface_GetBodyLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSAimAssistTargetInterface.GetAsActor
// (Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AActor* UKSAimAssistTargetInterface::GetAsActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAimAssistTargetInterface.GetAsActor");

	UKSAimAssistTargetInterface_GetAsActor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSAimAssistTargetInterface.CanBeConsideredForAimAssistRightNow
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AKSPlayerController**    PlayerController               (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSAimAssistTargetInterface::CanBeConsideredForAimAssistRightNow(class AKSPlayerController** PlayerController)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAimAssistTargetInterface.CanBeConsideredForAimAssistRightNow");

	UKSAimAssistTargetInterface_CanBeConsideredForAimAssistRightNow_Params params;
	params.PlayerController = PlayerController;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSAIObjectivePriorityComponent.UpdatePriority
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FName*                  Key                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FKSBTObjectivePriorityTableRow* ObjectivePriority              (ConstParm, Parm, OutParm, ReferenceParm)
// bool*                          ShouldResort                   (Parm, ZeroConstructor, IsPlainOldData)

void UKSAIObjectivePriorityComponent::UpdatePriority(struct FName* Key, struct FKSBTObjectivePriorityTableRow* ObjectivePriority, bool* ShouldResort)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAIObjectivePriorityComponent.UpdatePriority");

	UKSAIObjectivePriorityComponent_UpdatePriority_Params params;
	params.Key = Key;
	params.ObjectivePriority = ObjectivePriority;
	params.ShouldResort = ShouldResort;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAIObjectivePriorityComponent.UpdatePriorities
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UDataTable**             ObjectivePriorityTableIn       (Parm, ZeroConstructor, IsPlainOldData)

void UKSAIObjectivePriorityComponent::UpdatePriorities(class UDataTable** ObjectivePriorityTableIn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAIObjectivePriorityComponent.UpdatePriorities");

	UKSAIObjectivePriorityComponent_UpdatePriorities_Params params;
	params.ObjectivePriorityTableIn = ObjectivePriorityTableIn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAIObjectivePriorityComponent.Setup
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UDataTable**             ObjectivePriorityTableIn       (Parm, ZeroConstructor, IsPlainOldData)

void UKSAIObjectivePriorityComponent::Setup(class UDataTable** ObjectivePriorityTableIn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAIObjectivePriorityComponent.Setup");

	UKSAIObjectivePriorityComponent_Setup_Params params;
	params.ObjectivePriorityTableIn = ObjectivePriorityTableIn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAIObjectivePriorityComponent.InsertPriority
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FName*                  Key                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FKSBTObjectivePriorityTableRow* ObjectivePriority              (ConstParm, Parm, OutParm, ReferenceParm)
// bool*                          ShouldResort                   (Parm, ZeroConstructor, IsPlainOldData)

void UKSAIObjectivePriorityComponent::InsertPriority(struct FName* Key, struct FKSBTObjectivePriorityTableRow* ObjectivePriority, bool* ShouldResort)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAIObjectivePriorityComponent.InsertPriority");

	UKSAIObjectivePriorityComponent_InsertPriority_Params params;
	params.Key = Key;
	params.ObjectivePriority = ObjectivePriority;
	params.ShouldResort = ShouldResort;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAIObjectivePriorityComponent.InsertPriorities
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UDataTable**             ObjectivePriorityTableIn       (Parm, ZeroConstructor, IsPlainOldData)

void UKSAIObjectivePriorityComponent::InsertPriorities(class UDataTable** ObjectivePriorityTableIn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAIObjectivePriorityComponent.InsertPriorities");

	UKSAIObjectivePriorityComponent_InsertPriorities_Params params;
	params.ObjectivePriorityTableIn = ObjectivePriorityTableIn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAIObjectivePriorityComponent.GetPriority
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FName*                  Key                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSAIObjectivePriorityComponent::GetPriority(struct FName* Key)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAIObjectivePriorityComponent.GetPriority");

	UKSAIObjectivePriorityComponent_GetPriority_Params params;
	params.Key = Key;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSAIObjectivePriorityComponent.ClearPriorities
// (Final, Native, Public, BlueprintCallable)

void UKSAIObjectivePriorityComponent::ClearPriorities()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAIObjectivePriorityComponent.ClearPriorities");

	UKSAIObjectivePriorityComponent_ClearPriorities_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAIObjectivePriorityComponent.ApplyPrioritiesFromDifficulty
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UDataTable**             ObjectivePriorityTableIn       (Parm, ZeroConstructor, IsPlainOldData)

void UKSAIObjectivePriorityComponent::ApplyPrioritiesFromDifficulty(class UDataTable** ObjectivePriorityTableIn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAIObjectivePriorityComponent.ApplyPrioritiesFromDifficulty");

	UKSAIObjectivePriorityComponent_ApplyPrioritiesFromDifficulty_Params params;
	params.ObjectivePriorityTableIn = ObjectivePriorityTableIn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAIPerceptionComponent.GetCurrentlyPerceivedStimuli
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass**                 SenseToUse                     (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FKSStimulusEvent> Stimuli                        (Parm, OutParm, ZeroConstructor)

void UKSAIPerceptionComponent::GetCurrentlyPerceivedStimuli(class UClass** SenseToUse, TArray<struct FKSStimulusEvent>* Stimuli)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAIPerceptionComponent.GetCurrentlyPerceivedStimuli");

	UKSAIPerceptionComponent_GetCurrentlyPerceivedStimuli_Params params;
	params.SenseToUse = SenseToUse;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Stimuli != nullptr)
		*Stimuli = params.Stimuli;
}


// Function Killstreak.KSAISense_Objective.ReportObjectiveEvent
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                ObjectiveLocation              (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Loudness                       (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 Instigator                     (Parm, ZeroConstructor, IsPlainOldData)
// float*                         MaxRange                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FName*                  Tag                            (Parm, ZeroConstructor, IsPlainOldData)

void UKSAISense_Objective::STATIC_ReportObjectiveEvent(class UObject** WorldContextObject, struct FVector* ObjectiveLocation, float* Loudness, class AActor** Instigator, float* MaxRange, struct FName* Tag)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAISense_Objective.ReportObjectiveEvent");

	UKSAISense_Objective_ReportObjectiveEvent_Params params;
	params.WorldContextObject = WorldContextObject;
	params.ObjectiveLocation = ObjectiveLocation;
	params.Loudness = Loudness;
	params.Instigator = Instigator;
	params.MaxRange = MaxRange;
	params.Tag = Tag;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAkAmbientSound.StopAmbientSound
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)

void AKSAkAmbientSound::StopAmbientSound()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAkAmbientSound.StopAmbientSound");

	AKSAkAmbientSound_StopAmbientSound_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAkAmbientSound.StopAllKSAmbientSounds
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)

void AKSAkAmbientSound::STATIC_StopAllKSAmbientSounds(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAkAmbientSound.StopAllKSAmbientSounds");

	AKSAkAmbientSound_StopAllKSAmbientSounds_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAkAmbientSound.StartAmbientSound
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)

void AKSAkAmbientSound::StartAmbientSound()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAkAmbientSound.StartAmbientSound");

	AKSAkAmbientSound_StartAmbientSound_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAkAmbientSound.StartAllKSAmbientSounds
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)

void AKSAkAmbientSound::STATIC_StartAllKSAmbientSounds(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAkAmbientSound.StartAllKSAmbientSounds");

	AKSAkAmbientSound_StartAllKSAmbientSounds_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSItemDrop.ShouldShowViewedItemLabel
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSItemDrop::ShouldShowViewedItemLabel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItemDrop.ShouldShowViewedItemLabel");

	AKSItemDrop_ShouldShowViewedItemLabel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSItemDrop.SetInactiveStencilValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EPlayerSilhouetteType*         Value                          (Parm, ZeroConstructor, IsPlainOldData)

void AKSItemDrop::SetInactiveStencilValue(EPlayerSilhouetteType* Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItemDrop.SetInactiveStencilValue");

	AKSItemDrop_SetInactiveStencilValue_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSItemDrop.SetActiveStencilValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EPlayerSilhouetteType*         Value                          (Parm, ZeroConstructor, IsPlainOldData)

void AKSItemDrop::SetActiveStencilValue(EPlayerSilhouetteType* Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItemDrop.SetActiveStencilValue");

	AKSItemDrop_SetActiveStencilValue_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSItemDrop.PlayDestroyedEffects
// (Event, Public, BlueprintEvent)

void AKSItemDrop::PlayDestroyedEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItemDrop.PlayDestroyedEffects");

	AKSItemDrop_PlayDestroyedEffects_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSItemDrop.PickUp
// (Native, Public, BlueprintCallable)
// Parameters:
// class AKSCharacter**           Receiver                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSItemDrop::PickUp(class AKSCharacter** Receiver)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItemDrop.PickUp");

	AKSItemDrop_PickUp_Params params;
	params.Receiver = Receiver;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSItemDrop.OverridePickupFunction
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FScriptDelegate*        ItemPickupOverride             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void AKSItemDrop::OverridePickupFunction(struct FScriptDelegate* ItemPickupOverride)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItemDrop.OverridePickupFunction");

	AKSItemDrop_OverridePickupFunction_Params params;
	params.ItemPickupOverride = ItemPickupOverride;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSItemDrop.OnRootMeshDetached
// (Final, Native, Public)
// Parameters:
// class UKSStaticMeshComponent** ResponsibleMesh                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void AKSItemDrop::OnRootMeshDetached(class UKSStaticMeshComponent** ResponsibleMesh)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItemDrop.OnRootMeshDetached");

	AKSItemDrop_OnRootMeshDetached_Params params;
	params.ResponsibleMesh = ResponsibleMesh;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSItemDrop.OnRep_PendingPickupCharacter
// (Final, Native, Private)

void AKSItemDrop::OnRep_PendingPickupCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItemDrop.OnRep_PendingPickupCharacter");

	AKSItemDrop_OnRep_PendingPickupCharacter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSItemDrop.OnRep_ItemAsset
// (Native, Protected)

void AKSItemDrop::OnRep_ItemAsset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItemDrop.OnRep_ItemAsset");

	AKSItemDrop_OnRep_ItemAsset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSItemDrop.OnRep_DropHidePlayer
// (Final, Native, Private)

void AKSItemDrop::OnRep_DropHidePlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItemDrop.OnRep_DropHidePlayer");

	AKSItemDrop_OnRep_DropHidePlayer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSItemDrop.GetPickupDelegate
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FScriptDelegate         ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, ReferenceParm)

struct FScriptDelegate AKSItemDrop::GetPickupDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItemDrop.GetPickupDelegate");

	AKSItemDrop_GetPickupDelegate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSItemDrop.GetPendingPickupCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AKSCharacter*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AKSCharacter* AKSItemDrop::GetPendingPickupCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItemDrop.GetPendingPickupCharacter");

	AKSItemDrop_GetPendingPickupCharacter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSItemDrop.GetLootSiteSpawnRotation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRotator                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FRotator AKSItemDrop::GetLootSiteSpawnRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItemDrop.GetLootSiteSpawnRotation");

	AKSItemDrop_GetLootSiteSpawnRotation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSItemDrop.GetLabelInfoForSecondaryTitle
// (Native, Event, Public, HasOutParms, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FText                   LabelText                      (Parm, OutParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSItemDrop::GetLabelInfoForSecondaryTitle(struct FText* LabelText)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItemDrop.GetLabelInfoForSecondaryTitle");

	AKSItemDrop_GetLabelInfoForSecondaryTitle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (LabelText != nullptr)
		*LabelText = params.LabelText;

	return params.ReturnValue;
}


// Function Killstreak.KSItemDrop.GetLabelInfoForPrimaryTitle
// (Native, Event, Public, HasOutParms, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FText                   LabelText                      (Parm, OutParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSItemDrop::GetLabelInfoForPrimaryTitle(struct FText* LabelText)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItemDrop.GetLabelInfoForPrimaryTitle");

	AKSItemDrop_GetLabelInfoForPrimaryTitle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (LabelText != nullptr)
		*LabelText = params.LabelText;

	return params.ReturnValue;
}


// Function Killstreak.KSItemDrop.GetItemAsset
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UKSItem*                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UKSItem* AKSItemDrop::GetItemAsset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItemDrop.GetItemAsset");

	AKSItemDrop_GetItemAsset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSItemDrop.CalculateRandomImpulse
// (Native, Event, Public, HasOutParms, HasDefaults, BlueprintEvent, Const)
// Parameters:
// struct FVector                 LinearImpulse                  (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// struct FVector                 AngularImpulse                 (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void AKSItemDrop::CalculateRandomImpulse(struct FVector* LinearImpulse, struct FVector* AngularImpulse)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItemDrop.CalculateRandomImpulse");

	AKSItemDrop_CalculateRandomImpulse_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (LinearImpulse != nullptr)
		*LinearImpulse = params.LinearImpulse;
	if (AngularImpulse != nullptr)
		*AngularImpulse = params.AngularImpulse;
}


// Function Killstreak.KSItemDrop.AsyncItemGiveComplete
// (Final, Native, Private)
// Parameters:
// class UKSItem**                Item                           (Parm, ZeroConstructor, IsPlainOldData)
// class UObject**                GivenObject                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FGiveItemParameters*    InGiveItemParameters           (Parm)
// bool*                          bSuccess                       (Parm, ZeroConstructor, IsPlainOldData)

void AKSItemDrop::AsyncItemGiveComplete(class UKSItem** Item, class UObject** GivenObject, struct FGiveItemParameters* InGiveItemParameters, bool* bSuccess)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItemDrop.AsyncItemGiveComplete");

	AKSItemDrop_AsyncItemGiveComplete_Params params;
	params.Item = Item;
	params.GivenObject = GivenObject;
	params.InGiveItemParameters = InGiveItemParameters;
	params.bSuccess = bSuccess;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSItemDrop.ApplyRandomImpulse
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void AKSItemDrop::ApplyRandomImpulse()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItemDrop.ApplyRandomImpulse");

	AKSItemDrop_ApplyRandomImpulse_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSItemDrop.AllowPickup
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AKSCharacter**           Character                      (Parm, ZeroConstructor, IsPlainOldData)

void AKSItemDrop::AllowPickup(class AKSCharacter** Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItemDrop.AllowPickup");

	AKSItemDrop_AllowPickup_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSItem.SoftGiveToAsync
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class AActor**                 Owner                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FGiveItemParameters*    InGiveItemParameters           (Parm)
// struct FScriptDelegate*        GivenToEvent                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSItem::STATIC_SoftGiveToAsync(class AActor** Owner, struct FGiveItemParameters* InGiveItemParameters, struct FScriptDelegate* GivenToEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItem.SoftGiveToAsync");

	UKSItem_SoftGiveToAsync_Params params;
	params.Owner = Owner;
	params.InGiveItemParameters = InGiveItemParameters;
	params.GivenToEvent = GivenToEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSItem.SoftCreateDropAsync
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FTransform*             SpawnTransform                 (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// class UObject**                WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FDropItemParameters*    InDropItemParameters           (Parm)
// struct FScriptDelegate*        ItemDroppedEvent               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// bool*                          bEnablePhysics                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                InSpawnLinearVelocity          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FVector*                InSpawnAngularVelocity         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSItem::STATIC_SoftCreateDropAsync(struct FTransform* SpawnTransform, class UObject** WorldContextObject, struct FDropItemParameters* InDropItemParameters, struct FScriptDelegate* ItemDroppedEvent, bool* bEnablePhysics, struct FVector* InSpawnLinearVelocity, struct FVector* InSpawnAngularVelocity)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItem.SoftCreateDropAsync");

	UKSItem_SoftCreateDropAsync_Params params;
	params.SpawnTransform = SpawnTransform;
	params.WorldContextObject = WorldContextObject;
	params.InDropItemParameters = InDropItemParameters;
	params.ItemDroppedEvent = ItemDroppedEvent;
	params.bEnablePhysics = bEnablePhysics;
	params.InSpawnLinearVelocity = InSpawnLinearVelocity;
	params.InSpawnAngularVelocity = InSpawnAngularVelocity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSItem.SetCollectionContainer
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FGameplayTagContainer*  InContainer                    (ConstParm, Parm, OutParm, ReferenceParm)

void UKSItem::SetCollectionContainer(struct FGameplayTagContainer* InContainer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItem.SetCollectionContainer");

	UKSItem_SetCollectionContainer_Params params;
	params.InContainer = InContainer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSItem.InitNewlyCreatedItem
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// int64_t*                       InItemId                       (Parm, ZeroConstructor, IsPlainOldData)

void UKSItem::InitNewlyCreatedItem(int64_t* InItemId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItem.InitNewlyCreatedItem");

	UKSItem_InitNewlyCreatedItem_Params params;
	params.InItemId = InItemId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSItem.GiveToAsync
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UKSItem**                Item                           (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 Owner                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FGiveItemParameters*    InGiveItemParameters           (Parm)
// struct FScriptDelegate*        GivenToEvent                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSItem::STATIC_GiveToAsync(class UKSItem** Item, class AActor** Owner, struct FGiveItemParameters* InGiveItemParameters, struct FScriptDelegate* GivenToEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItem.GiveToAsync");

	UKSItem_GiveToAsync_Params params;
	params.Item = Item;
	params.Owner = Owner;
	params.InGiveItemParameters = InGiveItemParameters;
	params.GivenToEvent = GivenToEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSItem.GiveTo
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UKSItem**                Item                           (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 Owner                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FGiveItemParameters*    InGiveItemParameters           (Parm)
// class UObject*                 OutObject                      (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSItem::STATIC_GiveTo(class UKSItem** Item, class AActor** Owner, struct FGiveItemParameters* InGiveItemParameters, class UObject** OutObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItem.GiveTo");

	UKSItem_GiveTo_Params params;
	params.Item = Item;
	params.Owner = Owner;
	params.InGiveItemParameters = InGiveItemParameters;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutObject != nullptr)
		*OutObject = params.OutObject;

	return params.ReturnValue;
}


// Function Killstreak.KSItem.GetTextureAsync
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FScriptDelegate*        IconLoadedEvent                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UKSItem::GetTextureAsync(struct FScriptDelegate* IconLoadedEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItem.GetTextureAsync");

	UKSItem_GetTextureAsync_Params params;
	params.IconLoadedEvent = IconLoadedEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSItem.GetSpecialItemWidgetClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)

void UKSItem::GetSpecialItemWidgetClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItem.GetSpecialItemWidgetClass");

	UKSItem_GetSpecialItemWidgetClass_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSItem.GetItemPrice
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UKSItem::GetItemPrice()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItem.GetItemPrice");

	UKSItem_GetItemPrice_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSItem.GetItemDropClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)

void UKSItem::GetItemDropClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItem.GetItemDropClass");

	UKSItem_GetItemDropClass_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSItem.GetItemDisplayStats
// (Native, Public, BlueprintCallable)
// Parameters:
// TArray<struct FItemDisplayStat> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FItemDisplayStat> UKSItem::GetItemDisplayStats()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItem.GetItemDisplayStats");

	UKSItem_GetItemDisplayStats_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSItem.GetItemCategoryText
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UKSItem::GetItemCategoryText()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItem.GetItemCategoryText");

	UKSItem_GetItemCategoryText_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSItem.GetColorCode
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FColor                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FColor UKSItem::GetColorCode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItem.GetColorCode");

	UKSItem_GetColorCode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSItem.GetCollectionContainer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTagContainer   ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm)

struct FGameplayTagContainer UKSItem::GetCollectionContainer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItem.GetCollectionContainer");

	UKSItem_GetCollectionContainer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSItem.CreateDropAsync
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UKSItem**                Item                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FTransform*             SpawnTransform                 (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// class UObject**                WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FDropItemParameters*    InDropItemParameters           (Parm)
// struct FScriptDelegate*        ItemDroppedEvent               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// bool*                          bEnablePhysics                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                InSpawnLinearVelocity          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FVector*                InSpawnAngularVelocity         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSItem::STATIC_CreateDropAsync(class UKSItem** Item, struct FTransform* SpawnTransform, class UObject** WorldContextObject, struct FDropItemParameters* InDropItemParameters, struct FScriptDelegate* ItemDroppedEvent, bool* bEnablePhysics, struct FVector* InSpawnLinearVelocity, struct FVector* InSpawnAngularVelocity)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItem.CreateDropAsync");

	UKSItem_CreateDropAsync_Params params;
	params.Item = Item;
	params.SpawnTransform = SpawnTransform;
	params.WorldContextObject = WorldContextObject;
	params.InDropItemParameters = InDropItemParameters;
	params.ItemDroppedEvent = ItemDroppedEvent;
	params.bEnablePhysics = bEnablePhysics;
	params.InSpawnLinearVelocity = InSpawnLinearVelocity;
	params.InSpawnAngularVelocity = InSpawnAngularVelocity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSItem.CreateDrop
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UKSItem**                Item                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FTransform*             SpawnTransform                 (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// class UObject**                WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FDropItemParameters*    InDropItemParameters           (Parm)
// class AKSItemDrop*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AKSItemDrop* UKSItem::STATIC_CreateDrop(class UKSItem** Item, struct FTransform* SpawnTransform, class UObject** WorldContextObject, struct FDropItemParameters* InDropItemParameters)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItem.CreateDrop");

	UKSItem_CreateDrop_Params params;
	params.Item = Item;
	params.SpawnTransform = SpawnTransform;
	params.WorldContextObject = WorldContextObject;
	params.InDropItemParameters = InDropItemParameters;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSItem.CanBePickedUpByCharacter
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AKSCharacter**           PotentialOwner                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSItem::CanBePickedUpByCharacter(class AKSCharacter** PotentialOwner)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItem.CanBePickedUpByCharacter");

	UKSItem_CanBePickedUpByCharacter_Params params;
	params.PotentialOwner = PotentialOwner;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSItem.CanBePickedUpBy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor**                 PotentialOwner                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSItem::CanBePickedUpBy(class AActor** PotentialOwner)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItem.CanBePickedUpBy");

	UKSItem_CanBePickedUpBy_Params params;
	params.PotentialOwner = PotentialOwner;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSAmmoDropAsset.GetAmmoType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EAmmoType                      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EAmmoType UKSAmmoDropAsset::GetAmmoType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAmmoDropAsset.GetAmmoType");

	UKSAmmoDropAsset_GetAmmoType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSAnimationAuditComponent.AnimAuditStop
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UKSAnimInstance**        AnimInst                       (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bExportImmediately             (Parm, ZeroConstructor, IsPlainOldData)

void UKSAnimationAuditComponent::AnimAuditStop(class UKSAnimInstance** AnimInst, bool* bExportImmediately)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAnimationAuditComponent.AnimAuditStop");

	UKSAnimationAuditComponent_AnimAuditStop_Params params;
	params.AnimInst = AnimInst;
	params.bExportImmediately = bExportImmediately;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAnimationAuditComponent.AnimAuditStart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UKSAnimInstance**        AnimInst                       (Parm, ZeroConstructor, IsPlainOldData)

void UKSAnimationAuditComponent::AnimAuditStart(class UKSAnimInstance** AnimInst)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAnimationAuditComponent.AnimAuditStart");

	UKSAnimationAuditComponent_AnimAuditStart_Params params;
	params.AnimInst = AnimInst;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAnimationAuditComponent.AnimAuditClear
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UKSAnimInstance**        AnimInst                       (Parm, ZeroConstructor, IsPlainOldData)

void UKSAnimationAuditComponent::AnimAuditClear(class UKSAnimInstance** AnimInst)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAnimationAuditComponent.AnimAuditClear");

	UKSAnimationAuditComponent_AnimAuditClear_Params params;
	params.AnimInst = AnimInst;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAnimInstance.Montage_JumpToRandomSection
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<struct FName>*          SectionNames                   (Parm, ZeroConstructor)
// class UAnimMontage**           Montage                        (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bDisallowCurrentSection        (Parm, ZeroConstructor, IsPlainOldData)

void UKSAnimInstance::Montage_JumpToRandomSection(TArray<struct FName>* SectionNames, class UAnimMontage** Montage, bool* bDisallowCurrentSection)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAnimInstance.Montage_JumpToRandomSection");

	UKSAnimInstance_Montage_JumpToRandomSection_Params params;
	params.SectionNames = SectionNames;
	params.Montage = Montage;
	params.bDisallowCurrentSection = bDisallowCurrentSection;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAnnouncer.ShouldPlayTimeAnnouncementFromGroup
// (Native, Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// TArray<struct FName>*          Groups                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSAnnouncer::ShouldPlayTimeAnnouncementFromGroup(TArray<struct FName>* Groups)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAnnouncer.ShouldPlayTimeAnnouncementFromGroup");

	AKSAnnouncer_ShouldPlayTimeAnnouncementFromGroup_Params params;
	params.Groups = Groups;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSAnnouncer.QueueAnnouncementStruct
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FAnnouncement*          Announcement                   (Parm)
// int*                           teamNum                        (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          DelayProcessing                (Parm, ZeroConstructor, IsPlainOldData)

void AKSAnnouncer::QueueAnnouncementStruct(struct FAnnouncement* Announcement, int* teamNum, bool* DelayProcessing)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAnnouncer.QueueAnnouncementStruct");

	AKSAnnouncer_QueueAnnouncementStruct_Params params;
	params.Announcement = Announcement;
	params.teamNum = teamNum;
	params.DelayProcessing = DelayProcessing;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAnnouncer.QueueAnnouncement
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAkAudioEvent**          AkEvent                        (Parm, ZeroConstructor, IsPlainOldData)
// class UAkAudioEvent**          AltAkEvent                     (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Priority                       (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Lifetime                       (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Delay                          (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Lockout                        (Parm, ZeroConstructor, IsPlainOldData)
// int*                           teamNum                        (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          DelayProcessing                (Parm, ZeroConstructor, IsPlainOldData)

void AKSAnnouncer::QueueAnnouncement(class UAkAudioEvent** AkEvent, class UAkAudioEvent** AltAkEvent, float* Priority, float* Lifetime, float* Delay, float* Lockout, int* teamNum, bool* DelayProcessing)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAnnouncer.QueueAnnouncement");

	AKSAnnouncer_QueueAnnouncement_Params params;
	params.AkEvent = AkEvent;
	params.AltAkEvent = AltAkEvent;
	params.Priority = Priority;
	params.Lifetime = Lifetime;
	params.Delay = Delay;
	params.Lockout = Lockout;
	params.teamNum = teamNum;
	params.DelayProcessing = DelayProcessing;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAnnouncer.ProcessTimeAnnouncementList
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FTimeAnnouncementList   TimeAnnouncementList           (Parm, OutParm, ReferenceParm)
// float*                         Time                           (Parm, ZeroConstructor, IsPlainOldData)
// int*                           teamNum                        (Parm, ZeroConstructor, IsPlainOldData)

void AKSAnnouncer::ProcessTimeAnnouncementList(float* Time, int* teamNum, struct FTimeAnnouncementList* TimeAnnouncementList)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAnnouncer.ProcessTimeAnnouncementList");

	AKSAnnouncer_ProcessTimeAnnouncementList_Params params;
	params.Time = Time;
	params.teamNum = teamNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (TimeAnnouncementList != nullptr)
		*TimeAnnouncementList = params.TimeAnnouncementList;
}


// Function Killstreak.KSAnnouncer.ProcessQueue
// (Final, Native, Public, BlueprintCallable)

void AKSAnnouncer::ProcessQueue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAnnouncer.ProcessQueue");

	AKSAnnouncer_ProcessQueue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAnnouncer.OnMatchTimerUpdate
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// float*                         TimeInWholeSeconds             (Parm, ZeroConstructor, IsPlainOldData)

void AKSAnnouncer::OnMatchTimerUpdate(float* TimeInWholeSeconds)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAnnouncer.OnMatchTimerUpdate");

	AKSAnnouncer_OnMatchTimerUpdate_Params params;
	params.TimeInWholeSeconds = TimeInWholeSeconds;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAnnouncer.OnLockoutComplete
// (Final, Native, Protected)

void AKSAnnouncer::OnLockoutComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAnnouncer.OnLockoutComplete");

	AKSAnnouncer_OnLockoutComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAnnouncer.OnLocalViewTargetMovementModeChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// TEnumAsByte<EMovementMode>*    OldMode                        (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char*                 OldCustomMode                  (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EMovementMode>*    NewMode                        (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char*                 NewCustomMode                  (Parm, ZeroConstructor, IsPlainOldData)

void AKSAnnouncer::OnLocalViewTargetMovementModeChanged(TEnumAsByte<EMovementMode>* OldMode, unsigned char* OldCustomMode, TEnumAsByte<EMovementMode>* NewMode, unsigned char* NewCustomMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAnnouncer.OnLocalViewTargetMovementModeChanged");

	AKSAnnouncer_OnLocalViewTargetMovementModeChanged_Params params;
	params.OldMode = OldMode;
	params.OldCustomMode = OldCustomMode;
	params.NewMode = NewMode;
	params.NewCustomMode = NewCustomMode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAnnouncer.OnLocalViewTargetChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AKSPlayerController**    Controller                     (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 OldViewTarget                  (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 NewViewTarget                  (Parm, ZeroConstructor, IsPlainOldData)

void AKSAnnouncer::OnLocalViewTargetChanged(class AKSPlayerController** Controller, class AActor** OldViewTarget, class AActor** NewViewTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAnnouncer.OnLocalViewTargetChanged");

	AKSAnnouncer_OnLocalViewTargetChanged_Params params;
	params.Controller = Controller;
	params.OldViewTarget = OldViewTarget;
	params.NewViewTarget = NewViewTarget;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAnnouncer.LocalPlayerControllerDestroyed
// (Final, Native, Public)
// Parameters:
// class AActor**                 PlayerController               (Parm, ZeroConstructor, IsPlainOldData)

void AKSAnnouncer::LocalPlayerControllerDestroyed(class AActor** PlayerController)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAnnouncer.LocalPlayerControllerDestroyed");

	AKSAnnouncer_LocalPlayerControllerDestroyed_Params params;
	params.PlayerController = PlayerController;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAnnouncer.GetTeamOverrideForAnnouncementGroup
// (Native, Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// TArray<struct FName>*          Groups                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AKSAnnouncer::GetTeamOverrideForAnnouncementGroup(TArray<struct FName>* Groups)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAnnouncer.GetTeamOverrideForAnnouncementGroup");

	AKSAnnouncer_GetTeamOverrideForAnnouncementGroup_Params params;
	params.Groups = Groups;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSAnnouncer.GetPlayerController
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AKSPlayerController*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AKSPlayerController* AKSAnnouncer::GetPlayerController()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAnnouncer.GetPlayerController");

	AKSAnnouncer_GetPlayerController_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSAnnouncer.EventQueueInGame
// (Event, Public, BlueprintEvent)

void AKSAnnouncer::EventQueueInGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAnnouncer.EventQueueInGame");

	AKSAnnouncer_EventQueueInGame_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAnnouncer.EventLocalPlayerControllerDestroyed
// (Event, Public, BlueprintEvent)
// Parameters:
// class AKSPlayerController**    PlayerController               (Parm, ZeroConstructor, IsPlainOldData)

void AKSAnnouncer::EventLocalPlayerControllerDestroyed(class AKSPlayerController** PlayerController)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAnnouncer.EventLocalPlayerControllerDestroyed");

	AKSAnnouncer_EventLocalPlayerControllerDestroyed_Params params;
	params.PlayerController = PlayerController;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEquipment.Unequip
// (Final, Native, Public)
// Parameters:
// bool*                          bLocal                         (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bWillReequip                   (Parm, ZeroConstructor, IsPlainOldData)

void AKSEquipment::Unequip(bool* bLocal, bool* bWillReequip)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEquipment.Unequip");

	AKSEquipment_Unequip_Params params;
	params.bLocal = bLocal;
	params.bWillReequip = bWillReequip;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEquipment.SetEquipPoint
// (Final, Native, Public, HasOutParms)
// Parameters:
// struct FGameplayTag*           InEquipPoint                   (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSEquipment::SetEquipPoint(struct FGameplayTag* InEquipPoint)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEquipment.SetEquipPoint");

	AKSEquipment_SetEquipPoint_Params params;
	params.InEquipPoint = InEquipPoint;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSEquipment.OnUnequipped
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// bool*                          bWillReequip                   (Parm, ZeroConstructor, IsPlainOldData)

void AKSEquipment::OnUnequipped(bool* bWillReequip)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEquipment.OnUnequipped");

	AKSEquipment_OnUnequipped_Params params;
	params.bWillReequip = bWillReequip;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEquipment.OnRep_EquipPoint
// (Native, Protected)

void AKSEquipment::OnRep_EquipPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEquipment.OnRep_EquipPoint");

	AKSEquipment_OnRep_EquipPoint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEquipment.OnRep_EquipmentId
// (Final, Native, Private)

void AKSEquipment::OnRep_EquipmentId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEquipment.OnRep_EquipmentId");

	AKSEquipment_OnRep_EquipmentId_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEquipment.OnEquipped
// (Native, Event, Protected, BlueprintEvent)

void AKSEquipment::OnEquipped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEquipment.OnEquipped");

	AKSEquipment_OnEquipped_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEquipment.IsInitialized
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSEquipment::IsInitialized()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEquipment.IsInitialized");

	AKSEquipment_IsInitialized_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSEquipment.IsInAction
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSEquipment::IsInAction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEquipment.IsInAction");

	AKSEquipment_IsInAction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSEquipment.IsEquipped
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSEquipment::IsEquipped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEquipment.IsEquipped");

	AKSEquipment_IsEquipped_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSEquipment.GetOriginalOwnerId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AKSEquipment::GetOriginalOwnerId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEquipment.GetOriginalOwnerId");

	AKSEquipment_GetOriginalOwnerId_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSEquipment.GetKSItem
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UKSItem*                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UKSItem* AKSEquipment::GetKSItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEquipment.GetKSItem");

	AKSEquipment_GetKSItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSEquipment.GetEquipPoint
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag            ReturnValue                    (Parm, OutParm, ReturnParm)

struct FGameplayTag AKSEquipment::GetEquipPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEquipment.GetEquipPoint");

	AKSEquipment_GetEquipPoint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSEquipment.GetEquipmentId
// (Final, Native, Public, Const)
// Parameters:
// uint16_t                       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

uint16_t AKSEquipment::GetEquipmentId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEquipment.GetEquipmentId");

	AKSEquipment_GetEquipmentId_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSEquipment.GetCosmeticComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UKSEquipmentCosmeticComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UKSEquipmentCosmeticComponent* AKSEquipment::GetCosmeticComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEquipment.GetCosmeticComponent");

	AKSEquipment_GetCosmeticComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSEquipment.EquipNoPoint
// (Final, Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSEquipment::EquipNoPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEquipment.EquipNoPoint");

	AKSEquipment_EquipNoPoint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSEquipment.Drop
// (Final, Native, Public, BlueprintCallable)

void AKSEquipment::Drop()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEquipment.Drop");

	AKSEquipment_Drop_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.StopFireOnRelease
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeapon::StopFireOnRelease()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.StopFireOnRelease");

	AKSWeapon_StopFireOnRelease_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.StopFire
// (Native, Public, BlueprintCallable)

void AKSWeapon::StopFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.StopFire");

	AKSWeapon_StopFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.StopDefaultAim
// (Native, Event, Protected, BlueprintEvent)

void AKSWeapon::StopDefaultAim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.StopDefaultAim");

	AKSWeapon_StopDefaultAim_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.StopAltFire
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeapon::StopAltFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.StopAltFire");

	AKSWeapon_StopAltFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.StopAimOverShoulder
// (Native, Event, Protected, BlueprintEvent)

void AKSWeapon::StopAimOverShoulder()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.StopAimOverShoulder");

	AKSWeapon_StopAimOverShoulder_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.StopAimDownSights
// (Native, Event, Protected, BlueprintEvent)

void AKSWeapon::StopAimDownSights()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.StopAimDownSights");

	AKSWeapon_StopAimDownSights_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.StateRequestTimeoutExpired
// (Final, Native, Private)

void AKSWeapon::StateRequestTimeoutExpired()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.StateRequestTimeoutExpired");

	AKSWeapon_StateRequestTimeoutExpired_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.StartRetrieving
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeapon::StartRetrieving()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.StartRetrieving");

	AKSWeapon_StartRetrieving_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.StartReload
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeapon::StartReload()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.StartReload");

	AKSWeapon_StartReload_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.StartHolstering
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeapon::StartHolstering()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.StartHolstering");

	AKSWeapon_StartHolstering_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.StartFire
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeapon::StartFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.StartFire");

	AKSWeapon_StartFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.StartDefaultAim
// (Native, Event, Protected, BlueprintEvent)

void AKSWeapon::StartDefaultAim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.StartDefaultAim");

	AKSWeapon_StartDefaultAim_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.StartAltFire
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeapon::StartAltFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.StartAltFire");

	AKSWeapon_StartAltFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.StartAimOverShoulder
// (Native, Event, Protected, BlueprintEvent)

void AKSWeapon::StartAimOverShoulder()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.StartAimOverShoulder");

	AKSWeapon_StartAimOverShoulder_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.StartAimDownSights
// (Native, Event, Protected, BlueprintEvent)

void AKSWeapon::StartAimDownSights()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.StartAimDownSights");

	AKSWeapon_StartAimDownSights_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.SimulateConsumeAmmo
// (Native, Event, Public, HasOutParms, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// int                            AmmoInClipAfterConsume         (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// int                            AmmoToConsumeFromInventory     (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void AKSWeapon::SimulateConsumeAmmo(int* AmmoInClipAfterConsume, int* AmmoToConsumeFromInventory)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.SimulateConsumeAmmo");

	AKSWeapon_SimulateConsumeAmmo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (AmmoInClipAfterConsume != nullptr)
		*AmmoInClipAfterConsume = params.AmmoInClipAfterConsume;
	if (AmmoToConsumeFromInventory != nullptr)
		*AmmoToConsumeFromInventory = params.AmmoToConsumeFromInventory;
}


// Function Killstreak.KSWeapon.ShouldStartReloadInterruptSprinting
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeapon::ShouldStartReloadInterruptSprinting()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.ShouldStartReloadInterruptSprinting");

	AKSWeapon_ShouldStartReloadInterruptSprinting_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.ShouldStartHolsterInterruptSprinting
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeapon::ShouldStartHolsterInterruptSprinting()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.ShouldStartHolsterInterruptSprinting");

	AKSWeapon_ShouldStartHolsterInterruptSprinting_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.ShouldStartFireInterruptSprinting
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeapon::ShouldStartFireInterruptSprinting()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.ShouldStartFireInterruptSprinting");

	AKSWeapon_ShouldStartFireInterruptSprinting_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.ShouldStartFireInterruptAimDownSights
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeapon::ShouldStartFireInterruptAimDownSights()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.ShouldStartFireInterruptAimDownSights");

	AKSWeapon_ShouldStartFireInterruptAimDownSights_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.ShouldConsumeAmmoDirectlyFromInventory
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeapon::ShouldConsumeAmmoDirectlyFromInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.ShouldConsumeAmmoDirectlyFromInventory");

	AKSWeapon_ShouldConsumeAmmoDirectlyFromInventory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.ShouldBeRemovedWhenExhausted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeapon::ShouldBeRemovedWhenExhausted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.ShouldBeRemovedWhenExhausted");

	AKSWeapon_ShouldBeRemovedWhenExhausted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.SetAutoSwapOutWeaponId
// (Final, Native, Public)
// Parameters:
// uint32_t*                      OtherWeaponId                  (Parm, ZeroConstructor, IsPlainOldData)

void AKSWeapon::SetAutoSwapOutWeaponId(uint32_t* OtherWeaponId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.SetAutoSwapOutWeaponId");

	AKSWeapon_SetAutoSwapOutWeaponId_Params params;
	params.OtherWeaponId = OtherWeaponId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.ServerRetrieveActiveWeapon
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// struct FWeaponStateChangeRequest* request                        (ConstParm, Parm, ReferenceParm)

void AKSWeapon::ServerRetrieveActiveWeapon(struct FWeaponStateChangeRequest* request)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.ServerRetrieveActiveWeapon");

	AKSWeapon_ServerRetrieveActiveWeapon_Params params;
	params.request = request;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.ServerRequestStateChange
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// struct FWeaponStateChangeRequest* request                        (ConstParm, Parm, ReferenceParm)

void AKSWeapon::ServerRequestStateChange(struct FWeaponStateChangeRequest* request)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.ServerRequestStateChange");

	AKSWeapon_ServerRequestStateChange_Params params;
	params.request = request;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.ServerPostReload
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// struct FWeaponStateChangeRequest* request                        (ConstParm, Parm, ReferenceParm)
// int*                           AmmoDelta                      (Parm, ZeroConstructor, IsPlainOldData)

void AKSWeapon::ServerPostReload(struct FWeaponStateChangeRequest* request, int* AmmoDelta)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.ServerPostReload");

	AKSWeapon_ServerPostReload_Params params;
	params.request = request;
	params.AmmoDelta = AmmoDelta;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.ServerCookReleased
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// struct FWeaponStateChangeRequest* request                        (ConstParm, Parm, ReferenceParm)
// float*                         AdditionalCookTime             (Parm, ZeroConstructor, IsPlainOldData)

void AKSWeapon::ServerCookReleased(struct FWeaponStateChangeRequest* request, float* AdditionalCookTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.ServerCookReleased");

	AKSWeapon_ServerCookReleased_Params params;
	params.request = request;
	params.AdditionalCookTime = AdditionalCookTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.Reload
// (Native, Event, Protected, BlueprintEvent)

void AKSWeapon::Reload()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.Reload");

	AKSWeapon_Reload_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.ProcessHits
// (Native, Event, Protected, HasOutParms, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FAimData*               ReceivedAim                    (ConstParm, Parm, OutParm, ReferenceParm)
// TArray<struct FHitResult>*     Hits                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void AKSWeapon::ProcessHits(struct FAimData* ReceivedAim, TArray<struct FHitResult>* Hits)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.ProcessHits");

	AKSWeapon_ProcessHits_Params params;
	params.ReceivedAim = ReceivedAim;
	params.Hits = Hits;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.PreLoadAmmo
// (Final, Native, Public, BlueprintCallable)

void AKSWeapon::PreLoadAmmo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.PreLoadAmmo");

	AKSWeapon_PreLoadAmmo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.OwnerIsTransitioningAimState
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeapon::OwnerIsTransitioningAimState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OwnerIsTransitioningAimState");

	AKSWeapon_OwnerIsTransitioningAimState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.OwnerIsSwimming
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeapon::OwnerIsSwimming()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OwnerIsSwimming");

	AKSWeapon_OwnerIsSwimming_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.OwnerIsSprinting
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeapon::OwnerIsSprinting()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OwnerIsSprinting");

	AKSWeapon_OwnerIsSprinting_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.OwnerIsReloadingAnyWeapon
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeapon::OwnerIsReloadingAnyWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OwnerIsReloadingAnyWeapon");

	AKSWeapon_OwnerIsReloadingAnyWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.OwnerIsMovingOnGround
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeapon::OwnerIsMovingOnGround()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OwnerIsMovingOnGround");

	AKSWeapon_OwnerIsMovingOnGround_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.OwnerIsLocallyViewed
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeapon::OwnerIsLocallyViewed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OwnerIsLocallyViewed");

	AKSWeapon_OwnerIsLocallyViewed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.OwnerIsFreeFalling
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeapon::OwnerIsFreeFalling()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OwnerIsFreeFalling");

	AKSWeapon_OwnerIsFreeFalling_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.OwnerIsFiringMeleeWeapon
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeapon::OwnerIsFiringMeleeWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OwnerIsFiringMeleeWeapon");

	AKSWeapon_OwnerIsFiringMeleeWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.OwnerIsDowned
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeapon::OwnerIsDowned()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OwnerIsDowned");

	AKSWeapon_OwnerIsDowned_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.OwnerIsAlive
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeapon::OwnerIsAlive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OwnerIsAlive");

	AKSWeapon_OwnerIsAlive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.OwnerHasAmmo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeapon::OwnerHasAmmo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OwnerHasAmmo");

	AKSWeapon_OwnerHasAmmo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.OnStartRetrieving
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// EWeaponStateNew*               PreviousState                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSWeapon::OnStartRetrieving(EWeaponStateNew* PreviousState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OnStartRetrieving");

	AKSWeapon_OnStartRetrieving_Params params;
	params.PreviousState = PreviousState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.OnStartReloadCooldown
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// EWeaponStateNew*               PreviousState                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSWeapon::OnStartReloadCooldown(EWeaponStateNew* PreviousState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OnStartReloadCooldown");

	AKSWeapon_OnStartReloadCooldown_Params params;
	params.PreviousState = PreviousState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.OnStartPreReload
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// EWeaponStateNew*               PreviousState                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSWeapon::OnStartPreReload(EWeaponStateNew* PreviousState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OnStartPreReload");

	AKSWeapon_OnStartPreReload_Params params;
	params.PreviousState = PreviousState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.OnStartPreFire
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// EWeaponStateNew*               PreviousState                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSWeapon::OnStartPreFire(EWeaponStateNew* PreviousState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OnStartPreFire");

	AKSWeapon_OnStartPreFire_Params params;
	params.PreviousState = PreviousState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.OnStartPostReload
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// EWeaponStateNew*               PreviousState                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSWeapon::OnStartPostReload(EWeaponStateNew* PreviousState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OnStartPostReload");

	AKSWeapon_OnStartPostReload_Params params;
	params.PreviousState = PreviousState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.OnStartPostFire
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// EWeaponStateNew*               PreviousState                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSWeapon::OnStartPostFire(EWeaponStateNew* PreviousState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OnStartPostFire");

	AKSWeapon_OnStartPostFire_Params params;
	params.PreviousState = PreviousState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.OnStartInactive
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// EWeaponStateNew*               PreviousState                  (Parm, ZeroConstructor, IsPlainOldData)

void AKSWeapon::OnStartInactive(EWeaponStateNew* PreviousState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OnStartInactive");

	AKSWeapon_OnStartInactive_Params params;
	params.PreviousState = PreviousState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.OnStartHolstering
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// EWeaponStateNew*               PreviousState                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSWeapon::OnStartHolstering(EWeaponStateNew* PreviousState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OnStartHolstering");

	AKSWeapon_OnStartHolstering_Params params;
	params.PreviousState = PreviousState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.OnStartCooldown
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// EWeaponStateNew*               PreviousState                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSWeapon::OnStartCooldown(EWeaponStateNew* PreviousState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OnStartCooldown");

	AKSWeapon_OnStartCooldown_Params params;
	params.PreviousState = PreviousState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.OnStartBuildup
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// EWeaponStateNew*               PreviousState                  (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSWeapon::OnStartBuildup(EWeaponStateNew* PreviousState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OnStartBuildup");

	AKSWeapon_OnStartBuildup_Params params;
	params.PreviousState = PreviousState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.OnRep_WeaponState
// (Final, Native, Protected)

void AKSWeapon::OnRep_WeaponState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OnRep_WeaponState");

	AKSWeapon_OnRep_WeaponState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.OnRep_WeaponAsset
// (Final, Native, Private)

void AKSWeapon::OnRep_WeaponAsset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OnRep_WeaponAsset");

	AKSWeapon_OnRep_WeaponAsset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.OnRep_AuxiliaryWeaponInfo
// (Final, Native, Protected)

void AKSWeapon::OnRep_AuxiliaryWeaponInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OnRep_AuxiliaryWeaponInfo");

	AKSWeapon_OnRep_AuxiliaryWeaponInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.OnRep_AutoSwapOutWeaponId
// (Final, Native, Private)

void AKSWeapon::OnRep_AutoSwapOutWeaponId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OnRep_AutoSwapOutWeaponId");

	AKSWeapon_OnRep_AutoSwapOutWeaponId_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.OnRep_Ammo
// (Native, Protected)

void AKSWeapon::OnRep_Ammo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OnRep_Ammo");

	AKSWeapon_OnRep_Ammo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.OnPostMantleLockoutEnd
// (Final, Native, Protected)

void AKSWeapon::OnPostMantleLockoutEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OnPostMantleLockoutEnd");

	AKSWeapon_OnPostMantleLockoutEnd_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.OnOwnerMovementModeChangedNative
// (Final, Native, Public)
// Parameters:
// TEnumAsByte<EMovementMode>*    OldMode                        (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char*                 OldCustomMode                  (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EMovementMode>*    NewMode                        (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char*                 NewCustomMode                  (Parm, ZeroConstructor, IsPlainOldData)

void AKSWeapon::OnOwnerMovementModeChangedNative(TEnumAsByte<EMovementMode>* OldMode, unsigned char* OldCustomMode, TEnumAsByte<EMovementMode>* NewMode, unsigned char* NewCustomMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OnOwnerMovementModeChangedNative");

	AKSWeapon_OnOwnerMovementModeChangedNative_Params params;
	params.OldMode = OldMode;
	params.OldCustomMode = OldCustomMode;
	params.NewMode = NewMode;
	params.NewCustomMode = NewCustomMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.OnOwnerMovementModeChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// TEnumAsByte<EMovementMode>*    OldMode                        (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char*                 OldCustomMode                  (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EMovementMode>*    NewMode                        (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char*                 NewCustomMode                  (Parm, ZeroConstructor, IsPlainOldData)

void AKSWeapon::OnOwnerMovementModeChanged(TEnumAsByte<EMovementMode>* OldMode, unsigned char* OldCustomMode, TEnumAsByte<EMovementMode>* NewMode, unsigned char* NewCustomMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OnOwnerMovementModeChanged");

	AKSWeapon_OnOwnerMovementModeChanged_Params params;
	params.OldMode = OldMode;
	params.OldCustomMode = OldCustomMode;
	params.NewMode = NewMode;
	params.NewCustomMode = NewCustomMode;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.OnEndRetrieving
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// EWeaponStateNew*               NextState                      (Parm, ZeroConstructor, IsPlainOldData)

void AKSWeapon::OnEndRetrieving(EWeaponStateNew* NextState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OnEndRetrieving");

	AKSWeapon_OnEndRetrieving_Params params;
	params.NextState = NextState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.OnEndReloadCooldown
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// EWeaponStateNew*               NewState                       (Parm, ZeroConstructor, IsPlainOldData)

void AKSWeapon::OnEndReloadCooldown(EWeaponStateNew* NewState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OnEndReloadCooldown");

	AKSWeapon_OnEndReloadCooldown_Params params;
	params.NewState = NewState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.OnEndPreReload
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// EWeaponStateNew*               NextState                      (Parm, ZeroConstructor, IsPlainOldData)

void AKSWeapon::OnEndPreReload(EWeaponStateNew* NextState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OnEndPreReload");

	AKSWeapon_OnEndPreReload_Params params;
	params.NextState = NextState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.OnEndPreFire
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// EWeaponStateNew*               NextState                      (Parm, ZeroConstructor, IsPlainOldData)

void AKSWeapon::OnEndPreFire(EWeaponStateNew* NextState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OnEndPreFire");

	AKSWeapon_OnEndPreFire_Params params;
	params.NextState = NextState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.OnEndPostReload
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// EWeaponStateNew*               NextState                      (Parm, ZeroConstructor, IsPlainOldData)

void AKSWeapon::OnEndPostReload(EWeaponStateNew* NextState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OnEndPostReload");

	AKSWeapon_OnEndPostReload_Params params;
	params.NextState = NextState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.OnEndPostFire
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// EWeaponStateNew*               NextState                      (Parm, ZeroConstructor, IsPlainOldData)

void AKSWeapon::OnEndPostFire(EWeaponStateNew* NextState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OnEndPostFire");

	AKSWeapon_OnEndPostFire_Params params;
	params.NextState = NextState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.OnEndInactive
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// EWeaponStateNew*               NextState                      (Parm, ZeroConstructor, IsPlainOldData)

void AKSWeapon::OnEndInactive(EWeaponStateNew* NextState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OnEndInactive");

	AKSWeapon_OnEndInactive_Params params;
	params.NextState = NextState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.OnEndIdleState
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// EWeaponStateNew*               NextState                      (Parm, ZeroConstructor, IsPlainOldData)

void AKSWeapon::OnEndIdleState(EWeaponStateNew* NextState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OnEndIdleState");

	AKSWeapon_OnEndIdleState_Params params;
	params.NextState = NextState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.OnEndHolstering
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// EWeaponStateNew*               NextState                      (Parm, ZeroConstructor, IsPlainOldData)

void AKSWeapon::OnEndHolstering(EWeaponStateNew* NextState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OnEndHolstering");

	AKSWeapon_OnEndHolstering_Params params;
	params.NextState = NextState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.OnEndCooldown
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// EWeaponStateNew*               NextState                      (Parm, ZeroConstructor, IsPlainOldData)

void AKSWeapon::OnEndCooldown(EWeaponStateNew* NextState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OnEndCooldown");

	AKSWeapon_OnEndCooldown_Params params;
	params.NextState = NextState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.OnEndBuildup
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// EWeaponStateNew*               NextState                      (Parm, ZeroConstructor, IsPlainOldData)

void AKSWeapon::OnEndBuildup(EWeaponStateNew* NextState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OnEndBuildup");

	AKSWeapon_OnEndBuildup_Params params;
	params.NextState = NextState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.OnBeginIdleState
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// EWeaponStateNew*               PreviousState                  (Parm, ZeroConstructor, IsPlainOldData)

void AKSWeapon::OnBeginIdleState(EWeaponStateNew* PreviousState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OnBeginIdleState");

	AKSWeapon_OnBeginIdleState_Params params;
	params.PreviousState = PreviousState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.ModifyDamageDealt
// (Native, Event, Public, HasOutParms, BlueprintEvent, Const)
// Parameters:
// float*                         DamageAmount                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FDamageEvent*           DamageEvent                    (ConstParm, Parm, OutParm, ReferenceParm)
// class AController**            EventInstigator                (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 DamagedActor                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSWeapon::ModifyDamageDealt(float* DamageAmount, struct FDamageEvent* DamageEvent, class AController** EventInstigator, class AActor** DamageCauser, class AActor** DamagedActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.ModifyDamageDealt");

	AKSWeapon_ModifyDamageDealt_Params params;
	params.DamageAmount = DamageAmount;
	params.DamageEvent = DamageEvent;
	params.EventInstigator = EventInstigator;
	params.DamageCauser = DamageCauser;
	params.DamagedActor = DamagedActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.IsRetrieving
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeapon::IsRetrieving()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.IsRetrieving");

	AKSWeapon_IsRetrieving_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.IsReloading
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeapon::IsReloading()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.IsReloading");

	AKSWeapon_IsReloading_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.IsInSprintRecovery
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeapon::IsInSprintRecovery()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.IsInSprintRecovery");

	AKSWeapon_IsInSprintRecovery_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.IsInReloadingLoop
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeapon::IsInReloadingLoop()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.IsInReloadingLoop");

	AKSWeapon_IsInReloadingLoop_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.IsInFiringLoop
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeapon::IsInFiringLoop()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.IsInFiringLoop");

	AKSWeapon_IsInFiringLoop_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.IsInDodgeRollRecovery
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeapon::IsInDodgeRollRecovery()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.IsInDodgeRollRecovery");

	AKSWeapon_IsInDodgeRollRecovery_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.IsHolstering
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeapon::IsHolstering()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.IsHolstering");

	AKSWeapon_IsHolstering_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.IsFiring
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeapon::IsFiring()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.IsFiring");

	AKSWeapon_IsFiring_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.IsExhausted
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeapon::IsExhausted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.IsExhausted");

	AKSWeapon_IsExhausted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.IsEquippedMelee
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeapon::IsEquippedMelee()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.IsEquippedMelee");

	AKSWeapon_IsEquippedMelee_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.IsEquippedMainWeapon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeapon::IsEquippedMainWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.IsEquippedMainWeapon");

	AKSWeapon_IsEquippedMainWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.IsEquippedGrenade
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeapon::IsEquippedGrenade()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.IsEquippedGrenade");

	AKSWeapon_IsEquippedGrenade_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.IsClipFull
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeapon::IsClipFull()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.IsClipFull");

	AKSWeapon_IsClipFull_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.IsClipEmpty
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeapon::IsClipEmpty()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.IsClipEmpty");

	AKSWeapon_IsClipEmpty_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.IsActiveWeapon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeapon::IsActiveWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.IsActiveWeapon");

	AKSWeapon_IsActiveWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.InstantReload
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeapon::InstantReload()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.InstantReload");

	AKSWeapon_InstantReload_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.HasAttachment
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UKSWeaponAttachmentInstance** InAttachment                   (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeapon::HasAttachment(class UKSWeaponAttachmentInstance** InAttachment)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.HasAttachment");

	AKSWeapon_HasAttachment_Params params;
	params.InAttachment = InAttachment;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.HandleExhausted
// (Native, Event, Protected, BlueprintEvent)

void AKSWeapon::HandleExhausted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.HandleExhausted");

	AKSWeapon_HandleExhausted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.GetWeaponState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EWeaponStateNew                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EWeaponStateNew AKSWeapon::GetWeaponState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.GetWeaponState");

	AKSWeapon_GetWeaponState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.GetWeaponComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UKSWeaponComponent*      ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UKSWeaponComponent* AKSWeapon::GetWeaponComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.GetWeaponComponent");

	AKSWeapon_GetWeaponComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.GetWeaponAsset
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UKSWeaponAsset*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UKSWeaponAsset* AKSWeapon::GetWeaponAsset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.GetWeaponAsset");

	AKSWeapon_GetWeaponAsset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.GetWalkSpeedModifier
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSWeapon::GetWalkSpeedModifier()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.GetWalkSpeedModifier");

	AKSWeapon_GetWalkSpeedModifier_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.GetReloadCooldownTime
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSWeapon::GetReloadCooldownTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.GetReloadCooldownTime");

	AKSWeapon_GetReloadCooldownTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.GetPreReloadTime
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSWeapon::GetPreReloadTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.GetPreReloadTime");

	AKSWeapon_GetPreReloadTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.GetPostReloadTime
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSWeapon::GetPostReloadTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.GetPostReloadTime");

	AKSWeapon_GetPostReloadTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.GetMovementAccuracyPenalty
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSWeapon::GetMovementAccuracyPenalty()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.GetMovementAccuracyPenalty");

	AKSWeapon_GetMovementAccuracyPenalty_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.GetMaxFiringAccuracyLoss
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSWeapon::GetMaxFiringAccuracyLoss()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.GetMaxFiringAccuracyLoss");

	AKSWeapon_GetMaxFiringAccuracyLoss_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.GetLimbDamageAmount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSWeapon::GetLimbDamageAmount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.GetLimbDamageAmount");

	AKSWeapon_GetLimbDamageAmount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.GetInAirAccuracyModifier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSWeapon::GetInAirAccuracyModifier()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.GetInAirAccuracyModifier");

	AKSWeapon_GetInAirAccuracyModifier_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.GetHeadDamageAmount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSWeapon::GetHeadDamageAmount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.GetHeadDamageAmount");

	AKSWeapon_GetHeadDamageAmount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.GetDamageInstigator
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AController*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AController* AKSWeapon::GetDamageInstigator()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.GetDamageInstigator");

	AKSWeapon_GetDamageInstigator_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.GetDamageFalloffRangeScaler
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSWeapon::GetDamageFalloffRangeScaler()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.GetDamageFalloffRangeScaler");

	AKSWeapon_GetDamageFalloffRangeScaler_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.GetCrouchAccuracyModifier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSWeapon::GetCrouchAccuracyModifier()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.GetCrouchAccuracyModifier");

	AKSWeapon_GetCrouchAccuracyModifier_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.GetClipSize
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AKSWeapon::GetClipSize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.GetClipSize");

	AKSWeapon_GetClipSize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.GetCharacterOwner
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AKSCharacter*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AKSCharacter* AKSWeapon::GetCharacterOwner()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.GetCharacterOwner");

	AKSWeapon_GetCharacterOwner_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.GetCanUseOffGround
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeapon::GetCanUseOffGround()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.GetCanUseOffGround");

	AKSWeapon_GetCanUseOffGround_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.GetBaseDamageAmount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSWeapon::GetBaseDamageAmount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.GetBaseDamageAmount");

	AKSWeapon_GetBaseDamageAmount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.GetBaseAccuracy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSWeapon::GetBaseAccuracy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.GetBaseAccuracy");

	AKSWeapon_GetBaseAccuracy_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.GetAttachments
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UKSWeaponAttachment*> OutWeaponAttachments           (Parm, OutParm, ZeroConstructor)

void AKSWeapon::GetAttachments(TArray<class UKSWeaponAttachment*>* OutWeaponAttachments)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.GetAttachments");

	AKSWeapon_GetAttachments_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutWeaponAttachments != nullptr)
		*OutWeaponAttachments = params.OutWeaponAttachments;
}


// Function Killstreak.KSWeapon.GetAttachmentInstances
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UKSWeaponAttachmentInstance*> OutWeaponAttachmentInstances   (Parm, OutParm, ZeroConstructor)

void AKSWeapon::GetAttachmentInstances(TArray<class UKSWeaponAttachmentInstance*>* OutWeaponAttachmentInstances)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.GetAttachmentInstances");

	AKSWeapon_GetAttachmentInstances_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutWeaponAttachmentInstances != nullptr)
		*OutWeaponAttachmentInstances = params.OutWeaponAttachmentInstances;
}


// Function Killstreak.KSWeapon.GetAttachment
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag*           InAttachPoint                  (ConstParm, Parm, OutParm, ReferenceParm)
// class UKSWeaponAttachmentInstance* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UKSWeaponAttachmentInstance* AKSWeapon::GetAttachment(struct FGameplayTag* InAttachPoint)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.GetAttachment");

	AKSWeapon_GetAttachment_Params params;
	params.InAttachPoint = InAttachPoint;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.GetAmmoType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EAmmoType                      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EAmmoType AKSWeapon::GetAmmoType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.GetAmmoType");

	AKSWeapon_GetAmmoType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.GetAmmoInOwnerInventory
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AKSWeapon::GetAmmoInOwnerInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.GetAmmoInOwnerInventory");

	AKSWeapon_GetAmmoInOwnerInventory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.GetAmmoInClip
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AKSWeapon::GetAmmoInClip()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.GetAmmoInClip");

	AKSWeapon_GetAmmoInClip_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.GetAimOverShoulderAccuracyModifier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSWeapon::GetAimOverShoulderAccuracyModifier()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.GetAimOverShoulderAccuracyModifier");

	AKSWeapon_GetAimOverShoulderAccuracyModifier_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.GetAimDownSightsFOV
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSWeapon::GetAimDownSightsFOV()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.GetAimDownSightsFOV");

	AKSWeapon_GetAimDownSightsFOV_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.GetAccuracyReturnRate
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSWeapon::GetAccuracyReturnRate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.GetAccuracyReturnRate");

	AKSWeapon_GetAccuracyReturnRate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.GetAccuracyReturnDelay
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSWeapon::GetAccuracyReturnDelay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.GetAccuracyReturnDelay");

	AKSWeapon_GetAccuracyReturnDelay_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.GetAccuracyLossPerShot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSWeapon::GetAccuracyLossPerShot()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.GetAccuracyLossPerShot");

	AKSWeapon_GetAccuracyLossPerShot_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.FireWeapon
// (Native, Event, Protected, BlueprintEvent)

void AKSWeapon::FireWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.FireWeapon");

	AKSWeapon_FireWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.EndState
// (Native, Protected)
// Parameters:
// EWeaponStateNew*               NextState                      (Parm, ZeroConstructor, IsPlainOldData)

void AKSWeapon::EndState(EWeaponStateNew* NextState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.EndState");

	AKSWeapon_EndState_Params params;
	params.NextState = NextState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.ConsumePendingFire
// (Final, Native, Public, BlueprintCallable)

void AKSWeapon::ConsumePendingFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.ConsumePendingFire");

	AKSWeapon_ConsumePendingFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.ConsumeAmmo
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AKSWeapon::ConsumeAmmo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.ConsumeAmmo");

	AKSWeapon_ConsumeAmmo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.ClientStateChangeRejected
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// uint16_t*                      nRequestId                     (Parm, ZeroConstructor, IsPlainOldData)
// EWeaponStateNew*               RestoreState                   (Parm, ZeroConstructor, IsPlainOldData)

void AKSWeapon::ClientStateChangeRejected(uint16_t* nRequestId, EWeaponStateNew* RestoreState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.ClientStateChangeRejected");

	AKSWeapon_ClientStateChangeRejected_Params params;
	params.nRequestId = nRequestId;
	params.RestoreState = RestoreState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.ClientStateChangeAccepted
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// uint16_t*                      nRequestId                     (Parm, ZeroConstructor, IsPlainOldData)

void AKSWeapon::ClientStateChangeAccepted(uint16_t* nRequestId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.ClientStateChangeAccepted");

	AKSWeapon_ClientStateChangeAccepted_Params params;
	params.nRequestId = nRequestId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.ClientRecoverSeedMisalignment
// (Net, NetReliable, Native, Event, Protected, HasDefaults, NetClient)
// Parameters:
// uint16_t*                      RequestID                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FRandomStream*          ServerStream                   (Parm, ZeroConstructor)

void AKSWeapon::ClientRecoverSeedMisalignment(uint16_t* RequestID, struct FRandomStream* ServerStream)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.ClientRecoverSeedMisalignment");

	AKSWeapon_ClientRecoverSeedMisalignment_Params params;
	params.RequestID = RequestID;
	params.ServerStream = ServerStream;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.ClientNotifyRecoveryFinish
// (Net, NetReliable, Native, Event, Protected, NetClient)

void AKSWeapon::ClientNotifyRecoveryFinish()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.ClientNotifyRecoveryFinish");

	AKSWeapon_ClientNotifyRecoveryFinish_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.ClientForceUpdateAmmoInClip
// (Net, NetReliable, Native, Event, Protected, NetClient, BlueprintCallable)
// Parameters:
// int*                           NewAmmo                        (Parm, ZeroConstructor, IsPlainOldData)

void AKSWeapon::ClientForceUpdateAmmoInClip(int* NewAmmo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.ClientForceUpdateAmmoInClip");

	AKSWeapon_ClientForceUpdateAmmoInClip_Params params;
	params.NewAmmo = NewAmmo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.ClientForceIdleFromFire
// (Net, NetReliable, Native, Event, Public, NetClient)

void AKSWeapon::ClientForceIdleFromFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.ClientForceIdleFromFire");

	AKSWeapon_ClientForceIdleFromFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.ClientFixLastReload
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// uint16_t*                      RequestID                      (Parm, ZeroConstructor, IsPlainOldData)
// int*                           InAmmoInClip                   (Parm, ZeroConstructor, IsPlainOldData)

void AKSWeapon::ClientFixLastReload(uint16_t* RequestID, int* InAmmoInClip)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.ClientFixLastReload");

	AKSWeapon_ClientFixLastReload_Params params;
	params.RequestID = RequestID;
	params.InAmmoInClip = InAmmoInClip;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.CheckExhausted
// (Final, Native, Public, BlueprintCallable)

void AKSWeapon::CheckExhausted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.CheckExhausted");

	AKSWeapon_CheckExhausted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.CanUseAnAimStateNow
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeapon::CanUseAnAimStateNow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.CanUseAnAimStateNow");

	AKSWeapon_CanUseAnAimStateNow_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.CanToggleOutOfAimDownSightsNow
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeapon::CanToggleOutOfAimDownSightsNow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.CanToggleOutOfAimDownSightsNow");

	AKSWeapon_CanToggleOutOfAimDownSightsNow_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.CanToggleIntoAimDownSightsNow
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeapon::CanToggleIntoAimDownSightsNow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.CanToggleIntoAimDownSightsNow");

	AKSWeapon_CanToggleIntoAimDownSightsNow_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.CanStartReloadNow
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeapon::CanStartReloadNow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.CanStartReloadNow");

	AKSWeapon_CanStartReloadNow_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.CanStartFireNow
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeapon::CanStartFireNow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.CanStartFireNow");

	AKSWeapon_CanStartFireNow_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.CanRetrieveNow
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeapon::CanRetrieveNow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.CanRetrieveNow");

	AKSWeapon_CanRetrieveNow_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.CanReloadNowCommon
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeapon::CanReloadNowCommon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.CanReloadNowCommon");

	AKSWeapon_CanReloadNowCommon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.CanRefireNow
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeapon::CanRefireNow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.CanRefireNow");

	AKSWeapon_CanRefireNow_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.CanReceiveAttachment
// (Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UKSWeaponAttachment**    InAttachment                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FGameplayTagContainer   AvailableAttachPoints          (Parm, OutParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeapon::CanReceiveAttachment(class UKSWeaponAttachment** InAttachment, struct FGameplayTagContainer* AvailableAttachPoints)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.CanReceiveAttachment");

	AKSWeapon_CanReceiveAttachment_Params params;
	params.InAttachment = InAttachment;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (AvailableAttachPoints != nullptr)
		*AvailableAttachPoints = params.AvailableAttachPoints;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.CanInteractWith
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor**                 InteractableTarget             (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeapon::CanInteractWith(class AActor** InteractableTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.CanInteractWith");

	AKSWeapon_CanInteractWith_Params params;
	params.InteractableTarget = InteractableTarget;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.CanHolsterNow
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeapon::CanHolsterNow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.CanHolsterNow");

	AKSWeapon_CanHolsterNow_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.CanFireNowCommon
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeapon::CanFireNowCommon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.CanFireNowCommon");

	AKSWeapon_CanFireNowCommon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.CanEverReload
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeapon::CanEverReload()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.CanEverReload");

	AKSWeapon_CanEverReload_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.CanEverAimOverShoulder
// (Native, Public, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeapon::CanEverAimOverShoulder()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.CanEverAimOverShoulder");

	AKSWeapon_CanEverAimOverShoulder_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.CanEverAimDownSights
// (Native, Public, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeapon::CanEverAimDownSights()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.CanEverAimDownSights");

	AKSWeapon_CanEverAimDownSights_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.CanEverAimAlternate
// (Native, Public, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeapon::CanEverAimAlternate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.CanEverAimAlternate");

	AKSWeapon_CanEverAimAlternate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.CanDropNow
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeapon::CanDropNow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.CanDropNow");

	AKSWeapon_CanDropNow_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.CanCookNow
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeapon::CanCookNow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.CanCookNow");

	AKSWeapon_CanCookNow_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.CanContinueReloadNow
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeapon::CanContinueReloadNow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.CanContinueReloadNow");

	AKSWeapon_CanContinueReloadNow_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.CancelHolstering
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeapon::CancelHolstering()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.CancelHolstering");

	AKSWeapon_CancelHolstering_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.CanBeSwappedTo
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool*                          bByForce                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeapon::CanBeSwappedTo(bool* bByForce)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.CanBeSwappedTo");

	AKSWeapon_CanBeSwappedTo_Params params;
	params.bByForce = bByForce;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.CanBeSwappedFrom
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeapon::CanBeSwappedFrom()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.CanBeSwappedFrom");

	AKSWeapon_CanBeSwappedFrom_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.CanBeInterruptedNow
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeapon::CanBeInterruptedNow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.CanBeInterruptedNow");

	AKSWeapon_CanBeInterruptedNow_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.CalculateDamageFromHitInfo
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FHitResult*             HitInfo                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSWeapon::CalculateDamageFromHitInfo(struct FHitResult* HitInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.CalculateDamageFromHitInfo");

	AKSWeapon_CalculateDamageFromHitInfo_Params params;
	params.HitInfo = HitInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.CalculateDamageFalloffFromHitResults
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FHitResult*             HitInfo                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSWeapon::CalculateDamageFalloffFromHitResults(struct FHitResult* HitInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.CalculateDamageFalloffFromHitResults");

	AKSWeapon_CalculateDamageFalloffFromHitResults_Params params;
	params.HitInfo = HitInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.CalculateDamageFalloffFromDistance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float*                         Distance                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSWeapon::CalculateDamageFalloffFromDistance(float* Distance)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.CalculateDamageFalloffFromDistance");

	AKSWeapon_CalculateDamageFalloffFromDistance_Params params;
	params.Distance = Distance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.BeginState
// (Native, Protected)
// Parameters:
// EWeaponStateNew*               PreviousState                  (Parm, ZeroConstructor, IsPlainOldData)

void AKSWeapon::BeginState(EWeaponStateNew* PreviousState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.BeginState");

	AKSWeapon_BeginState_Params params;
	params.PreviousState = PreviousState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.AltFireInitiated
// (Native, Event, Protected, BlueprintEvent)

void AKSWeapon::AltFireInitiated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.AltFireInitiated");

	AKSWeapon_AltFireInitiated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.AltFireEnded
// (Native, Event, Protected, BlueprintEvent)

void AKSWeapon::AltFireEnded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.AltFireEnded");

	AKSWeapon_AltFireEnded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.AllowSprintingRightNow
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeapon::AllowSprintingRightNow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.AllowSprintingRightNow");

	AKSWeapon_AllowSprintingRightNow_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.AllowDodgeRollRightNow
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeapon::AllowDodgeRollRightNow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.AllowDodgeRollRightNow");

	AKSWeapon_AllowDodgeRollRightNow_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.AimTransitionComplete
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// EKSCharacterAimMode*           NewAimState                    (Parm, ZeroConstructor, IsPlainOldData)

void AKSWeapon::AimTransitionComplete(EKSCharacterAimMode* NewAimState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.AimTransitionComplete");

	AKSWeapon_AimTransitionComplete_Params params;
	params.NewAimState = NewAimState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.AbortReload
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeapon::AbortReload()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.AbortReload");

	AKSWeapon_AbortReload_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon.AbortFire
// (Native, Public, BlueprintCallable)

void AKSWeapon::AbortFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.AbortFire");

	AKSWeapon_AbortFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSArmor.GetDurability
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSArmor::GetDurability()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSArmor.GetDurability");

	AKSArmor_GetDurability_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSArmor.GetArmorAsset
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UKSArmorAsset*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UKSArmorAsset* AKSArmor::GetArmorAsset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSArmor.GetArmorAsset");

	AKSArmor_GetArmorAsset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSArmor.CanAbsorbDamageType
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UClass**                 DamageTypeClass                (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSArmor::CanAbsorbDamageType(class UClass** DamageTypeClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSArmor.CanAbsorbDamageType");

	AKSArmor_CanAbsorbDamageType_Params params;
	params.DamageTypeClass = DamageTypeClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSArmor.CalcAbsorbRadialDamage
// (Native, Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// float*                         Damage                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FRadialDamageEvent*     RadialDamageEvent              (ConstParm, Parm, OutParm, ReferenceParm)
// class AController**            EventInstigator                (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSArmor::CalcAbsorbRadialDamage(float* Damage, struct FRadialDamageEvent* RadialDamageEvent, class AController** EventInstigator, class AActor** DamageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSArmor.CalcAbsorbRadialDamage");

	AKSArmor_CalcAbsorbRadialDamage_Params params;
	params.Damage = Damage;
	params.RadialDamageEvent = RadialDamageEvent;
	params.EventInstigator = EventInstigator;
	params.DamageCauser = DamageCauser;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSArmor.CalcAbsorbPointDamage
// (Native, Event, Public, HasOutParms, BlueprintCallable, BlueprintEvent)
// Parameters:
// float*                         Damage                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FPointDamageEvent*      PointDamageEvent               (ConstParm, Parm, OutParm, ReferenceParm)
// class AController**            EventInstigator                (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSArmor::CalcAbsorbPointDamage(float* Damage, struct FPointDamageEvent* PointDamageEvent, class AController** EventInstigator, class AActor** DamageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSArmor.CalcAbsorbPointDamage");

	AKSArmor_CalcAbsorbPointDamage_Params params;
	params.Damage = Damage;
	params.PointDamageEvent = PointDamageEvent;
	params.EventInstigator = EventInstigator;
	params.DamageCauser = DamageCauser;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.TryToEquipToCharacterNoPointGiven
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UKSWeaponAsset**         WeaponAsset                    (Parm, ZeroConstructor, IsPlainOldData)
// class AKSCharacter**           InOwner                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FGiveItemParameters*    InGiveItemParameters           (Parm)
// bool*                          bAllowSyncLoad                 (Parm, ZeroConstructor, IsPlainOldData)
// class AKSWeapon*               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AKSWeapon* UKSWeaponAsset::STATIC_TryToEquipToCharacterNoPointGiven(class UKSWeaponAsset** WeaponAsset, class AKSCharacter** InOwner, struct FGiveItemParameters* InGiveItemParameters, bool* bAllowSyncLoad)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.TryToEquipToCharacterNoPointGiven");

	UKSWeaponAsset_TryToEquipToCharacterNoPointGiven_Params params;
	params.WeaponAsset = WeaponAsset;
	params.InOwner = InOwner;
	params.InGiveItemParameters = InGiveItemParameters;
	params.bAllowSyncLoad = bAllowSyncLoad;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.TryToEquipToCharacter
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UKSWeaponAsset**         WeaponAsset                    (Parm, ZeroConstructor, IsPlainOldData)
// class AKSCharacter**           InOwner                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FGameplayTag*           EquipPoint                     (Parm)
// struct FGiveItemParameters*    InGiveItemParameters           (Parm)
// bool*                          bAllowSyncLoad                 (Parm, ZeroConstructor, IsPlainOldData)
// class AKSWeapon*               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AKSWeapon* UKSWeaponAsset::STATIC_TryToEquipToCharacter(class UKSWeaponAsset** WeaponAsset, class AKSCharacter** InOwner, struct FGameplayTag* EquipPoint, struct FGiveItemParameters* InGiveItemParameters, bool* bAllowSyncLoad)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.TryToEquipToCharacter");

	UKSWeaponAsset_TryToEquipToCharacter_Params params;
	params.WeaponAsset = WeaponAsset;
	params.InOwner = InOwner;
	params.EquipPoint = EquipPoint;
	params.InGiveItemParameters = InGiveItemParameters;
	params.bAllowSyncLoad = bAllowSyncLoad;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.ShouldUseBuildupForCooking
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSWeaponAsset::ShouldUseBuildupForCooking()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.ShouldUseBuildupForCooking");

	UKSWeaponAsset_ShouldUseBuildupForCooking_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.ShouldStartReloadInterruptSprinting
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSWeaponAsset::ShouldStartReloadInterruptSprinting()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.ShouldStartReloadInterruptSprinting");

	UKSWeaponAsset_ShouldStartReloadInterruptSprinting_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.ShouldStartHolsterInterruptSprinting
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSWeaponAsset::ShouldStartHolsterInterruptSprinting()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.ShouldStartHolsterInterruptSprinting");

	UKSWeaponAsset_ShouldStartHolsterInterruptSprinting_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.ShouldStartFireInterruptSprinting
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSWeaponAsset::ShouldStartFireInterruptSprinting()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.ShouldStartFireInterruptSprinting");

	UKSWeaponAsset_ShouldStartFireInterruptSprinting_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.ShouldPreventDodgeRollDuringFire
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSWeaponAsset::ShouldPreventDodgeRollDuringFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.ShouldPreventDodgeRollDuringFire");

	UKSWeaponAsset_ShouldPreventDodgeRollDuringFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.ShouldPrefireOverlapSkipToFire
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSWeaponAsset::ShouldPrefireOverlapSkipToFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.ShouldPrefireOverlapSkipToFire");

	UKSWeaponAsset_ShouldPrefireOverlapSkipToFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.ShouldLockonPrefire
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSWeaponAsset::ShouldLockonPrefire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.ShouldLockonPrefire");

	UKSWeaponAsset_ShouldLockonPrefire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.ShouldLagCompensateFire
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSWeaponAsset::ShouldLagCompensateFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.ShouldLagCompensateFire");

	UKSWeaponAsset_ShouldLagCompensateFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.ShouldForceUprightDrops
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSWeaponAsset::ShouldForceUprightDrops()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.ShouldForceUprightDrops");

	UKSWeaponAsset_ShouldForceUprightDrops_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.ShouldDoRadialDamage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSWeaponAsset::ShouldDoRadialDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.ShouldDoRadialDamage");

	UKSWeaponAsset_ShouldDoRadialDamage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.ShouldBeRemovedWhenExhausted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSWeaponAsset::ShouldBeRemovedWhenExhausted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.ShouldBeRemovedWhenExhausted");

	UKSWeaponAsset_ShouldBeRemovedWhenExhausted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.RequiresAnEquipPoint
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSWeaponAsset::RequiresAnEquipPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.RequiresAnEquipPoint");

	UKSWeaponAsset_RequiresAnEquipPoint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.MakeKickbackCurve
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int*                           nShotIndex                     (Parm, ZeroConstructor, IsPlainOldData)
// float*                         AbsoluteMaxDuration            (Parm, ZeroConstructor, IsPlainOldData)
// struct FInterpCurveVector2D    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FInterpCurveVector2D UKSWeaponAsset::MakeKickbackCurve(int* nShotIndex, float* AbsoluteMaxDuration)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.MakeKickbackCurve");

	UKSWeaponAsset_MakeKickbackCurve_Params params;
	params.nShotIndex = nShotIndex;
	params.AbsoluteMaxDuration = AbsoluteMaxDuration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.LockoutAimStateInCooldown
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSWeaponAsset::LockoutAimStateInCooldown()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.LockoutAimStateInCooldown");

	UKSWeaponAsset_LockoutAimStateInCooldown_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.LimitNumInPlay
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSWeaponAsset::LimitNumInPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.LimitNumInPlay");

	UKSWeaponAsset_LimitNumInPlay_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.IsUnique
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSWeaponAsset::IsUnique()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.IsUnique");

	UKSWeaponAsset_IsUnique_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.IsRadialDamageConical
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSWeaponAsset::IsRadialDamageConical()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.IsRadialDamageConical");

	UKSWeaponAsset_IsRadialDamageConical_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.IsGadget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSWeaponAsset::IsGadget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.IsGadget");

	UKSWeaponAsset_IsGadget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.IsAudible
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAsset::IsAudible()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.IsAudible");

	UKSWeaponAsset_IsAudible_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.HasKickback
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSWeaponAsset::HasKickback()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.HasKickback");

	UKSWeaponAsset_HasKickback_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.GetWeaponUpgrade
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)

void UKSWeaponAsset::GetWeaponUpgrade()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetWeaponUpgrade");

	UKSWeaponAsset_GetWeaponUpgrade_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetWeaponType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag            ReturnValue                    (Parm, OutParm, ReturnParm)

struct FGameplayTag UKSWeaponAsset::GetWeaponType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetWeaponType");

	UKSWeaponAsset_GetWeaponType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.GetWeaponStats
// (Final, Native, Public, HasOutParms, Const)
// Parameters:
// TArray<struct FString>         OutStats                       (Parm, OutParm, ZeroConstructor)

void UKSWeaponAsset::GetWeaponStats(TArray<struct FString>* OutStats)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetWeaponStats");

	UKSWeaponAsset_GetWeaponStats_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutStats != nullptr)
		*OutStats = params.OutStats;
}


// Function Killstreak.KSWeaponAsset.GetWeaponNameAsString
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UKSWeaponAsset::GetWeaponNameAsString()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetWeaponNameAsString");

	UKSWeaponAsset_GetWeaponNameAsString_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.GetWeaponName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UKSWeaponAsset::GetWeaponName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetWeaponName");

	UKSWeaponAsset_GetWeaponName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.GetWeaponDropClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)

void UKSWeaponAsset::GetWeaponDropClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetWeaponDropClass");

	UKSWeaponAsset_GetWeaponDropClass_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetWeaponDescriptionAsString
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString UKSWeaponAsset::GetWeaponDescriptionAsString()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetWeaponDescriptionAsString");

	UKSWeaponAsset_GetWeaponDescriptionAsString_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.GetWeaponDescription
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UKSWeaponAsset::GetWeaponDescription()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetWeaponDescription");

	UKSWeaponAsset_GetWeaponDescription_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.GetWeaponComponentClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)

void UKSWeaponAsset::GetWeaponComponentClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetWeaponComponentClass");

	UKSWeaponAsset_GetWeaponComponentClass_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetWeaponClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)

void UKSWeaponAsset::GetWeaponClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetWeaponClass");

	UKSWeaponAsset_GetWeaponClass_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetWeaponAttachmentPoints
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTagContainer   OutAttachPoints                (Parm, OutParm)

void UKSWeaponAsset::GetWeaponAttachmentPoints(struct FGameplayTagContainer* OutAttachPoints)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetWeaponAttachmentPoints");

	UKSWeaponAsset_GetWeaponAttachmentPoints_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutAttachPoints != nullptr)
		*OutAttachPoints = params.OutAttachPoints;
}


// Function Killstreak.KSWeaponAsset.GetWeaponAmmoWidgetClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)

void UKSWeaponAsset::GetWeaponAmmoWidgetClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetWeaponAmmoWidgetClass");

	UKSWeaponAsset_GetWeaponAmmoWidgetClass_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetWalkSpeedModifier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAsset::GetWalkSpeedModifier()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetWalkSpeedModifier");

	UKSWeaponAsset_GetWalkSpeedModifier_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.GetVibrationEffect
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)

void UKSWeaponAsset::GetVibrationEffect()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetVibrationEffect");

	UKSWeaponAsset_GetVibrationEffect_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetValidEquipPoints
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTagContainer   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FGameplayTagContainer UKSWeaponAsset::GetValidEquipPoints()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetValidEquipPoints");

	UKSWeaponAsset_GetValidEquipPoints_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.GetValidAttachments
// (Final, Native, Public, BlueprintCallable, BlueprintPure)

void UKSWeaponAsset::GetValidAttachments()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetValidAttachments");

	UKSWeaponAsset_GetValidAttachments_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetUseAltFire
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSWeaponAsset::GetUseAltFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetUseAltFire");

	UKSWeaponAsset_GetUseAltFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.GetUnlimitedAmmo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSWeaponAsset::GetUnlimitedAmmo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetUnlimitedAmmo");

	UKSWeaponAsset_GetUnlimitedAmmo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.GetThirdPersonFixedRelativeOffset
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector UKSWeaponAsset::GetThirdPersonFixedRelativeOffset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetThirdPersonFixedRelativeOffset");

	UKSWeaponAsset_GetThirdPersonFixedRelativeOffset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.GetSprintRecoveryTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAsset::GetSprintRecoveryTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetSprintRecoveryTime");

	UKSWeaponAsset_GetSprintRecoveryTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.GetSoftItemRenderImage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)

void UKSWeaponAsset::GetSoftItemRenderImage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetSoftItemRenderImage");

	UKSWeaponAsset_GetSoftItemRenderImage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetShotPenetrationCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UKSWeaponAsset::GetShotPenetrationCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetShotPenetrationCount");

	UKSWeaponAsset_GetShotPenetrationCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.GetRoundsPerBurst
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UKSWeaponAsset::GetRoundsPerBurst()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetRoundsPerBurst");

	UKSWeaponAsset_GetRoundsPerBurst_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.GetRetrieveTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAsset::GetRetrieveTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetRetrieveTime");

	UKSWeaponAsset_GetRetrieveTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.GetReticleType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EReticleType                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EReticleType UKSWeaponAsset::GetReticleType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetReticleType");

	UKSWeaponAsset_GetReticleType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.GetReloadType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EReloadType                    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EReloadType UKSWeaponAsset::GetReloadType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetReloadType");

	UKSWeaponAsset_GetReloadType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.GetReloadCooldownTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAsset::GetReloadCooldownTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetReloadCooldownTime");

	UKSWeaponAsset_GetReloadCooldownTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.GetRadialIgnoreWalls
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSWeaponAsset::GetRadialIgnoreWalls()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetRadialIgnoreWalls");

	UKSWeaponAsset_GetRadialIgnoreWalls_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.GetRadialIgnoreSelf
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSWeaponAsset::GetRadialIgnoreSelf()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetRadialIgnoreSelf");

	UKSWeaponAsset_GetRadialIgnoreSelf_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.GetRadialIgnoreFriendlies
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSWeaponAsset::GetRadialIgnoreFriendlies()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetRadialIgnoreFriendlies");

	UKSWeaponAsset_GetRadialIgnoreFriendlies_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.GetRadialDamageParams
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRadialDamageParams     ReturnValue                    (Parm, OutParm, ReturnParm)

struct FRadialDamageParams UKSWeaponAsset::GetRadialDamageParams()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetRadialDamageParams");

	UKSWeaponAsset_GetRadialDamageParams_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.GetRadialConicalHalfAngle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAsset::GetRadialConicalHalfAngle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetRadialConicalHalfAngle");

	UKSWeaponAsset_GetRadialConicalHalfAngle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.GetPreReloadTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAsset::GetPreReloadTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetPreReloadTime");

	UKSWeaponAsset_GetPreReloadTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.GetPreFireTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAsset::GetPreFireTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetPreFireTime");

	UKSWeaponAsset_GetPreFireTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.GetPrefireSkipWindowNum
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UKSWeaponAsset::GetPrefireSkipWindowNum()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetPrefireSkipWindowNum");

	UKSWeaponAsset_GetPrefireSkipWindowNum_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.GetPrefireSkipWindow
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int*                           Index                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FPrefireSkipWindow      ReturnValue                    (Parm, OutParm, ReturnParm)

struct FPrefireSkipWindow UKSWeaponAsset::GetPrefireSkipWindow(int* Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetPrefireSkipWindow");

	UKSWeaponAsset_GetPrefireSkipWindow_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.GetPrefireOverlapGracePeriod
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAsset::GetPrefireOverlapGracePeriod()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetPrefireOverlapGracePeriod");

	UKSWeaponAsset_GetPrefireOverlapGracePeriod_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.GetPrefireLockonDistance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAsset::GetPrefireLockonDistance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetPrefireLockonDistance");

	UKSWeaponAsset_GetPrefireLockonDistance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.GetPrefireLockonAngle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAsset::GetPrefireLockonAngle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetPrefireLockonAngle");

	UKSWeaponAsset_GetPrefireLockonAngle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.GetPreFireInterruptThreshold
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAsset::GetPreFireInterruptThreshold()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetPreFireInterruptThreshold");

	UKSWeaponAsset_GetPreFireInterruptThreshold_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.GetPostReloadTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAsset::GetPostReloadTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetPostReloadTime");

	UKSWeaponAsset_GetPostReloadTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.GetPostFireTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAsset::GetPostFireTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetPostFireTime");

	UKSWeaponAsset_GetPostFireTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.GetPostFireForgivenessTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAsset::GetPostFireForgivenessTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetPostFireForgivenessTime");

	UKSWeaponAsset_GetPostFireForgivenessTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.GetOuterRadius
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAsset::GetOuterRadius()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetOuterRadius");

	UKSWeaponAsset_GetOuterRadius_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.GetMovementAccuracyPenalty
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAsset::GetMovementAccuracyPenalty()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetMovementAccuracyPenalty");

	UKSWeaponAsset_GetMovementAccuracyPenalty_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.GetMaxNumInPlay
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UKSWeaponAsset::GetMaxNumInPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetMaxNumInPlay");

	UKSWeaponAsset_GetMaxNumInPlay_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.GetMaxFiringAccuracyLoss
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAsset::GetMaxFiringAccuracyLoss()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetMaxFiringAccuracyLoss");

	UKSWeaponAsset_GetMaxFiringAccuracyLoss_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.GetMaxFalloffDistance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAsset::GetMaxFalloffDistance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetMaxFalloffDistance");

	UKSWeaponAsset_GetMaxFalloffDistance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.GetMaxCumulativeKickbackVerticalAngle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAsset::GetMaxCumulativeKickbackVerticalAngle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetMaxCumulativeKickbackVerticalAngle");

	UKSWeaponAsset_GetMaxCumulativeKickbackVerticalAngle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.GetLimbDamageAmount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAsset::GetLimbDamageAmount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetLimbDamageAmount");

	UKSWeaponAsset_GetLimbDamageAmount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.GetKickbackResetTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAsset::GetKickbackResetTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetKickbackResetTime");

	UKSWeaponAsset_GetKickbackResetTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.GetKickbackRecoveryRate
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAsset::GetKickbackRecoveryRate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetKickbackRecoveryRate");

	UKSWeaponAsset_GetKickbackRecoveryRate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.GetKickbackRecoveryDelay
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAsset::GetKickbackRecoveryDelay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetKickbackRecoveryDelay");

	UKSWeaponAsset_GetKickbackRecoveryDelay_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.GetKickbackRecoveryAcceleration
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAsset::GetKickbackRecoveryAcceleration()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetKickbackRecoveryAcceleration");

	UKSWeaponAsset_GetKickbackRecoveryAcceleration_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.GetKickbackApplicationOverride
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAsset::GetKickbackApplicationOverride()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetKickbackApplicationOverride");

	UKSWeaponAsset_GetKickbackApplicationOverride_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.GetInnerRadius
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAsset::GetInnerRadius()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetInnerRadius");

	UKSWeaponAsset_GetInnerRadius_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.GetInAirAccuracyModifier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAsset::GetInAirAccuracyModifier()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetInAirAccuracyModifier");

	UKSWeaponAsset_GetInAirAccuracyModifier_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.GetHolsterTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAsset::GetHolsterTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetHolsterTime");

	UKSWeaponAsset_GetHolsterTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.GetHeadDamageAmount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAsset::GetHeadDamageAmount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetHeadDamageAmount");

	UKSWeaponAsset_GetHeadDamageAmount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.GetGamepadKickbackScaling
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAsset::GetGamepadKickbackScaling()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetGamepadKickbackScaling");

	UKSWeaponAsset_GetGamepadKickbackScaling_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.GetFirstShotPreReloadTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAsset::GetFirstShotPreReloadTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetFirstShotPreReloadTime");

	UKSWeaponAsset_GetFirstShotPreReloadTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.GetFireModeType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFireModeType                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EFireModeType UKSWeaponAsset::GetFireModeType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetFireModeType");

	UKSWeaponAsset_GetFireModeType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.GetDodgeRollRecoveryTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAsset::GetDodgeRollRecoveryTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetDodgeRollRecoveryTime");

	UKSWeaponAsset_GetDodgeRollRecoveryTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.GetDefaultAmmo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UKSWeaponAsset::GetDefaultAmmo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetDefaultAmmo");

	UKSWeaponAsset_GetDefaultAmmo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.GetDefaultAimTransitionTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAsset::GetDefaultAimTransitionTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetDefaultAimTransitionTime");

	UKSWeaponAsset_GetDefaultAimTransitionTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.GetDamageTypeClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)

void UKSWeaponAsset::GetDamageTypeClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetDamageTypeClass");

	UKSWeaponAsset_GetDamageTypeClass_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetDamageAmount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAsset::GetDamageAmount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetDamageAmount");

	UKSWeaponAsset_GetDamageAmount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.GetCrouchAccuracyModifier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAsset::GetCrouchAccuracyModifier()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetCrouchAccuracyModifier");

	UKSWeaponAsset_GetCrouchAccuracyModifier_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.GetCooldownDownTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAsset::GetCooldownDownTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetCooldownDownTime");

	UKSWeaponAsset_GetCooldownDownTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.GetConsumeAmmoDirectlyFromInventory
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSWeaponAsset::GetConsumeAmmoDirectlyFromInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetConsumeAmmoDirectlyFromInventory");

	UKSWeaponAsset_GetConsumeAmmoDirectlyFromInventory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.GetCompatibleAttachments
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UKSWeaponAttachment*> OutAttachments                 (Parm, OutParm, ZeroConstructor)

void UKSWeaponAsset::GetCompatibleAttachments(TArray<class UKSWeaponAttachment*>* OutAttachments)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetCompatibleAttachments");

	UKSWeaponAsset_GetCompatibleAttachments_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutAttachments != nullptr)
		*OutAttachments = params.OutAttachments;
}


// Function Killstreak.KSWeaponAsset.GetCompatibleAttachmentAssets
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)

void UKSWeaponAsset::GetCompatibleAttachmentAssets()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetCompatibleAttachmentAssets");

	UKSWeaponAsset_GetCompatibleAttachmentAssets_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetClipSize
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UKSWeaponAsset::GetClipSize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetClipSize");

	UKSWeaponAsset_GetClipSize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.GetCautionRadius
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAsset::GetCautionRadius()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetCautionRadius");

	UKSWeaponAsset_GetCautionRadius_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.GetCanUseOffGround
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSWeaponAsset::GetCanUseOffGround()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetCanUseOffGround");

	UKSWeaponAsset_GetCanUseOffGround_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.GetBuildupTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAsset::GetBuildupTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetBuildupTime");

	UKSWeaponAsset_GetBuildupTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.GetBaseRadialDamage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAsset::GetBaseRadialDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetBaseRadialDamage");

	UKSWeaponAsset_GetBaseRadialDamage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.GetBaseAccuracy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAsset::GetBaseAccuracy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetBaseAccuracy");

	UKSWeaponAsset_GetBaseAccuracy_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.GetAudibleRange
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAsset::GetAudibleRange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetAudibleRange");

	UKSWeaponAsset_GetAudibleRange_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.GetAttachmentSlotCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UKSWeaponAsset::GetAttachmentSlotCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetAttachmentSlotCount");

	UKSWeaponAsset_GetAttachmentSlotCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.GetAmmoType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EAmmoType                      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EAmmoType UKSWeaponAsset::GetAmmoType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetAmmoType");

	UKSWeaponAsset_GetAmmoType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.GetAlternativeVibrationEffect
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)

void UKSWeaponAsset::GetAlternativeVibrationEffect()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetAlternativeVibrationEffect");

	UKSWeaponAsset_GetAlternativeVibrationEffect_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetAlternativeVibrationAttenuation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)

void UKSWeaponAsset::GetAlternativeVibrationAttenuation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetAlternativeVibrationAttenuation");

	UKSWeaponAsset_GetAlternativeVibrationAttenuation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetAlternatePreFireTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAsset::GetAlternatePreFireTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetAlternatePreFireTime");

	UKSWeaponAsset_GetAlternatePreFireTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.GetAlternatePostFireTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAsset::GetAlternatePostFireTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetAlternatePostFireTime");

	UKSWeaponAsset_GetAlternatePostFireTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.GetAimOverShoulderTransitionTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAsset::GetAimOverShoulderTransitionTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetAimOverShoulderTransitionTime");

	UKSWeaponAsset_GetAimOverShoulderTransitionTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.GetAimOverShoulderAccuracyModifier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAsset::GetAimOverShoulderAccuracyModifier()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetAimOverShoulderAccuracyModifier");

	UKSWeaponAsset_GetAimOverShoulderAccuracyModifier_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.GetAimDownSightsTransitionTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAsset::GetAimDownSightsTransitionTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetAimDownSightsTransitionTime");

	UKSWeaponAsset_GetAimDownSightsTransitionTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.GetAimDownSightsFOV
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAsset::GetAimDownSightsFOV()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetAimDownSightsFOV");

	UKSWeaponAsset_GetAimDownSightsFOV_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.GetAimAlternateTransitionTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAsset::GetAimAlternateTransitionTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetAimAlternateTransitionTime");

	UKSWeaponAsset_GetAimAlternateTransitionTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.GetADSSpeedModifier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAsset::GetADSSpeedModifier()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetADSSpeedModifier");

	UKSWeaponAsset_GetADSSpeedModifier_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.GetAccuracyReturnRate
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAsset::GetAccuracyReturnRate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetAccuracyReturnRate");

	UKSWeaponAsset_GetAccuracyReturnRate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.GetAccuracyReturnDelay
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAsset::GetAccuracyReturnDelay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetAccuracyReturnDelay");

	UKSWeaponAsset_GetAccuracyReturnDelay_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.GetAccuracyLossPerShot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAsset::GetAccuracyLossPerShot()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetAccuracyLossPerShot");

	UKSWeaponAsset_GetAccuracyLossPerShot_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.DoesRestoreAmmo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSWeaponAsset::DoesRestoreAmmo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.DoesRestoreAmmo");

	UKSWeaponAsset_DoesRestoreAmmo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.CreateProjectile
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UKSWeaponAsset**         WeaponAsset                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                SpawnLocation                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FRotator*               SpawnRotation                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FDropItemParameters*    InDropItemParameters           (Parm)
// class AKSWeapon**              SpawningWeapon                 (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 SpawningOwner                  (Parm, ZeroConstructor, IsPlainOldData)
// class APawn**                  SpawningInstigator             (Parm, ZeroConstructor, IsPlainOldData)
// class AKSProjectile*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AKSProjectile* UKSWeaponAsset::STATIC_CreateProjectile(class UObject** WorldContextObject, class UKSWeaponAsset** WeaponAsset, struct FVector* SpawnLocation, struct FRotator* SpawnRotation, struct FDropItemParameters* InDropItemParameters, class AKSWeapon** SpawningWeapon, class AActor** SpawningOwner, class APawn** SpawningInstigator)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.CreateProjectile");

	UKSWeaponAsset_CreateProjectile_Params params;
	params.WorldContextObject = WorldContextObject;
	params.WeaponAsset = WeaponAsset;
	params.SpawnLocation = SpawnLocation;
	params.SpawnRotation = SpawnRotation;
	params.InDropItemParameters = InDropItemParameters;
	params.SpawningWeapon = SpawningWeapon;
	params.SpawningOwner = SpawningOwner;
	params.SpawningInstigator = SpawningInstigator;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.ConeHalfAngleToAccuracy
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float*                         HalfAngle                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAsset::STATIC_ConeHalfAngleToAccuracy(float* HalfAngle)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.ConeHalfAngleToAccuracy");

	UKSWeaponAsset_ConeHalfAngleToAccuracy_Params params;
	params.HalfAngle = HalfAngle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.CanWeaponStateTransition
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EWeaponStateNew*               OldState                       (Parm, ZeroConstructor, IsPlainOldData)
// EWeaponStateNew*               NewState                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSWeaponAsset::CanWeaponStateTransition(EWeaponStateNew* OldState, EWeaponStateNew* NewState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.CanWeaponStateTransition");

	UKSWeaponAsset_CanWeaponStateTransition_Params params;
	params.OldState = OldState;
	params.NewState = NewState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.CanResetKickback
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSWeaponAsset::CanResetKickback()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.CanResetKickback");

	UKSWeaponAsset_CanResetKickback_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.CanRecoverFromKickback
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSWeaponAsset::CanRecoverFromKickback()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.CanRecoverFromKickback");

	UKSWeaponAsset_CanRecoverFromKickback_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.CanReceiveAttachment
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UKSWeaponAttachment**    InAttachment                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FGameplayTagContainer   AvailableAttachPoints          (Parm, OutParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSWeaponAsset::CanReceiveAttachment(class UKSWeaponAttachment** InAttachment, struct FGameplayTagContainer* AvailableAttachPoints)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.CanReceiveAttachment");

	UKSWeaponAsset_CanReceiveAttachment_Params params;
	params.InAttachment = InAttachment;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (AvailableAttachPoints != nullptr)
		*AvailableAttachPoints = params.AvailableAttachPoints;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.CanModsReplenishAmmo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSWeaponAsset::CanModsReplenishAmmo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.CanModsReplenishAmmo");

	UKSWeaponAsset_CanModsReplenishAmmo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.CanInterruptPreReload
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSWeaponAsset::CanInterruptPreReload()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.CanInterruptPreReload");

	UKSWeaponAsset_CanInterruptPreReload_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.CanEverReload
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSWeaponAsset::CanEverReload()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.CanEverReload");

	UKSWeaponAsset_CanEverReload_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.CanEverFire
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSWeaponAsset::CanEverFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.CanEverFire");

	UKSWeaponAsset_CanEverFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.CanEverAimOverShoulder
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSWeaponAsset::CanEverAimOverShoulder()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.CanEverAimOverShoulder");

	UKSWeaponAsset_CanEverAimOverShoulder_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.CanEverAimDownSights
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSWeaponAsset::CanEverAimDownSights()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.CanEverAimDownSights");

	UKSWeaponAsset_CanEverAimDownSights_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.CanEverAimAlternate
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSWeaponAsset::CanEverAimAlternate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.CanEverAimAlternate");

	UKSWeaponAsset_CanEverAimAlternate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.CanBeDropped
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSWeaponAsset::CanBeDropped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.CanBeDropped");

	UKSWeaponAsset_CanBeDropped_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.CalculateDamageFromProjectileHit
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FHitResult*             HitInfo                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// class AKSProjectile**          Projectile                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAsset::CalculateDamageFromProjectileHit(struct FHitResult* HitInfo, class AKSProjectile** Projectile)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.CalculateDamageFromProjectileHit");

	UKSWeaponAsset_CalculateDamageFromProjectileHit_Params params;
	params.HitInfo = HitInfo;
	params.Projectile = Projectile;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.CalculateDamageFromInstantHit
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FHitResult*             HitInfo                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float*                         DamageFalloffRangeScaler       (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAsset::CalculateDamageFromInstantHit(struct FHitResult* HitInfo, float* DamageFalloffRangeScaler)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.CalculateDamageFromInstantHit");

	UKSWeaponAsset_CalculateDamageFromInstantHit_Params params;
	params.HitInfo = HitInfo;
	params.DamageFalloffRangeScaler = DamageFalloffRangeScaler;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.CalculateDamageFalloffFromProjectileHit
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FHitResult*             HitInfo                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// class AKSProjectile**          Projectile                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAsset::CalculateDamageFalloffFromProjectileHit(struct FHitResult* HitInfo, class AKSProjectile** Projectile)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.CalculateDamageFalloffFromProjectileHit");

	UKSWeaponAsset_CalculateDamageFalloffFromProjectileHit_Params params;
	params.HitInfo = HitInfo;
	params.Projectile = Projectile;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.CalculateDamageFalloffFromHitResults
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FHitResult*             HitInfo                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float*                         FalloffRangeScaler             (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAsset::CalculateDamageFalloffFromHitResults(struct FHitResult* HitInfo, float* FalloffRangeScaler)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.CalculateDamageFalloffFromHitResults");

	UKSWeaponAsset_CalculateDamageFalloffFromHitResults_Params params;
	params.HitInfo = HitInfo;
	params.FalloffRangeScaler = FalloffRangeScaler;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.CalculateDamageFalloffFromDistance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float*                         Distance                       (Parm, ZeroConstructor, IsPlainOldData)
// float*                         FalloffRangeScaler             (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAsset::CalculateDamageFalloffFromDistance(float* Distance, float* FalloffRangeScaler)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.CalculateDamageFalloffFromDistance");

	UKSWeaponAsset_CalculateDamageFalloffFromDistance_Params params;
	params.Distance = Distance;
	params.FalloffRangeScaler = FalloffRangeScaler;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset.AccuracyToConeHalfAngle
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float*                         Accuracy                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAsset::STATIC_AccuracyToConeHalfAngle(float* Accuracy)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.AccuracyToConeHalfAngle");

	UKSWeaponAsset_AccuracyToConeHalfAngle_Params params;
	params.Accuracy = Accuracy;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSArmorAsset.GetMaxDurability
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSArmorAsset::GetMaxDurability()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSArmorAsset.GetMaxDurability");

	UKSArmorAsset_GetMaxDurability_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSArmorAsset.GetDisplayLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UKSArmorAsset::GetDisplayLevel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSArmorAsset.GetDisplayLevel");

	UKSArmorAsset_GetDisplayLevel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSArmorAsset.GetDamageAbsorbPercent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSArmorAsset::GetDamageAbsorbPercent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSArmorAsset.GetDamageAbsorbPercent");

	UKSArmorAsset_GetDamageAbsorbPercent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSArmorAsset.DoesAbsorbBreakingHit
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSArmorAsset::DoesAbsorbBreakingHit()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSArmorAsset.DoesAbsorbBreakingHit");

	UKSArmorAsset_DoesAbsorbBreakingHit_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSArmorAsset.CalcAbsorbRadialDamage
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float*                         Damage                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FRadialDamageEvent*     RadialDamageEvent              (ConstParm, Parm, OutParm, ReferenceParm)
// class AController**            EventInstigator                (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSArmorAsset::CalcAbsorbRadialDamage(float* Damage, struct FRadialDamageEvent* RadialDamageEvent, class AController** EventInstigator, class AActor** DamageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSArmorAsset.CalcAbsorbRadialDamage");

	UKSArmorAsset_CalcAbsorbRadialDamage_Params params;
	params.Damage = Damage;
	params.RadialDamageEvent = RadialDamageEvent;
	params.EventInstigator = EventInstigator;
	params.DamageCauser = DamageCauser;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSArmorAsset.CalcAbsorbPointDamage
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float*                         Damage                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FPointDamageEvent*      PointDamageEvent               (ConstParm, Parm, OutParm, ReferenceParm)
// class AController**            EventInstigator                (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSArmorAsset::CalcAbsorbPointDamage(float* Damage, struct FPointDamageEvent* PointDamageEvent, class AController** EventInstigator, class AActor** DamageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSArmorAsset.CalcAbsorbPointDamage");

	UKSArmorAsset_CalcAbsorbPointDamage_Params params;
	params.Damage = Damage;
	params.PointDamageEvent = PointDamageEvent;
	params.EventInstigator = EventInstigator;
	params.DamageCauser = DamageCauser;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAssetDrop.SetBundledAmmoToDefault
// (Final, Native, Public, BlueprintCallable)

void AKSWeaponAssetDrop::SetBundledAmmoToDefault()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAssetDrop.SetBundledAmmoToDefault");

	AKSWeaponAssetDrop_SetBundledAmmoToDefault_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAssetDrop.OverrideDropAmmo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int*                           ReserveAmmo                    (Parm, ZeroConstructor, IsPlainOldData)
// int*                           AmmoInClip                     (Parm, ZeroConstructor, IsPlainOldData)

void AKSWeaponAssetDrop::OverrideDropAmmo(int* ReserveAmmo, int* AmmoInClip)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAssetDrop.OverrideDropAmmo");

	AKSWeaponAssetDrop_OverrideDropAmmo_Params params;
	params.ReserveAmmo = ReserveAmmo;
	params.AmmoInClip = AmmoInClip;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAssetDrop.OnReturnProjectileStopped
// (Final, Native, Private, HasOutParms)
// Parameters:
// struct FHitResult*             HitResult                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void AKSWeaponAssetDrop::OnReturnProjectileStopped(struct FHitResult* HitResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAssetDrop.OnReturnProjectileStopped");

	AKSWeaponAssetDrop_OnReturnProjectileStopped_Params params;
	params.HitResult = HitResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAssetDrop.OnRep_ReturnProjectile
// (Final, Native, Private)

void AKSWeaponAssetDrop::OnRep_ReturnProjectile()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAssetDrop.OnRep_ReturnProjectile");

	AKSWeaponAssetDrop_OnRep_ReturnProjectile_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAssetDrop.GetWeaponComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UKSWeaponComponent*      ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UKSWeaponComponent* AKSWeaponAssetDrop::GetWeaponComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAssetDrop.GetWeaponComponent");

	AKSWeaponAssetDrop_GetWeaponComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAssetDrop.GetWeaponAsset
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UKSWeaponAsset*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UKSWeaponAsset* AKSWeaponAssetDrop::GetWeaponAsset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAssetDrop.GetWeaponAsset");

	AKSWeaponAssetDrop_GetWeaponAsset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAssetDrop.GetReturnProjectile
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AKSProjectile*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AKSProjectile* AKSWeaponAssetDrop::GetReturnProjectile()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAssetDrop.GetReturnProjectile");

	AKSWeaponAssetDrop_GetReturnProjectile_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAssetDrop.GetLabelInfoForFireModeType
// (Native, Event, Public, HasOutParms, BlueprintCallable, BlueprintEvent)
// Parameters:
// EFireModeType                  FireModeType                   (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeaponAssetDrop::GetLabelInfoForFireModeType(EFireModeType* FireModeType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAssetDrop.GetLabelInfoForFireModeType");

	AKSWeaponAssetDrop_GetLabelInfoForFireModeType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (FireModeType != nullptr)
		*FireModeType = params.FireModeType;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAssetDrop.GetLabelInfoForAmmoType
// (Native, Event, Public, HasOutParms, BlueprintCallable, BlueprintEvent)
// Parameters:
// EAmmoType                      AmmoType                       (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeaponAssetDrop::GetLabelInfoForAmmoType(EAmmoType* AmmoType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAssetDrop.GetLabelInfoForAmmoType");

	AKSWeaponAssetDrop_GetLabelInfoForAmmoType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (AmmoType != nullptr)
		*AmmoType = params.AmmoType;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAssetDrop.BroadcastPickupFailedInventoryFull
// (Final, Net, Native, Event, NetMulticast, Private)
// Parameters:
// class AKSCharacter**           Receiver                       (Parm, ZeroConstructor, IsPlainOldData)

void AKSWeaponAssetDrop::BroadcastPickupFailedInventoryFull(class AKSCharacter** Receiver)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAssetDrop.BroadcastPickupFailedInventoryFull");

	AKSWeaponAssetDrop_BroadcastPickupFailedInventoryFull_Params params;
	params.Receiver = Receiver;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAssetDrop.AddAttachment
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UKSWeaponAttachment**    InAttachment                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeaponAssetDrop::AddAttachment(class UKSWeaponAttachment** InAttachment)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAssetDrop.AddAttachment");

	AKSWeaponAssetDrop_AddAttachment_Params params;
	params.InAttachment = InAttachment;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSNeutralBombDrop.OnNeutralBombStateChanged
// (Native, Protected)
// Parameters:
// struct FKSNeutralBombState*    NewState                       (Parm)

void AKSNeutralBombDrop::OnNeutralBombStateChanged(struct FKSNeutralBombState* NewState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSNeutralBombDrop.OnNeutralBombStateChanged");

	AKSNeutralBombDrop_OnNeutralBombStateChanged_Params params;
	params.NewState = NewState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSNeutralBombDrop.IsSpottedByTeam
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AKSTeamState**           Team                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSNeutralBombDrop::IsSpottedByTeam(class AKSTeamState** Team)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSNeutralBombDrop.IsSpottedByTeam");

	AKSNeutralBombDrop_IsSpottedByTeam_Params params;
	params.Team = Team;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSNeutralBombDrop.IsSpottedByPlayer
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AController**            Controller                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSNeutralBombDrop::IsSpottedByPlayer(class AController** Controller)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSNeutralBombDrop.IsSpottedByPlayer");

	AKSNeutralBombDrop_IsSpottedByPlayer_Params params;
	params.Controller = Controller;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSNeutralBombDrop.ExplodeCosmetic
// (Event, Protected, BlueprintEvent)

void AKSNeutralBombDrop::ExplodeCosmetic()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSNeutralBombDrop.ExplodeCosmetic");

	AKSNeutralBombDrop_ExplodeCosmetic_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSNeutralBombDrop.Explode
// (Net, Native, Event, NetMulticast, Public)

void AKSNeutralBombDrop::Explode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSNeutralBombDrop.Explode");

	AKSNeutralBombDrop_Explode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSObjectiveBase.SetState
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FName*                  NewState                       (Parm, ZeroConstructor, IsPlainOldData)
// int*                           NewOwner                       (Parm, ZeroConstructor, IsPlainOldData)

void AKSObjectiveBase::SetState(struct FName* NewState, int* NewOwner)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSObjectiveBase.SetState");

	AKSObjectiveBase_SetState_Params params;
	params.NewState = NewState;
	params.NewOwner = NewOwner;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSObjectiveBase.ResetState
// (Native, Public, BlueprintCallable)
// Parameters:
// bool*                          ClearOwner                     (Parm, ZeroConstructor, IsPlainOldData)

void AKSObjectiveBase::ResetState(bool* ClearOwner)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSObjectiveBase.ResetState");

	AKSObjectiveBase_ResetState_Params params;
	params.ClearOwner = ClearOwner;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSObjectiveBase.OnRep_ObjectiveState
// (Final, Native, Protected)

void AKSObjectiveBase::OnRep_ObjectiveState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSObjectiveBase.OnRep_ObjectiveState");

	AKSObjectiveBase_OnRep_ObjectiveState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSObjectiveBase.OnRep_ObjectiveId
// (Final, Native, Protected)

void AKSObjectiveBase::OnRep_ObjectiveId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSObjectiveBase.OnRep_ObjectiveId");

	AKSObjectiveBase_OnRep_ObjectiveId_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSObjectiveBase.HandleNewState
// (Native, Event, Protected, BlueprintEvent)

void AKSObjectiveBase::HandleNewState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSObjectiveBase.HandleNewState");

	AKSObjectiveBase_HandleNewState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSObjectiveBase.GetOwningTeamOrPlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AKSObjectiveBase::GetOwningTeamOrPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSObjectiveBase.GetOwningTeamOrPlayer");

	AKSObjectiveBase_GetOwningTeamOrPlayer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSObjectiveBase.GetObjectiveMeterProgressTotal
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSObjectiveBase::GetObjectiveMeterProgressTotal()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSObjectiveBase.GetObjectiveMeterProgressTotal");

	AKSObjectiveBase_GetObjectiveMeterProgressTotal_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSObjectiveBase.GetObjectiveMeterProgress
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSObjectiveBase::GetObjectiveMeterProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSObjectiveBase.GetObjectiveMeterProgress");

	AKSObjectiveBase_GetObjectiveMeterProgress_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSObjectiveBase.GetObjectiveId
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AKSObjectiveBase::GetObjectiveId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSObjectiveBase.GetObjectiveId");

	AKSObjectiveBase_GetObjectiveId_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSObjectiveBase.GetObjectiveDisplayName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText AKSObjectiveBase::GetObjectiveDisplayName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSObjectiveBase.GetObjectiveDisplayName");

	AKSObjectiveBase_GetObjectiveDisplayName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSObjectiveBase.GetObjectiveDisplayLabel
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FString AKSObjectiveBase::GetObjectiveDisplayLabel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSObjectiveBase.GetObjectiveDisplayLabel");

	AKSObjectiveBase_GetObjectiveDisplayLabel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSObjectiveBase.GetCurrentState
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FName                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FName AKSObjectiveBase::GetCurrentState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSObjectiveBase.GetCurrentState");

	AKSObjectiveBase_GetCurrentState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSObjectiveBase.CanChangeState
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FName*                  NewState                       (Parm, ZeroConstructor, IsPlainOldData)
// int*                           NewOwner                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSObjectiveBase::CanChangeState(struct FName* NewState, int* NewOwner)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSObjectiveBase.CanChangeState");

	AKSObjectiveBase_CanChangeState_Params params;
	params.NewState = NewState;
	params.NewOwner = NewOwner;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSObjectiveBase.AssignObjectiveId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int*                           NewId                          (Parm, ZeroConstructor, IsPlainOldData)

void AKSObjectiveBase::AssignObjectiveId(int* NewId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSObjectiveBase.AssignObjectiveId");

	AKSObjectiveBase_AssignObjectiveId_Params params;
	params.NewId = NewId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSExtractionComputer.OnTeamSidesFlipped
// (Final, Native, Public)

void AKSExtractionComputer::OnTeamSidesFlipped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSExtractionComputer.OnTeamSidesFlipped");

	AKSExtractionComputer_OnTeamSidesFlipped_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSExtractionComputer.NotifyBotsOfHackedState
// (Final, Native, Protected)

void AKSExtractionComputer::NotifyBotsOfHackedState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSExtractionComputer.NotifyBotsOfHackedState");

	AKSExtractionComputer_NotifyBotsOfHackedState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSExtractionComputer.LocalHoverStateChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool*                          bIsHovered                     (Parm, ZeroConstructor, IsPlainOldData)

void AKSExtractionComputer::LocalHoverStateChanged(bool* bIsHovered)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSExtractionComputer.LocalHoverStateChanged");

	AKSExtractionComputer_LocalHoverStateChanged_Params params;
	params.bIsHovered = bIsHovered;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSExtractionComputer.InteractionEndOverlap
// (Final, Native, Protected)
// Parameters:
// class UPrimitiveComponent**    OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor**                 OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent**    OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int*                           OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)

void AKSExtractionComputer::InteractionEndOverlap(class UPrimitiveComponent** OverlappedComponent, class AActor** OtherActor, class UPrimitiveComponent** OtherComp, int* OtherBodyIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSExtractionComputer.InteractionEndOverlap");

	AKSExtractionComputer_InteractionEndOverlap_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSExtractionComputer.InteractionComplete
// (Final, Native, Private)

void AKSExtractionComputer::InteractionComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSExtractionComputer.InteractionComplete");

	AKSExtractionComputer_InteractionComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAvenger.StoreCombatInfo
// (Final, Native, Public)
// Parameters:
// struct FCombatEventInfo*       ElimEvent                      (Parm)

void UKSAvenger::StoreCombatInfo(struct FCombatEventInfo* ElimEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAvenger.StoreCombatInfo");

	UKSAvenger_StoreCombatInfo_Params params;
	params.ElimEvent = ElimEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAvenger.RemoveTracker
// (Final, Native, Public)
// Parameters:
// struct FPlayerCombatInfo*      CurrentTrackPlayer             (Parm)

void UKSAvenger::RemoveTracker(struct FPlayerCombatInfo* CurrentTrackPlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAvenger.RemoveTracker");

	UKSAvenger_RemoveTracker_Params params;
	params.CurrentTrackPlayer = CurrentTrackPlayer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAvenger.CheckPlayerTrackers
// (Final, Native, Public)
// Parameters:
// class AKSPlayerState**         Instigator                     (Parm, ZeroConstructor, IsPlainOldData)
// class AKSPlayerState**         Victim                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSAvenger::CheckPlayerTrackers(class AKSPlayerState** Instigator, class AKSPlayerState** Victim)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAvenger.CheckPlayerTrackers");

	UKSAvenger_CheckPlayerTrackers_Params params;
	params.Instigator = Instigator;
	params.Victim = Victim;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSAwardsManager.GetAchievementActivityInstances
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class UKSActivityInstance*> Instances                      (Parm, OutParm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSAwardsManager::GetAchievementActivityInstances(TArray<class UKSActivityInstance*>* Instances)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAwardsManager.GetAchievementActivityInstances");

	UKSAwardsManager_GetAchievementActivityInstances_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Instances != nullptr)
		*Instances = params.Instances;

	return params.ReturnValue;
}


// Function Killstreak.KSBanner.GetSoftSmallBannerIcon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)

void UKSBanner::GetSoftSmallBannerIcon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBanner.GetSoftSmallBannerIcon");

	UKSBanner_GetSoftSmallBannerIcon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBanner.GetSoftLargeBannerIcon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)

void UKSBanner::GetSoftLargeBannerIcon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBanner.GetSoftLargeBannerIcon");

	UKSBanner_GetSoftLargeBannerIcon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSFXCurveComponent.UpdateScalarTrack
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// struct FName*                  TrackName                      (Parm, ZeroConstructor, IsPlainOldData)
// float*                         TrackValue                     (Parm, ZeroConstructor, IsPlainOldData)

void UKSFXCurveComponent::UpdateScalarTrack(struct FName* TrackName, float* TrackValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSFXCurveComponent.UpdateScalarTrack");

	UKSFXCurveComponent_UpdateScalarTrack_Params params;
	params.TrackName = TrackName;
	params.TrackValue = TrackValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSFXCurveComponent.UpdateColorTrack
// (Native, Event, Protected, HasDefaults, BlueprintEvent)
// Parameters:
// struct FName*                  TrackName                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor*           TrackValue                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UKSFXCurveComponent::UpdateColorTrack(struct FName* TrackName, struct FLinearColor* TrackValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSFXCurveComponent.UpdateColorTrack");

	UKSFXCurveComponent_UpdateColorTrack_Params params;
	params.TrackName = TrackName;
	params.TrackValue = TrackValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSFXCurveComponent.Stop
// (Final, Native, Public, BlueprintCallable)

void UKSFXCurveComponent::Stop()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSFXCurveComponent.Stop");

	UKSFXCurveComponent_Stop_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSFXCurveComponent.Reverse
// (Final, Native, Public, BlueprintCallable)

void UKSFXCurveComponent::Reverse()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSFXCurveComponent.Reverse");

	UKSFXCurveComponent_Reverse_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSFXCurveComponent.ResetTime
// (Final, Native, Public, BlueprintCallable)

void UKSFXCurveComponent::ResetTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSFXCurveComponent.ResetTime");

	UKSFXCurveComponent_ResetTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSFXCurveComponent.Play
// (Final, Native, Public, BlueprintCallable)

void UKSFXCurveComponent::Play()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSFXCurveComponent.Play");

	UKSFXCurveComponent_Play_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSFXCurveComponent.IsPlaying
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSFXCurveComponent::IsPlaying()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSFXCurveComponent.IsPlaying");

	UKSFXCurveComponent_IsPlaying_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSFXCurveComponent.GetFxID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FName                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FName UKSFXCurveComponent::GetFxID()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSFXCurveComponent.GetFxID");

	UKSFXCurveComponent_GetFxID_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSFXCurveComponent.GetCharacterOwner
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AKSCharacter*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AKSCharacter* UKSFXCurveComponent::GetCharacterOwner()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSFXCurveComponent.GetCharacterOwner");

	UKSFXCurveComponent_GetCharacterOwner_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSBloodSplatterComponent.AddDamageInstance
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// float*                         DamageAmount                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                DamageOrigin                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void UKSBloodSplatterComponent::AddDamageInstance(float* DamageAmount, struct FVector* DamageOrigin)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBloodSplatterComponent.AddDamageInstance");

	UKSBloodSplatterComponent_AddDamageInstance_Params params;
	params.DamageAmount = DamageAmount;
	params.DamageOrigin = DamageOrigin;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintableInteractable.SetInteractability
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          NewInteractable                (Parm, ZeroConstructor, IsPlainOldData)

void AKSBlueprintableInteractable::SetInteractability(bool* NewInteractable)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintableInteractable.SetInteractability");

	AKSBlueprintableInteractable_SetInteractability_Params params;
	params.NewInteractable = NewInteractable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintableInteractable.InterruptInteraction
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AKSCharacter**           InteractingCharacter           (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bForce                         (Parm, ZeroConstructor, IsPlainOldData)

void AKSBlueprintableInteractable::InterruptInteraction(class AKSCharacter** InteractingCharacter, bool* bForce)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintableInteractable.InterruptInteraction");

	AKSBlueprintableInteractable_InterruptInteraction_Params params;
	params.InteractingCharacter = InteractingCharacter;
	params.bForce = bForce;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintableInteractable.InterruptAllInteractions
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          bForce                         (Parm, ZeroConstructor, IsPlainOldData)

void AKSBlueprintableInteractable::InterruptAllInteractions(bool* bForce)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintableInteractable.InterruptAllInteractions");

	AKSBlueprintableInteractable_InterruptAllInteractions_Params params;
	params.bForce = bForce;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintableInteractable.InternalCanInteractOnPress
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// class AKSCharacter**           InteractingCharacter           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSBlueprintableInteractable::InternalCanInteractOnPress(class AKSCharacter** InteractingCharacter)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintableInteractable.InternalCanInteractOnPress");

	AKSBlueprintableInteractable_InternalCanInteractOnPress_Params params;
	params.InteractingCharacter = InteractingCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSBlueprintableInteractable.InternalCanInteractOnHold
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// class AKSCharacter**           InteractingCharacter           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSBlueprintableInteractable::InternalCanInteractOnHold(class AKSCharacter** InteractingCharacter)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintableInteractable.InternalCanInteractOnHold");

	AKSBlueprintableInteractable_InternalCanInteractOnHold_Params params;
	params.InteractingCharacter = InteractingCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSBlueprintableInteractable.BlueprintInteractionStarted
// (BlueprintAuthorityOnly, Event, Protected, BlueprintEvent)
// Parameters:
// class AKSCharacter**           InteractingCharacter           (Parm, ZeroConstructor, IsPlainOldData)
// float*                         InDuration                     (Parm, ZeroConstructor, IsPlainOldData)

void AKSBlueprintableInteractable::BlueprintInteractionStarted(class AKSCharacter** InteractingCharacter, float* InDuration)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintableInteractable.BlueprintInteractionStarted");

	AKSBlueprintableInteractable_BlueprintInteractionStarted_Params params;
	params.InteractingCharacter = InteractingCharacter;
	params.InDuration = InDuration;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintableInteractable.BlueprintInteractionPoint
// (Native, Event, Protected, HasDefaults, BlueprintEvent, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector AKSBlueprintableInteractable::BlueprintInteractionPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintableInteractable.BlueprintInteractionPoint");

	AKSBlueprintableInteractable_BlueprintInteractionPoint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSBlueprintableInteractable.BlueprintInteractionEnded
// (BlueprintAuthorityOnly, Event, Protected, BlueprintEvent)
// Parameters:
// class AKSCharacter**           InteractingCharacter           (Parm, ZeroConstructor, IsPlainOldData)

void AKSBlueprintableInteractable::BlueprintInteractionEnded(class AKSCharacter** InteractingCharacter)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintableInteractable.BlueprintInteractionEnded");

	AKSBlueprintableInteractable_BlueprintInteractionEnded_Params params;
	params.InteractingCharacter = InteractingCharacter;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintableInteractable.AddOutlinedPrimitiveComponent
// (Native, Protected, BlueprintCallable)
// Parameters:
// class UPrimitiveComponent**    InComponent                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void AKSBlueprintableInteractable::AddOutlinedPrimitiveComponent(class UPrimitiveComponent** InComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintableInteractable.AddOutlinedPrimitiveComponent");

	AKSBlueprintableInteractable_AddOutlinedPrimitiveComponent_Params params;
	params.InComponent = InComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.TryToStartCarry
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// TScriptInterface<class UKSCarriedInterface>* CarriedObject                  (Parm, ZeroConstructor, IsPlainOldData)
// class AKSCharacter**           InHauler                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSBlueprintFunctionLibrary::STATIC_TryToStartCarry(class UObject** WorldContextObject, TScriptInterface<class UKSCarriedInterface>* CarriedObject, class AKSCharacter** InHauler)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.TryToStartCarry");

	UKSBlueprintFunctionLibrary_TryToStartCarry_Params params;
	params.WorldContextObject = WorldContextObject;
	params.CarriedObject = CarriedObject;
	params.InHauler = InHauler;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSBlueprintFunctionLibrary.SpawnTracerEmitterWithRotation
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class UParticleSystem**        EmitterTemplate                (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                start                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                end                            (Parm, ZeroConstructor, IsPlainOldData)
// float*                         TravelSpeed                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FRotator*               Rotation                       (Parm, ZeroConstructor, IsPlainOldData)
// class UTracerParticleSystemComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UTracerParticleSystemComponent* UKSBlueprintFunctionLibrary::STATIC_SpawnTracerEmitterWithRotation(class UObject** WorldContextObject, class UParticleSystem** EmitterTemplate, struct FVector* start, struct FVector* end, float* TravelSpeed, struct FRotator* Rotation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.SpawnTracerEmitterWithRotation");

	UKSBlueprintFunctionLibrary_SpawnTracerEmitterWithRotation_Params params;
	params.WorldContextObject = WorldContextObject;
	params.EmitterTemplate = EmitterTemplate;
	params.start = start;
	params.end = end;
	params.TravelSpeed = TravelSpeed;
	params.Rotation = Rotation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSBlueprintFunctionLibrary.SpawnTracerEmitter
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class UParticleSystem**        EmitterTemplate                (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                start                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                end                            (Parm, ZeroConstructor, IsPlainOldData)
// float*                         TravelSpeed                    (Parm, ZeroConstructor, IsPlainOldData)
// class UTracerParticleSystemComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UTracerParticleSystemComponent* UKSBlueprintFunctionLibrary::STATIC_SpawnTracerEmitter(class UObject** WorldContextObject, class UParticleSystem** EmitterTemplate, struct FVector* start, struct FVector* end, float* TravelSpeed)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.SpawnTracerEmitter");

	UKSBlueprintFunctionLibrary_SpawnTracerEmitter_Params params;
	params.WorldContextObject = WorldContextObject;
	params.EmitterTemplate = EmitterTemplate;
	params.start = start;
	params.end = end;
	params.TravelSpeed = TravelSpeed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSBlueprintFunctionLibrary.SpawnMeshTracerWithRotation
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class UStaticMesh**            StaticMesh                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                start                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                end                            (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 Instigator                     (Parm, ZeroConstructor, IsPlainOldData)
// class UMaterial**              FriendlyMaterial               (Parm, ZeroConstructor, IsPlainOldData)
// class UMaterialInstance**      EnemyMaterial                  (Parm, ZeroConstructor, IsPlainOldData)
// float*                         TravelSpeed                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FRotator*               Rotation                       (Parm, ZeroConstructor, IsPlainOldData)
// class UTracerStaticMeshComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UTracerStaticMeshComponent* UKSBlueprintFunctionLibrary::STATIC_SpawnMeshTracerWithRotation(class UObject** WorldContextObject, class UStaticMesh** StaticMesh, struct FVector* start, struct FVector* end, class AActor** Instigator, class UMaterial** FriendlyMaterial, class UMaterialInstance** EnemyMaterial, float* TravelSpeed, struct FRotator* Rotation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.SpawnMeshTracerWithRotation");

	UKSBlueprintFunctionLibrary_SpawnMeshTracerWithRotation_Params params;
	params.WorldContextObject = WorldContextObject;
	params.StaticMesh = StaticMesh;
	params.start = start;
	params.end = end;
	params.Instigator = Instigator;
	params.FriendlyMaterial = FriendlyMaterial;
	params.EnemyMaterial = EnemyMaterial;
	params.TravelSpeed = TravelSpeed;
	params.Rotation = Rotation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSBlueprintFunctionLibrary.SpawnMeshTracer
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class UStaticMesh**            StaticMesh                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                start                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                end                            (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 Instigator                     (Parm, ZeroConstructor, IsPlainOldData)
// class UMaterial**              FriendlyMaterial               (Parm, ZeroConstructor, IsPlainOldData)
// class UMaterialInstance**      EnemyMaterial                  (Parm, ZeroConstructor, IsPlainOldData)
// float*                         TravelSpeed                    (Parm, ZeroConstructor, IsPlainOldData)
// class UTracerStaticMeshComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UTracerStaticMeshComponent* UKSBlueprintFunctionLibrary::STATIC_SpawnMeshTracer(class UObject** WorldContextObject, class UStaticMesh** StaticMesh, struct FVector* start, struct FVector* end, class AActor** Instigator, class UMaterial** FriendlyMaterial, class UMaterialInstance** EnemyMaterial, float* TravelSpeed)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.SpawnMeshTracer");

	UKSBlueprintFunctionLibrary_SpawnMeshTracer_Params params;
	params.WorldContextObject = WorldContextObject;
	params.StaticMesh = StaticMesh;
	params.start = start;
	params.end = end;
	params.Instigator = Instigator;
	params.FriendlyMaterial = FriendlyMaterial;
	params.EnemyMaterial = EnemyMaterial;
	params.TravelSpeed = TravelSpeed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSBlueprintFunctionLibrary.SpawnImpactDecalAtLocation
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class UMaterialInterface**     DecalMaterial                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                DecalSize                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                Location                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FRotator*               Rotation                       (Parm, ZeroConstructor, IsPlainOldData)
// float*                         LifeSpan                       (Parm, ZeroConstructor, IsPlainOldData)
// class UDecalComponent*         ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UDecalComponent* UKSBlueprintFunctionLibrary::STATIC_SpawnImpactDecalAtLocation(class UObject** WorldContextObject, class UMaterialInterface** DecalMaterial, struct FVector* DecalSize, struct FVector* Location, struct FRotator* Rotation, float* LifeSpan)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.SpawnImpactDecalAtLocation");

	UKSBlueprintFunctionLibrary_SpawnImpactDecalAtLocation_Params params;
	params.WorldContextObject = WorldContextObject;
	params.DecalMaterial = DecalMaterial;
	params.DecalSize = DecalSize;
	params.Location = Location;
	params.Rotation = Rotation;
	params.LifeSpan = LifeSpan;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSBlueprintFunctionLibrary.ShouldDropshipDoorBeOpen
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSBlueprintFunctionLibrary::STATIC_ShouldDropshipDoorBeOpen(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.ShouldDropshipDoorBeOpen");

	UKSBlueprintFunctionLibrary_ShouldDropshipDoorBeOpen_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSBlueprintFunctionLibrary.SetupSkeletalMeshLODReductionGroups
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class USkeletalMesh**          SkeletalMesh                   (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FSkeletalMeshMaterialToReductionGroup>* InReductionGroupMap            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UKSBlueprintFunctionLibrary::STATIC_SetupSkeletalMeshLODReductionGroups(class USkeletalMesh** SkeletalMesh, TArray<struct FSkeletalMeshMaterialToReductionGroup>* InReductionGroupMap)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.SetupSkeletalMeshLODReductionGroups");

	UKSBlueprintFunctionLibrary_SetupSkeletalMeshLODReductionGroups_Params params;
	params.SkeletalMesh = SkeletalMesh;
	params.InReductionGroupMap = InReductionGroupMap;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.ResetRenderTargetBuffer
// (Final, Native, Static, Public, BlueprintCallable)

void UKSBlueprintFunctionLibrary::STATIC_ResetRenderTargetBuffer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.ResetRenderTargetBuffer");

	UKSBlueprintFunctionLibrary_ResetRenderTargetBuffer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.RemoveRowFromLegacyAssetDataTable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UDataTable**             DataTable                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FName*                  RowName                        (Parm, ZeroConstructor, IsPlainOldData)

void UKSBlueprintFunctionLibrary::STATIC_RemoveRowFromLegacyAssetDataTable(class UDataTable** DataTable, struct FName* RowName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.RemoveRowFromLegacyAssetDataTable");

	UKSBlueprintFunctionLibrary_RemoveRowFromLegacyAssetDataTable_Params params;
	params.DataTable = DataTable;
	params.RowName = RowName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.QuickMeshMerge
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<class USkeletalMesh*>*  SourceMeshList                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// class USkeletalMesh*           OutMesh                        (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSBlueprintFunctionLibrary::STATIC_QuickMeshMerge(TArray<class USkeletalMesh*>* SourceMeshList, class USkeletalMesh** OutMesh)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.QuickMeshMerge");

	UKSBlueprintFunctionLibrary_QuickMeshMerge_Params params;
	params.SourceMeshList = SourceMeshList;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutMesh != nullptr)
		*OutMesh = params.OutMesh;

	return params.ReturnValue;
}


// Function Killstreak.KSBlueprintFunctionLibrary.ProcessTakePointHitDamage
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class AKSCharacter**           HitCharacter                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                RelativeHitLocation            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FVector*                RelativeHitNormal              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// class AActor**                 DamageCauser                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 WorldHitLocation               (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// struct FVector                 WorldHitNormal                 (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// struct FVector                 VectorToHitSource              (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// EKSMovementDirection           HitDirection                   (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void UKSBlueprintFunctionLibrary::STATIC_ProcessTakePointHitDamage(class AKSCharacter** HitCharacter, struct FVector* RelativeHitLocation, struct FVector* RelativeHitNormal, class AActor** DamageCauser, struct FVector* WorldHitLocation, struct FVector* WorldHitNormal, struct FVector* VectorToHitSource, EKSMovementDirection* HitDirection)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.ProcessTakePointHitDamage");

	UKSBlueprintFunctionLibrary_ProcessTakePointHitDamage_Params params;
	params.HitCharacter = HitCharacter;
	params.RelativeHitLocation = RelativeHitLocation;
	params.RelativeHitNormal = RelativeHitNormal;
	params.DamageCauser = DamageCauser;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (WorldHitLocation != nullptr)
		*WorldHitLocation = params.WorldHitLocation;
	if (WorldHitNormal != nullptr)
		*WorldHitNormal = params.WorldHitNormal;
	if (VectorToHitSource != nullptr)
		*VectorToHitSource = params.VectorToHitSource;
	if (HitDirection != nullptr)
		*HitDirection = params.HitDirection;
}


// Function Killstreak.KSBlueprintFunctionLibrary.PrintStringInShipping
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FString*                inString                       (Parm, ZeroConstructor)
// bool*                          bPrintToScreen                 (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bPrintToLog                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor*           TextColor                      (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Duration                       (Parm, ZeroConstructor, IsPlainOldData)

void UKSBlueprintFunctionLibrary::STATIC_PrintStringInShipping(class UObject** WorldContextObject, struct FString* inString, bool* bPrintToScreen, bool* bPrintToLog, struct FLinearColor* TextColor, float* Duration)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.PrintStringInShipping");

	UKSBlueprintFunctionLibrary_PrintStringInShipping_Params params;
	params.WorldContextObject = WorldContextObject;
	params.inString = inString;
	params.bPrintToScreen = bPrintToScreen;
	params.bPrintToLog = bPrintToLog;
	params.TextColor = TextColor;
	params.Duration = Duration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.PostEventKS
// (Final, BlueprintCosmetic, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UAkAudioEvent**          AkEvent                        (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 Actor                          (Parm, ZeroConstructor, IsPlainOldData)
// int*                           CallbackMask                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FScriptDelegate*        PostEventCallback              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// bool*                          bStopWhenAttachedToDestroyed   (Parm, ZeroConstructor, IsPlainOldData)
// struct FString*                EventName                      (Parm, ZeroConstructor)
// EOcclusionType*                OcclusionType                  (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          UseDistance                    (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          UseDirection                   (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UKSBlueprintFunctionLibrary::STATIC_PostEventKS(class UAkAudioEvent** AkEvent, class AActor** Actor, int* CallbackMask, struct FScriptDelegate* PostEventCallback, bool* bStopWhenAttachedToDestroyed, struct FString* EventName, EOcclusionType* OcclusionType, bool* UseDistance, bool* UseDirection)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.PostEventKS");

	UKSBlueprintFunctionLibrary_PostEventKS_Params params;
	params.AkEvent = AkEvent;
	params.Actor = Actor;
	params.CallbackMask = CallbackMask;
	params.PostEventCallback = PostEventCallback;
	params.bStopWhenAttachedToDestroyed = bStopWhenAttachedToDestroyed;
	params.EventName = EventName;
	params.OcclusionType = OcclusionType;
	params.UseDistance = UseDistance;
	params.UseDirection = UseDirection;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSBlueprintFunctionLibrary.PostEvent
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UAkAudioEvent**          AkEvent                        (Parm, ZeroConstructor, IsPlainOldData)
// class UObject**                GameObject                     (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bStopWhenAttachedToDestroyed   (Parm, ZeroConstructor, IsPlainOldData)
// struct FString*                EventName                      (Parm, ZeroConstructor)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UKSBlueprintFunctionLibrary::STATIC_PostEvent(class UAkAudioEvent** AkEvent, class UObject** GameObject, bool* bStopWhenAttachedToDestroyed, struct FString* EventName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.PostEvent");

	UKSBlueprintFunctionLibrary_PostEvent_Params params;
	params.AkEvent = AkEvent;
	params.GameObject = GameObject;
	params.bStopWhenAttachedToDestroyed = bStopWhenAttachedToDestroyed;
	params.EventName = EventName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSBlueprintFunctionLibrary.PlayWorldCameraShake1P3P
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 Shake1P                        (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 Shake3P                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                Epicenter                      (Parm, ZeroConstructor, IsPlainOldData)
// float*                         InnerRadius                    (Parm, ZeroConstructor, IsPlainOldData)
// float*                         OuterRadius                    (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Falloff                        (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bOrientShakeTowardsEpicenter   (Parm, ZeroConstructor, IsPlainOldData)

void UKSBlueprintFunctionLibrary::STATIC_PlayWorldCameraShake1P3P(class UObject** WorldContextObject, class UClass** Shake1P, class UClass** Shake3P, struct FVector* Epicenter, float* InnerRadius, float* OuterRadius, float* Falloff, bool* bOrientShakeTowardsEpicenter)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.PlayWorldCameraShake1P3P");

	UKSBlueprintFunctionLibrary_PlayWorldCameraShake1P3P_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Shake1P = Shake1P;
	params.Shake3P = Shake3P;
	params.Epicenter = Epicenter;
	params.InnerRadius = InnerRadius;
	params.OuterRadius = OuterRadius;
	params.Falloff = Falloff;
	params.bOrientShakeTowardsEpicenter = bOrientShakeTowardsEpicenter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.MakeActivityReference
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int64_t*                       ReferenceValue1                (Parm, ZeroConstructor, IsPlainOldData)
// int64_t*                       ReferenceValue2                (Parm, ZeroConstructor, IsPlainOldData)
// int64_t*                       ReferenceValue3                (Parm, ZeroConstructor, IsPlainOldData)
// struct FActivityReference      ReturnValue                    (Parm, OutParm, ReturnParm)

struct FActivityReference UKSBlueprintFunctionLibrary::STATIC_MakeActivityReference(int64_t* ReferenceValue1, int64_t* ReferenceValue2, int64_t* ReferenceValue3)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.MakeActivityReference");

	UKSBlueprintFunctionLibrary_MakeActivityReference_Params params;
	params.ReferenceValue1 = ReferenceValue1;
	params.ReferenceValue2 = ReferenceValue2;
	params.ReferenceValue3 = ReferenceValue3;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSBlueprintFunctionLibrary.KSConvertRenderTargetToTexture2D
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UTextureRenderTarget2D** RenderTarget                   (Parm, ZeroConstructor, IsPlainOldData)
// class UTexture2D**             Texture                        (Parm, ZeroConstructor, IsPlainOldData)

void UKSBlueprintFunctionLibrary::STATIC_KSConvertRenderTargetToTexture2D(class UObject** WorldContextObject, class UTextureRenderTarget2D** RenderTarget, class UTexture2D** Texture)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.KSConvertRenderTargetToTexture2D");

	UKSBlueprintFunctionLibrary_KSConvertRenderTargetToTexture2D_Params params;
	params.WorldContextObject = WorldContextObject;
	params.RenderTarget = RenderTarget;
	params.Texture = Texture;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.ItemHasToggleRelationship
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FShopItem*              Item                           (ConstParm, Parm, OutParm, ReferenceParm)
// TArray<EShopItemType>*         ValidShopTypes                 (Parm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSBlueprintFunctionLibrary::STATIC_ItemHasToggleRelationship(struct FShopItem* Item, TArray<EShopItemType>* ValidShopTypes)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.ItemHasToggleRelationship");

	UKSBlueprintFunctionLibrary_ItemHasToggleRelationship_Params params;
	params.Item = Item;
	params.ValidShopTypes = ValidShopTypes;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSBlueprintFunctionLibrary.IsViewportWorld
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSBlueprintFunctionLibrary::STATIC_IsViewportWorld(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.IsViewportWorld");

	UKSBlueprintFunctionLibrary_IsViewportWorld_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSBlueprintFunctionLibrary.IsRecurringDamageTypeClass
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass**                 DamageTypeClass                (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSBlueprintFunctionLibrary::STATIC_IsRecurringDamageTypeClass(class UClass** DamageTypeClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.IsRecurringDamageTypeClass");

	UKSBlueprintFunctionLibrary_IsRecurringDamageTypeClass_Params params;
	params.DamageTypeClass = DamageTypeClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSBlueprintFunctionLibrary.IsRecurringDamageType
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UDamageType**            DamageType                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSBlueprintFunctionLibrary::STATIC_IsRecurringDamageType(class UDamageType** DamageType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.IsRecurringDamageType");

	UKSBlueprintFunctionLibrary_IsRecurringDamageType_Params params;
	params.DamageType = DamageType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSBlueprintFunctionLibrary.IsRecurringDamageCategory
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EDamageCategory*               DamageCategory                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSBlueprintFunctionLibrary::STATIC_IsRecurringDamageCategory(EDamageCategory* DamageCategory)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.IsRecurringDamageCategory");

	UKSBlueprintFunctionLibrary_IsRecurringDamageCategory_Params params;
	params.DamageCategory = DamageCategory;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSBlueprintFunctionLibrary.IsKillCamWorld
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSBlueprintFunctionLibrary::STATIC_IsKillCamWorld(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.IsKillCamWorld");

	UKSBlueprintFunctionLibrary_IsKillCamWorld_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSBlueprintFunctionLibrary.IsItemAvailable
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSBlueprintFunctionLibrary::STATIC_IsItemAvailable()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.IsItemAvailable");

	UKSBlueprintFunctionLibrary_IsItemAvailable_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSBlueprintFunctionLibrary.IsInViewportWorld
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor**                 Actor                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSBlueprintFunctionLibrary::STATIC_IsInViewportWorld(class AActor** Actor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.IsInViewportWorld");

	UKSBlueprintFunctionLibrary_IsInViewportWorld_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSBlueprintFunctionLibrary.IsInKillCamWorld
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor**                 Actor                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSBlueprintFunctionLibrary::STATIC_IsInKillCamWorld(class AActor** Actor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.IsInKillCamWorld");

	UKSBlueprintFunctionLibrary_IsInKillCamWorld_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSBlueprintFunctionLibrary.IsChunkInstalling
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int*                           ChunkId                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSBlueprintFunctionLibrary::STATIC_IsChunkInstalling(int* ChunkId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.IsChunkInstalling");

	UKSBlueprintFunctionLibrary_IsChunkInstalling_Params params;
	params.ChunkId = ChunkId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSBlueprintFunctionLibrary.IsChunkAvailable
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int*                           ChunkId                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSBlueprintFunctionLibrary::STATIC_IsChunkAvailable(int* ChunkId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.IsChunkAvailable");

	UKSBlueprintFunctionLibrary_IsChunkAvailable_Params params;
	params.ChunkId = ChunkId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSBlueprintFunctionLibrary.IsAssetAvailable
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FAssetData*             AssetData                      (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSBlueprintFunctionLibrary::STATIC_IsAssetAvailable(struct FAssetData* AssetData)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.IsAssetAvailable");

	UKSBlueprintFunctionLibrary_IsAssetAvailable_Params params;
	params.AssetData = AssetData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSBlueprintFunctionLibrary.IsAnyChunkInstalling
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSBlueprintFunctionLibrary::STATIC_IsAnyChunkInstalling()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.IsAnyChunkInstalling");

	UKSBlueprintFunctionLibrary_IsAnyChunkInstalling_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSBlueprintFunctionLibrary.HideOutline
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPrimitiveComponent**    TargetComponent                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UKSBlueprintFunctionLibrary::STATIC_HideOutline(class UPrimitiveComponent** TargetComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.HideOutline");

	UKSBlueprintFunctionLibrary_HideOutline_Params params;
	params.TargetComponent = TargetComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.GetTeammatesFor
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 Actor                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bIncludeSelf                   (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class AKSCharacter*>    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class AKSCharacter*> UKSBlueprintFunctionLibrary::STATIC_GetTeammatesFor(class UObject** WorldContextObject, class AActor** Actor, bool* bIncludeSelf)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.GetTeammatesFor");

	UKSBlueprintFunctionLibrary_GetTeammatesFor_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Actor = Actor;
	params.bIncludeSelf = bIncludeSelf;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSBlueprintFunctionLibrary.GetTeamFor
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 Actor                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AKSTeamState*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AKSTeamState* UKSBlueprintFunctionLibrary::STATIC_GetTeamFor(class UObject** WorldContextObject, class AActor** Actor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.GetTeamFor");

	UKSBlueprintFunctionLibrary_GetTeamFor_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSBlueprintFunctionLibrary.GetSkeletalMeshSettingsLODNum
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class USkeletalMeshLODSettings** SkeletalMeshLODSettings        (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UKSBlueprintFunctionLibrary::STATIC_GetSkeletalMeshSettingsLODNum(class USkeletalMeshLODSettings** SkeletalMeshLODSettings)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.GetSkeletalMeshSettingsLODNum");

	UKSBlueprintFunctionLibrary_GetSkeletalMeshSettingsLODNum_Params params;
	params.SkeletalMeshLODSettings = SkeletalMeshLODSettings;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSBlueprintFunctionLibrary.GetSkeletalMeshLODNum
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class USkeletalMesh**          SkeletalMesh                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UKSBlueprintFunctionLibrary::STATIC_GetSkeletalMeshLODNum(class USkeletalMesh** SkeletalMesh)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.GetSkeletalMeshLODNum");

	UKSBlueprintFunctionLibrary_GetSkeletalMeshLODNum_Params params;
	params.SkeletalMesh = SkeletalMesh;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSBlueprintFunctionLibrary.GetSideForTeam
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// int*                           teamNum                        (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UKSBlueprintFunctionLibrary::STATIC_GetSideForTeam(class UObject** WorldContextObject, int* teamNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.GetSideForTeam");

	UKSBlueprintFunctionLibrary_GetSideForTeam_Params params;
	params.WorldContextObject = WorldContextObject;
	params.teamNum = teamNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSBlueprintFunctionLibrary.GetScreenSpaceAccuracyRadius
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// class APlayerController**      PlayerController               (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Accuracy                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          ViewPortRadius                 (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void UKSBlueprintFunctionLibrary::STATIC_GetScreenSpaceAccuracyRadius(class APlayerController** PlayerController, float* Accuracy, float* ViewPortRadius)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.GetScreenSpaceAccuracyRadius");

	UKSBlueprintFunctionLibrary_GetScreenSpaceAccuracyRadius_Params params;
	params.PlayerController = PlayerController;
	params.Accuracy = Accuracy;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (ViewPortRadius != nullptr)
		*ViewPortRadius = params.ViewPortRadius;
}


// Function Killstreak.KSBlueprintFunctionLibrary.GetOutlineParameters
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EPlayerSilhouetteType*         ColorType                      (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bHideWhenOccluded              (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bShouldFill                    (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bIsHot                         (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bIsFriendly                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FKSOutlineParameters    ReturnValue                    (Parm, OutParm, ReturnParm)

struct FKSOutlineParameters UKSBlueprintFunctionLibrary::STATIC_GetOutlineParameters(EPlayerSilhouetteType* ColorType, bool* bHideWhenOccluded, bool* bShouldFill, bool* bIsHot, bool* bIsFriendly)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.GetOutlineParameters");

	UKSBlueprintFunctionLibrary_GetOutlineParameters_Params params;
	params.ColorType = ColorType;
	params.bHideWhenOccluded = bHideWhenOccluded;
	params.bShouldFill = bShouldFill;
	params.bIsHot = bIsHot;
	params.bIsFriendly = bIsFriendly;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSBlueprintFunctionLibrary.GetOutlineCustomDepth
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EPlayerSilhouetteType*         ColorType                      (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bHideWhenOccluded              (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bShouldFill                    (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bIsHot                         (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bIsFriendly                    (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

unsigned char UKSBlueprintFunctionLibrary::STATIC_GetOutlineCustomDepth(EPlayerSilhouetteType* ColorType, bool* bHideWhenOccluded, bool* bShouldFill, bool* bIsHot, bool* bIsFriendly)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.GetOutlineCustomDepth");

	UKSBlueprintFunctionLibrary_GetOutlineCustomDepth_Params params;
	params.ColorType = ColorType;
	params.bHideWhenOccluded = bHideWhenOccluded;
	params.bShouldFill = bShouldFill;
	params.bIsHot = bIsHot;
	params.bIsFriendly = bIsFriendly;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSBlueprintFunctionLibrary.GetNumEventAssistantsForCombatEvent
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FCombatEventInfo        CombatEvent                    (Parm, OutParm)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UKSBlueprintFunctionLibrary::STATIC_GetNumEventAssistantsForCombatEvent(struct FCombatEventInfo* CombatEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.GetNumEventAssistantsForCombatEvent");

	UKSBlueprintFunctionLibrary_GetNumEventAssistantsForCombatEvent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (CombatEvent != nullptr)
		*CombatEvent = params.CombatEvent;

	return params.ReturnValue;
}


// Function Killstreak.KSBlueprintFunctionLibrary.GetNumberOfEmittersInSystem
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UParticleSystemComponent** SystemComponent                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UKSBlueprintFunctionLibrary::STATIC_GetNumberOfEmittersInSystem(class UParticleSystemComponent** SystemComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.GetNumberOfEmittersInSystem");

	UKSBlueprintFunctionLibrary_GetNumberOfEmittersInSystem_Params params;
	params.SystemComponent = SystemComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSBlueprintFunctionLibrary.GetMinimapTextureForMap
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FString*                mapName                        (Parm, ZeroConstructor)

void UKSBlueprintFunctionLibrary::STATIC_GetMinimapTextureForMap(struct FString* mapName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.GetMinimapTextureForMap");

	UKSBlueprintFunctionLibrary_GetMinimapTextureForMap_Params params;
	params.mapName = mapName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.GetMiniMapAssistant
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AKSMiniMapAssistant*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AKSMiniMapAssistant* UKSBlueprintFunctionLibrary::STATIC_GetMiniMapAssistant(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.GetMiniMapAssistant");

	UKSBlueprintFunctionLibrary_GetMiniMapAssistant_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSBlueprintFunctionLibrary.GetMeshOffsetForSimulatedCharacter
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class AKSCharacter**           SimulatedCharacter             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector UKSBlueprintFunctionLibrary::STATIC_GetMeshOffsetForSimulatedCharacter(class AKSCharacter** SimulatedCharacter)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.GetMeshOffsetForSimulatedCharacter");

	UKSBlueprintFunctionLibrary_GetMeshOffsetForSimulatedCharacter_Params params;
	params.SimulatedCharacter = SimulatedCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSBlueprintFunctionLibrary.GetLocalPlayerController
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// int*                           PlayerIndex                    (Parm, ZeroConstructor, IsPlainOldData)
// class APlayerController*       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APlayerController* UKSBlueprintFunctionLibrary::STATIC_GetLocalPlayerController(class UObject** WorldContextObject, int* PlayerIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.GetLocalPlayerController");

	UKSBlueprintFunctionLibrary_GetLocalPlayerController_Params params;
	params.WorldContextObject = WorldContextObject;
	params.PlayerIndex = PlayerIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSBlueprintFunctionLibrary.GetKSGameState_RoundGame
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AKSGameState_RoundGame*  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AKSGameState_RoundGame* UKSBlueprintFunctionLibrary::STATIC_GetKSGameState_RoundGame(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.GetKSGameState_RoundGame");

	UKSBlueprintFunctionLibrary_GetKSGameState_RoundGame_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSBlueprintFunctionLibrary.GetKSGameState_NeutralBomb
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AKSGameState_NeutralBomb* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AKSGameState_NeutralBomb* UKSBlueprintFunctionLibrary::STATIC_GetKSGameState_NeutralBomb(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.GetKSGameState_NeutralBomb");

	UKSBlueprintFunctionLibrary_GetKSGameState_NeutralBomb_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSBlueprintFunctionLibrary.GetKSGameState_Extraction
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AKSGameState_Extraction* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AKSGameState_Extraction* UKSBlueprintFunctionLibrary::STATIC_GetKSGameState_Extraction(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.GetKSGameState_Extraction");

	UKSBlueprintFunctionLibrary_GetKSGameState_Extraction_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSBlueprintFunctionLibrary.GetKSGameState
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AKSGameState*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AKSGameState* UKSBlueprintFunctionLibrary::STATIC_GetKSGameState(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.GetKSGameState");

	UKSBlueprintFunctionLibrary_GetKSGameState_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSBlueprintFunctionLibrary.GetKSGameMode_RoundGame
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AKSGameMode_RoundGame*   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AKSGameMode_RoundGame* UKSBlueprintFunctionLibrary::STATIC_GetKSGameMode_RoundGame(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.GetKSGameMode_RoundGame");

	UKSBlueprintFunctionLibrary_GetKSGameMode_RoundGame_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSBlueprintFunctionLibrary.GetKSGameMode_Extraction
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AKSGameMode_Extraction*  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AKSGameMode_Extraction* UKSBlueprintFunctionLibrary::STATIC_GetKSGameMode_Extraction(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.GetKSGameMode_Extraction");

	UKSBlueprintFunctionLibrary_GetKSGameMode_Extraction_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSBlueprintFunctionLibrary.GetKSGameMode
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AKSGameMode*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AKSGameMode* UKSBlueprintFunctionLibrary::STATIC_GetKSGameMode(class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.GetKSGameMode");

	UKSBlueprintFunctionLibrary_GetKSGameMode_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSBlueprintFunctionLibrary.GetKillCamForPlayer
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// int*                           LocalPlayerIndex               (Parm, ZeroConstructor, IsPlainOldData)
// class UKSKillCam*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UKSKillCam* UKSBlueprintFunctionLibrary::STATIC_GetKillCamForPlayer(class UObject** WorldContextObject, int* LocalPlayerIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.GetKillCamForPlayer");

	UKSBlueprintFunctionLibrary_GetKillCamForPlayer_Params params;
	params.WorldContextObject = WorldContextObject;
	params.LocalPlayerIndex = LocalPlayerIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSBlueprintFunctionLibrary.GetKillCamActorGuidFor
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 Actor                          (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UKSBlueprintFunctionLibrary::STATIC_GetKillCamActorGuidFor(class UObject** WorldContextObject, class AActor** Actor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.GetKillCamActorGuidFor");

	UKSBlueprintFunctionLibrary_GetKillCamActorGuidFor_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSBlueprintFunctionLibrary.GetEventAssistantAtIndexForCombatEvent
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FCombatEventInfo        CombatEvent                    (Parm, OutParm)
// int*                           Index                          (Parm, ZeroConstructor, IsPlainOldData)
// class APlayerState*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APlayerState* UKSBlueprintFunctionLibrary::STATIC_GetEventAssistantAtIndexForCombatEvent(int* Index, struct FCombatEventInfo* CombatEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.GetEventAssistantAtIndexForCombatEvent");

	UKSBlueprintFunctionLibrary_GetEventAssistantAtIndexForCombatEvent_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (CombatEvent != nullptr)
		*CombatEvent = params.CombatEvent;

	return params.ReturnValue;
}


// Function Killstreak.KSBlueprintFunctionLibrary.GetEnemyTeamsFor
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 Actor                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// TArray<class AKSTeamState*>    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class AKSTeamState*> UKSBlueprintFunctionLibrary::STATIC_GetEnemyTeamsFor(class UObject** WorldContextObject, class AActor** Actor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.GetEnemyTeamsFor");

	UKSBlueprintFunctionLibrary_GetEnemyTeamsFor_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSBlueprintFunctionLibrary.GetEnemiesFor
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 Actor                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// TArray<class AKSCharacter*>    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class AKSCharacter*> UKSBlueprintFunctionLibrary::STATIC_GetEnemiesFor(class UObject** WorldContextObject, class AActor** Actor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.GetEnemiesFor");

	UKSBlueprintFunctionLibrary_GetEnemiesFor_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSBlueprintFunctionLibrary.GetEndTraceLocation
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FAimData*               Aim                            (ConstParm, Parm, OutParm, ReferenceParm)
// float*                         Range                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector UKSBlueprintFunctionLibrary::STATIC_GetEndTraceLocation(struct FAimData* Aim, float* Range)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.GetEndTraceLocation");

	UKSBlueprintFunctionLibrary_GetEndTraceLocation_Params params;
	params.Aim = Aim;
	params.Range = Range;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSBlueprintFunctionLibrary.GetCurrentFrameTimestamp
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FDateTime               Timestamp                      (Parm, OutParm, ZeroConstructor)

void UKSBlueprintFunctionLibrary::STATIC_GetCurrentFrameTimestamp(struct FDateTime* Timestamp)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.GetCurrentFrameTimestamp");

	UKSBlueprintFunctionLibrary_GetCurrentFrameTimestamp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Timestamp != nullptr)
		*Timestamp = params.Timestamp;
}


// Function Killstreak.KSBlueprintFunctionLibrary.GetAnimMontageSectionLength
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UAnimMontage**           TargetMontage                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FName*                  SectionName                    (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSBlueprintFunctionLibrary::STATIC_GetAnimMontageSectionLength(class UAnimMontage** TargetMontage, struct FName* SectionName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.GetAnimMontageSectionLength");

	UKSBlueprintFunctionLibrary_GetAnimMontageSectionLength_Params params;
	params.TargetMontage = TargetMontage;
	params.SectionName = SectionName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSBlueprintFunctionLibrary.GetAllWeaponComponents
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// TScriptInterface<class UKSEquipmentContainerOwner>* Target                         (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UKSWeaponComponent*> OutWeaponComponents            (Parm, OutParm, ZeroConstructor)

void UKSBlueprintFunctionLibrary::STATIC_GetAllWeaponComponents(TScriptInterface<class UKSEquipmentContainerOwner>* Target, TArray<class UKSWeaponComponent*>* OutWeaponComponents)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.GetAllWeaponComponents");

	UKSBlueprintFunctionLibrary_GetAllWeaponComponents_Params params;
	params.Target = Target;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutWeaponComponents != nullptr)
		*OutWeaponComponents = params.OutWeaponComponents;
}


// Function Killstreak.KSBlueprintFunctionLibrary.GetAllItemTableElements
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UDataTable**             InDataTable                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FName>           OutRowNames                    (Parm, OutParm, ZeroConstructor)
// TArray<struct FItemTableElement> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FItemTableElement> UKSBlueprintFunctionLibrary::STATIC_GetAllItemTableElements(class UDataTable** InDataTable, TArray<struct FName>* OutRowNames)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.GetAllItemTableElements");

	UKSBlueprintFunctionLibrary_GetAllItemTableElements_Params params;
	params.InDataTable = InDataTable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutRowNames != nullptr)
		*OutRowNames = params.OutRowNames;

	return params.ReturnValue;
}


// Function Killstreak.KSBlueprintFunctionLibrary.GetAllEquipment
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// TScriptInterface<class UKSEquipmentContainerOwner>* Target                         (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UObject*>         OutEquipment                   (Parm, OutParm, ZeroConstructor)

void UKSBlueprintFunctionLibrary::STATIC_GetAllEquipment(TScriptInterface<class UKSEquipmentContainerOwner>* Target, TArray<class UObject*>* OutEquipment)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.GetAllEquipment");

	UKSBlueprintFunctionLibrary_GetAllEquipment_Params params;
	params.Target = Target;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutEquipment != nullptr)
		*OutEquipment = params.OutEquipment;
}


// Function Killstreak.KSBlueprintFunctionLibrary.FadeIn
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// float*                         FadeInDuration                 (Parm, ZeroConstructor, IsPlainOldData)

void UKSBlueprintFunctionLibrary::STATIC_FadeIn(class UObject** WorldContextObject, float* FadeInDuration)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.FadeIn");

	UKSBlueprintFunctionLibrary_FadeIn_Params params;
	params.WorldContextObject = WorldContextObject;
	params.FadeInDuration = FadeInDuration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.ExportCSVData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FString*                Filename                       (Parm, ZeroConstructor)
// TArray<struct FKSCSVRow>*      CSVRows                        (Parm, ZeroConstructor)
// bool*                          AppendTime                     (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          AllowOverwriting               (Parm, ZeroConstructor, IsPlainOldData)
// struct FString*                SaveDirectory                  (Parm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSBlueprintFunctionLibrary::STATIC_ExportCSVData(struct FString* Filename, TArray<struct FKSCSVRow>* CSVRows, bool* AppendTime, bool* AllowOverwriting, struct FString* SaveDirectory)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.ExportCSVData");

	UKSBlueprintFunctionLibrary_ExportCSVData_Params params;
	params.Filename = Filename;
	params.CSVRows = CSVRows;
	params.AppendTime = AppendTime;
	params.AllowOverwriting = AllowOverwriting;
	params.SaveDirectory = SaveDirectory;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSBlueprintFunctionLibrary.CreateSphereComponentFor
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject**                WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 Owner                          (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Radius                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FTransform*             Transform                      (Parm, IsPlainOldData)
// class USphereComponent*        ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class USphereComponent* UKSBlueprintFunctionLibrary::STATIC_CreateSphereComponentFor(class UObject** WorldContextObject, class AActor** Owner, float* Radius, struct FTransform* Transform)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.CreateSphereComponentFor");

	UKSBlueprintFunctionLibrary_CreateSphereComponentFor_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Owner = Owner;
	params.Radius = Radius;
	params.Transform = Transform;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSBlueprintFunctionLibrary.ApplyOutlineParameters
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FKSOutlineParameters*   OutlineParameters              (ConstParm, Parm, OutParm, ReferenceParm)
// class UPrimitiveComponent**    TargetComponent                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool*                          bEnabled                       (Parm, ZeroConstructor, IsPlainOldData)

void UKSBlueprintFunctionLibrary::STATIC_ApplyOutlineParameters(struct FKSOutlineParameters* OutlineParameters, class UPrimitiveComponent** TargetComponent, bool* bEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.ApplyOutlineParameters");

	UKSBlueprintFunctionLibrary_ApplyOutlineParameters_Params params;
	params.OutlineParameters = OutlineParameters;
	params.TargetComponent = TargetComponent;
	params.bEnabled = bEnabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.AddStaticMeshToLegacyAssetDataTable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UDataTable**             DataTable                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FName*                  RowName                        (Parm, ZeroConstructor, IsPlainOldData)
// class UStaticMesh**            Asset                          (Parm, ZeroConstructor, IsPlainOldData)

void UKSBlueprintFunctionLibrary::STATIC_AddStaticMeshToLegacyAssetDataTable(class UDataTable** DataTable, struct FName* RowName, class UStaticMesh** Asset)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.AddStaticMeshToLegacyAssetDataTable");

	UKSBlueprintFunctionLibrary_AddStaticMeshToLegacyAssetDataTable_Params params;
	params.DataTable = DataTable;
	params.RowName = RowName;
	params.Asset = Asset;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.AddSkeletalMeshToLegacyAssetDataTable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UDataTable**             DataTable                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FName*                  RowName                        (Parm, ZeroConstructor, IsPlainOldData)
// class USkeletalMesh**          Asset                          (Parm, ZeroConstructor, IsPlainOldData)

void UKSBlueprintFunctionLibrary::STATIC_AddSkeletalMeshToLegacyAssetDataTable(class UDataTable** DataTable, struct FName* RowName, class USkeletalMesh** Asset)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.AddSkeletalMeshToLegacyAssetDataTable");

	UKSBlueprintFunctionLibrary_AddSkeletalMeshToLegacyAssetDataTable_Params params;
	params.DataTable = DataTable;
	params.RowName = RowName;
	params.Asset = Asset;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.AddRowToLegacyAssetDataTable
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UDataTable**             DataTable                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FName*                  RowName                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FHardAssetTableRow*     Row                            (ConstParm, Parm, OutParm, ReferenceParm)

void UKSBlueprintFunctionLibrary::STATIC_AddRowToLegacyAssetDataTable(class UDataTable** DataTable, struct FName* RowName, struct FHardAssetTableRow* Row)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.AddRowToLegacyAssetDataTable");

	UKSBlueprintFunctionLibrary_AddRowToLegacyAssetDataTable_Params params;
	params.DataTable = DataTable;
	params.RowName = RowName;
	params.Row = Row;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.AddParticleSystemToLegacyAssetDataTable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UDataTable**             DataTable                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FName*                  RowName                        (Parm, ZeroConstructor, IsPlainOldData)
// class UParticleSystem**        Asset                          (Parm, ZeroConstructor, IsPlainOldData)

void UKSBlueprintFunctionLibrary::STATIC_AddParticleSystemToLegacyAssetDataTable(class UDataTable** DataTable, struct FName* RowName, class UParticleSystem** Asset)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.AddParticleSystemToLegacyAssetDataTable");

	UKSBlueprintFunctionLibrary_AddParticleSystemToLegacyAssetDataTable_Params params;
	params.DataTable = DataTable;
	params.RowName = RowName;
	params.Asset = Asset;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.AddMaterialInterfaceToLegacyAssetDataTable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UDataTable**             DataTable                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FName*                  RowName                        (Parm, ZeroConstructor, IsPlainOldData)
// class UMaterialInterface**     Asset                          (Parm, ZeroConstructor, IsPlainOldData)

void UKSBlueprintFunctionLibrary::STATIC_AddMaterialInterfaceToLegacyAssetDataTable(class UDataTable** DataTable, struct FName* RowName, class UMaterialInterface** Asset)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.AddMaterialInterfaceToLegacyAssetDataTable");

	UKSBlueprintFunctionLibrary_AddMaterialInterfaceToLegacyAssetDataTable_Params params;
	params.DataTable = DataTable;
	params.RowName = RowName;
	params.Asset = Asset;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.AddClassToLegacyAssetDataTable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UDataTable**             DataTable                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FName*                  RowName                        (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 Asset                          (Parm, ZeroConstructor, IsPlainOldData)

void UKSBlueprintFunctionLibrary::STATIC_AddClassToLegacyAssetDataTable(class UDataTable** DataTable, struct FName* RowName, class UClass** Asset)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.AddClassToLegacyAssetDataTable");

	UKSBlueprintFunctionLibrary_AddClassToLegacyAssetDataTable_Params params;
	params.DataTable = DataTable;
	params.RowName = RowName;
	params.Asset = Asset;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.AddAudioEventToLegacyAssetDataTable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UDataTable**             DataTable                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FName*                  RowName                        (Parm, ZeroConstructor, IsPlainOldData)
// class UAkAudioEvent**          Asset                          (Parm, ZeroConstructor, IsPlainOldData)

void UKSBlueprintFunctionLibrary::STATIC_AddAudioEventToLegacyAssetDataTable(class UDataTable** DataTable, struct FName* RowName, class UAkAudioEvent** Asset)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.AddAudioEventToLegacyAssetDataTable");

	UKSBlueprintFunctionLibrary_AddAudioEventToLegacyAssetDataTable_Params params;
	params.DataTable = DataTable;
	params.RowName = RowName;
	params.Asset = Asset;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.AddAnimationAssetToLegacyAssetDataTable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UDataTable**             DataTable                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FName*                  RowName                        (Parm, ZeroConstructor, IsPlainOldData)
// class UAnimationAsset**        Asset                          (Parm, ZeroConstructor, IsPlainOldData)

void UKSBlueprintFunctionLibrary::STATIC_AddAnimationAssetToLegacyAssetDataTable(class UDataTable** DataTable, struct FName* RowName, class UAnimationAsset** Asset)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.AddAnimationAssetToLegacyAssetDataTable");

	UKSBlueprintFunctionLibrary_AddAnimationAssetToLegacyAssetDataTable_Params params;
	params.DataTable = DataTable;
	params.RowName = RowName;
	params.Asset = Asset;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBotFactory.Spawn
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int*                           Count                          (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class AKSAIController*> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class AKSAIController*> AKSBotFactory::Spawn(int* Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBotFactory.Spawn");

	AKSBotFactory_Spawn_Params params;
	params.Count = Count;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSBotFactory.ShuffleSpawnPoints
// (Final, Native, Public, BlueprintCallable)

void AKSBotFactory::ShuffleSpawnPoints()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBotFactory.ShuffleSpawnPoints");

	AKSBotFactory_ShuffleSpawnPoints_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBotFactory.SetWayPointSet
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AKSWayPointSet**         InWPS                          (Parm, ZeroConstructor, IsPlainOldData)

void AKSBotFactory::SetWayPointSet(class AKSWayPointSet** InWPS)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBotFactory.SetWayPointSet");

	AKSBotFactory_SetWayPointSet_Params params;
	params.InWPS = InWPS;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBotFactory.SetSpawnPoints
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class APlayerStart*>*   InPlayerStarts                 (Parm, ZeroConstructor)

void AKSBotFactory::SetSpawnPoints(TArray<class APlayerStart*>* InPlayerStarts)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBotFactory.SetSpawnPoints");

	AKSBotFactory_SetSpawnPoints_Params params;
	params.InPlayerStarts = InPlayerStarts;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBotFactory.SetSideNum
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int*                           InSideNum                      (Parm, ZeroConstructor, IsPlainOldData)

void AKSBotFactory::SetSideNum(int* InSideNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBotFactory.SetSideNum");

	AKSBotFactory_SetSideNum_Params params;
	params.InSideNum = InSideNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBotFactory.SetShouldReverseWayPointSetDirection
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          InShouldReverse                (Parm, ZeroConstructor, IsPlainOldData)

void AKSBotFactory::SetShouldReverseWayPointSetDirection(bool* InShouldReverse)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBotFactory.SetShouldReverseWayPointSetDirection");

	AKSBotFactory_SetShouldReverseWayPointSetDirection_Params params;
	params.InShouldReverse = InShouldReverse;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBotFactory.SetBotSpawnCollection
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UKSBotDefinitionCollection** InSpawnCollection              (Parm, ZeroConstructor, IsPlainOldData)

void AKSBotFactory::SetBotSpawnCollection(class UKSBotDefinitionCollection** InSpawnCollection)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBotFactory.SetBotSpawnCollection");

	AKSBotFactory_SetBotSpawnCollection_Params params;
	params.InSpawnCollection = InSpawnCollection;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBotFactory.OnSpawnedBotDestroyed
// (Final, Native, Protected)
// Parameters:
// class AActor**                 DestroyedActor                 (Parm, ZeroConstructor, IsPlainOldData)

void AKSBotFactory::OnSpawnedBotDestroyed(class AActor** DestroyedActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBotFactory.OnSpawnedBotDestroyed");

	AKSBotFactory_OnSpawnedBotDestroyed_Params params;
	params.DestroyedActor = DestroyedActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBotFactory.OnRoundStart
// (Final, Native, Protected, HasOutParms)
// Parameters:
// struct FRoundInitState*        RoundInitState                 (ConstParm, Parm, OutParm, ReferenceParm)

void AKSBotFactory::OnRoundStart(struct FRoundInitState* RoundInitState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBotFactory.OnRoundStart");

	AKSBotFactory_OnRoundStart_Params params;
	params.RoundInitState = RoundInitState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBotFactory.OnRoundSetup
// (Final, Native, Protected, HasOutParms)
// Parameters:
// struct FRoundInitState*        RoundInitState                 (ConstParm, Parm, OutParm, ReferenceParm)

void AKSBotFactory::OnRoundSetup(struct FRoundInitState* RoundInitState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBotFactory.OnRoundSetup");

	AKSBotFactory_OnRoundSetup_Params params;
	params.RoundInitState = RoundInitState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBotFactory.OnRelevancyOverlapEnd
// (Final, Native, Protected)
// Parameters:
// class UPrimitiveComponent**    OverlappedComp                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor**                 OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent**    OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int*                           OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)

void AKSBotFactory::OnRelevancyOverlapEnd(class UPrimitiveComponent** OverlappedComp, class AActor** OtherActor, class UPrimitiveComponent** OtherComp, int* OtherBodyIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBotFactory.OnRelevancyOverlapEnd");

	AKSBotFactory_OnRelevancyOverlapEnd_Params params;
	params.OverlappedComp = OverlappedComp;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBotFactory.OnRelevancyOverlapBegin
// (Final, Native, Protected, HasOutParms)
// Parameters:
// class UPrimitiveComponent**    OverlappedComp                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor**                 OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent**    OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int*                           OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult*             SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void AKSBotFactory::OnRelevancyOverlapBegin(class UPrimitiveComponent** OverlappedComp, class AActor** OtherActor, class UPrimitiveComponent** OtherComp, int* OtherBodyIndex, bool* bFromSweep, struct FHitResult* SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBotFactory.OnRelevancyOverlapBegin");

	AKSBotFactory_OnRelevancyOverlapBegin_Params params;
	params.OverlappedComp = OverlappedComp;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBotFactory.OnPhaseChanged
// (Final, Native, Protected)
// Parameters:
// struct FName*                  PreviousPhaseName              (Parm, ZeroConstructor, IsPlainOldData)
// struct FName*                  NewPhaseName                   (Parm, ZeroConstructor, IsPlainOldData)

void AKSBotFactory::OnPhaseChanged(struct FName* PreviousPhaseName, struct FName* NewPhaseName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBotFactory.OnPhaseChanged");

	AKSBotFactory_OnPhaseChanged_Params params;
	params.PreviousPhaseName = PreviousPhaseName;
	params.NewPhaseName = NewPhaseName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBotFactory.OnExtractionPhaseTimeout
// (Final, Native, Protected)
// Parameters:
// struct FName*                  PhaseName                      (Parm, ZeroConstructor, IsPlainOldData)

void AKSBotFactory::OnExtractionPhaseTimeout(struct FName* PhaseName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBotFactory.OnExtractionPhaseTimeout");

	AKSBotFactory_OnExtractionPhaseTimeout_Params params;
	params.PhaseName = PhaseName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBotFactory.OnAllPlayersFinishedPrePrep
// (Final, Native, Protected)

void AKSBotFactory::OnAllPlayersFinishedPrePrep()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBotFactory.OnAllPlayersFinishedPrePrep");

	AKSBotFactory_OnAllPlayersFinishedPrePrep_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBotFactory.OnAlarmPeriodStart
// (Final, Native, Protected)

void AKSBotFactory::OnAlarmPeriodStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBotFactory.OnAlarmPeriodStart");

	AKSBotFactory_OnAlarmPeriodStart_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBotFactory.GetTeamSize
// (Final, Native, Protected, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AKSBotFactory::GetTeamSize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBotFactory.GetTeamSize");

	AKSBotFactory_GetTeamSize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSBuild.YieldToRealTimerExpired
// (Final, Native, Private)

void AKSBuild::YieldToRealTimerExpired()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBuild.YieldToRealTimerExpired");

	AKSBuild_YieldToRealTimerExpired_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBuild.SelfDestructAfterDelay
// (Final, Native, Protected, BlueprintCallable)

void AKSBuild::SelfDestructAfterDelay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBuild.SelfDestructAfterDelay");

	AKSBuild_SelfDestructAfterDelay_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBuild.SelfDestruct
// (Native, Protected, BlueprintCallable)

void AKSBuild::SelfDestruct()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBuild.SelfDestruct");

	AKSBuild_SelfDestruct_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBuild.OnSelfDestructDelayStart
// (Event, Protected, BlueprintEvent)

void AKSBuild::OnSelfDestructDelayStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBuild.OnSelfDestructDelayStart");

	AKSBuild_OnSelfDestructDelayStart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBuild.OnSelfDestruct
// (Event, Protected, BlueprintEvent)

void AKSBuild::OnSelfDestruct()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBuild.OnSelfDestruct");

	AKSBuild_OnSelfDestruct_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBuild.OnRep_Health
// (Final, Native, Private)

void AKSBuild::OnRep_Health()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBuild.OnRep_Health");

	AKSBuild_OnRep_Health_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBuild.OnRadialDamageTaken
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// class UDamageType**            DamageType                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void AKSBuild::OnRadialDamageTaken(class UDamageType** DamageType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBuild.OnRadialDamageTaken");

	AKSBuild_OnRadialDamageTaken_Params params;
	params.DamageType = DamageType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBuild.OnPointDamageTaken
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// class UDamageType**            DamageType                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent**    PrimitiveComponent             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FName*                  HitBone                        (Parm, ZeroConstructor, IsPlainOldData)

void AKSBuild::OnPointDamageTaken(class UDamageType** DamageType, class UPrimitiveComponent** PrimitiveComponent, struct FName* HitBone)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBuild.OnPointDamageTaken");

	AKSBuild_OnPointDamageTaken_Params params;
	params.DamageType = DamageType;
	params.PrimitiveComponent = PrimitiveComponent;
	params.HitBone = HitBone;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBuild.OnHealthChanged
// (Event, Protected, BlueprintEvent)

void AKSBuild::OnHealthChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBuild.OnHealthChanged");

	AKSBuild_OnHealthChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBuild.OnBuildComponentDestroyed
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent**    PrimitiveComponent             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void AKSBuild::OnBuildComponentDestroyed(class UPrimitiveComponent** PrimitiveComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBuild.OnBuildComponentDestroyed");

	AKSBuild_OnBuildComponentDestroyed_Params params;
	params.PrimitiveComponent = PrimitiveComponent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBuild.GetRealActorTakeoverDelay
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSBuild::GetRealActorTakeoverDelay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBuild.GetRealActorTakeoverDelay");

	AKSBuild_GetRealActorTakeoverDelay_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSBuild.GetPlayerStateOwner
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AKSPlayerState*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AKSPlayerState* AKSBuild::GetPlayerStateOwner()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBuild.GetPlayerStateOwner");

	AKSBuild_GetPlayerStateOwner_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSBuild.GetOutlineableMeshes
// (Event, Protected, HasOutParms, BlueprintEvent, Const)
// Parameters:
// TArray<class UPrimitiveComponent*> OutMeshes                      (Parm, OutParm, ZeroConstructor)

void AKSBuild::GetOutlineableMeshes(TArray<class UPrimitiveComponent*>* OutMeshes)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBuild.GetOutlineableMeshes");

	AKSBuild_GetOutlineableMeshes_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutMeshes != nullptr)
		*OutMeshes = params.OutMeshes;
}


// Function Killstreak.KSBuild.GetCharacterOwner
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AKSCharacter*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AKSCharacter* AKSBuild::GetCharacterOwner()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBuild.GetCharacterOwner");

	AKSBuild_GetCharacterOwner_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSBuild.DestroyBuildComponent
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UPrimitiveComponent**    PrimitiveComponent             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void AKSBuild::DestroyBuildComponent(class UPrimitiveComponent** PrimitiveComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBuild.DestroyBuildComponent");

	AKSBuild_DestroyBuildComponent_Params params;
	params.PrimitiveComponent = PrimitiveComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBuild.ComponentTakeDamage
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent**    PrimitiveComponent             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// float*                         DamageAmount                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSBuild::ComponentTakeDamage(class UPrimitiveComponent** PrimitiveComponent, float* DamageAmount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBuild.ComponentTakeDamage");

	AKSBuild_ComponentTakeDamage_Params params;
	params.PrimitiveComponent = PrimitiveComponent;
	params.DamageAmount = DamageAmount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSBuild.BroadcastSelfDestructStart
// (Net, NetReliable, Native, Event, NetMulticast, Protected)

void AKSBuild::BroadcastSelfDestructStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBuild.BroadcastSelfDestructStart");

	AKSBuild_BroadcastSelfDestructStart_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBuild.BroadcastSelfDestruct
// (Net, NetReliable, Native, Event, NetMulticast, Protected)

void AKSBuild::BroadcastSelfDestruct()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBuild.BroadcastSelfDestruct");

	AKSBuild_BroadcastSelfDestruct_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBuild.BroadcastDestroyBuildComponent
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// class UPrimitiveComponent**    PrimitiveComponent             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void AKSBuild::BroadcastDestroyBuildComponent(class UPrimitiveComponent** PrimitiveComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBuild.BroadcastDestroyBuildComponent");

	AKSBuild_BroadcastDestroyBuildComponent_Params params;
	params.PrimitiveComponent = PrimitiveComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBuild_APS.OnRep_Active
// (Final, Native, Private)

void AKSBuild_APS::OnRep_Active()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBuild_APS.OnRep_Active");

	AKSBuild_APS_OnRep_Active_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBuild_APS.OnProjectileIntercepted
// (Event, Protected, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector*                InterceptedProjectileLocation  (Parm, ZeroConstructor, IsPlainOldData)

void AKSBuild_APS::OnProjectileIntercepted(struct FVector* InterceptedProjectileLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBuild_APS.OnProjectileIntercepted");

	AKSBuild_APS_OnProjectileIntercepted_Params params;
	params.InterceptedProjectileLocation = InterceptedProjectileLocation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBuild_APS.OnDeactivated
// (Event, Protected, BlueprintEvent)

void AKSBuild_APS::OnDeactivated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBuild_APS.OnDeactivated");

	AKSBuild_APS_OnDeactivated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBuild_APS.OnActorOverlapBegin
// (Final, Native, Private)
// Parameters:
// class AActor**                 OverlappedActor                (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)

void AKSBuild_APS::OnActorOverlapBegin(class AActor** OverlappedActor, class AActor** OtherActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBuild_APS.OnActorOverlapBegin");

	AKSBuild_APS_OnActorOverlapBegin_Params params;
	params.OverlappedActor = OverlappedActor;
	params.OtherActor = OtherActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBuild_APS.OnActivated
// (Event, Protected, BlueprintEvent)

void AKSBuild_APS::OnActivated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBuild_APS.OnActivated");

	AKSBuild_APS_OnActivated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBuild_APS.BroadcastProjectileIntercept
// (Net, Native, Event, NetMulticast, Protected, HasDefaults)
// Parameters:
// class AKSProjectile**          DestroyedProjectile            (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                BackupLocation                 (Parm, ZeroConstructor, IsPlainOldData)

void AKSBuild_APS::BroadcastProjectileIntercept(class AKSProjectile** DestroyedProjectile, struct FVector* BackupLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBuild_APS.BroadcastProjectileIntercept");

	AKSBuild_APS_BroadcastProjectileIntercept_Params params;
	params.DestroyedProjectile = DestroyedProjectile;
	params.BackupLocation = BackupLocation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCarriedInterface.StopActiveCarry
// (Native, Public, BlueprintCallable)

void UKSCarriedInterface::StopActiveCarry()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCarriedInterface.StopActiveCarry");

	UKSCarriedInterface_StopActiveCarry_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCarriedInterface.IsBeingCarriedRightNow
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSCarriedInterface::IsBeingCarriedRightNow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCarriedInterface.IsBeingCarriedRightNow");

	UKSCarriedInterface_IsBeingCarriedRightNow_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCarriedInterface.GetHauler
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AKSCharacter*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AKSCharacter* UKSCarriedInterface::GetHauler()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCarriedInterface.GetHauler");

	UKSCarriedInterface_GetHauler_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCarriedInterface.GetAsActor
// (Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AActor* UKSCarriedInterface::GetAsActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCarriedInterface.GetAsActor");

	UKSCarriedInterface_GetAsActor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCarriedInterface.CanBeCarriedByRightNow
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AKSCharacter**           InHauler                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSCarriedInterface::CanBeCarriedByRightNow(class AKSCharacter** InHauler)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCarriedInterface.CanBeCarriedByRightNow");

	UKSCarriedInterface_CanBeCarriedByRightNow_Params params;
	params.InHauler = InHauler;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCarriedInterface.CanBeCarriedBy
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AKSCharacter**           InHauler                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSCarriedInterface::CanBeCarriedBy(class AKSCharacter** InHauler)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCarriedInterface.CanBeCarriedBy");

	UKSCarriedInterface_CanBeCarriedBy_Params params;
	params.InHauler = InHauler;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCashDrop.EndOverlap
// (Native, Protected)
// Parameters:
// class UPrimitiveComponent**    OverlappedComp                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor**                 OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent**    OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int*                           OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)

void AKSCashDrop::EndOverlap(class UPrimitiveComponent** OverlappedComp, class AActor** OtherActor, class UPrimitiveComponent** OtherComp, int* OtherBodyIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCashDrop.EndOverlap");

	AKSCashDrop_EndOverlap_Params params;
	params.OverlappedComp = OverlappedComp;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCashDrop.BeginOverlap
// (Native, Protected, HasOutParms)
// Parameters:
// class UPrimitiveComponent**    OverlappedComp                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor**                 OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent**    OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int*                           OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult*             SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void AKSCashDrop::BeginOverlap(class UPrimitiveComponent** OverlappedComp, class AActor** OtherActor, class UPrimitiveComponent** OtherComp, int* OtherBodyIndex, bool* bFromSweep, struct FHitResult* SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCashDrop.BeginOverlap");

	AKSCashDrop_BeginOverlap_Params params;
	params.OverlappedComp = OverlappedComp;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCashExtractionPoint.StateTimerExpired
// (Final, Native, Protected)

void AKSCashExtractionPoint::StateTimerExpired()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCashExtractionPoint.StateTimerExpired");

	AKSCashExtractionPoint_StateTimerExpired_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCashExtractionPoint.ShouldShowLabel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSCashExtractionPoint::ShouldShowLabel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCashExtractionPoint.ShouldShowLabel");

	AKSCashExtractionPoint_ShouldShowLabel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCashExtractionPoint.OnRep_ContainedCash
// (Final, Native, Protected)

void AKSCashExtractionPoint::OnRep_ContainedCash()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCashExtractionPoint.OnRep_ContainedCash");

	AKSCashExtractionPoint_OnRep_ContainedCash_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCashExtractionPoint.HideCashPoint
// (Final, Native, Public, BlueprintCallable)

void AKSCashExtractionPoint::HideCashPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCashExtractionPoint.HideCashPoint");

	AKSCashExtractionPoint_HideCashPoint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCashExtractionPoint.GetRemainingTimeInState
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          RemainingTime                  (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// float                          TotalDuration                  (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void AKSCashExtractionPoint::GetRemainingTimeInState(float* RemainingTime, float* TotalDuration)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCashExtractionPoint.GetRemainingTimeInState");

	AKSCashExtractionPoint_GetRemainingTimeInState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (RemainingTime != nullptr)
		*RemainingTime = params.RemainingTime;
	if (TotalDuration != nullptr)
		*TotalDuration = params.TotalDuration;
}


// Function Killstreak.KSCashExtractionPoint.ActivateCashPoint
// (Final, Native, Public, BlueprintCallable)

void AKSCashExtractionPoint::ActivateCashPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCashExtractionPoint.ActivateCashPoint");

	AKSCashExtractionPoint_ActivateCashPoint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.UpdateDebugHealthVisibility
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AKSCharacterBase::UpdateDebugHealthVisibility()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.UpdateDebugHealthVisibility");

	AKSCharacterBase_UpdateDebugHealthVisibility_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.UnSubmerge
// (Native, Public, BlueprintCallable)
// Parameters:
// bool*                          bClientSimulation              (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacterBase::UnSubmerge(bool* bClientSimulation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.UnSubmerge");

	AKSCharacterBase_UnSubmerge_Params params;
	params.bClientSimulation = bClientSimulation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.Submerge
// (Native, Public, BlueprintCallable)
// Parameters:
// bool*                          bClientSimulation              (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacterBase::Submerge(bool* bClientSimulation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.Submerge");

	AKSCharacterBase_Submerge_Params params;
	params.bClientSimulation = bClientSimulation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.StopSprint
// (Native, Public, BlueprintCallable)
// Parameters:
// bool*                          bInterrupted                   (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacterBase::StopSprint(bool* bInterrupted)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.StopSprint");

	AKSCharacterBase_StopSprint_Params params;
	params.bInterrupted = bInterrupted;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.StopRegenerationTimers
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void AKSCharacterBase::StopRegenerationTimers()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.StopRegenerationTimers");

	AKSCharacterBase_StopRegenerationTimers_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.StartSprint
// (Native, Public, BlueprintCallable)

void AKSCharacterBase::StartSprint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.StartSprint");

	AKSCharacterBase_StartSprint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.StartCameraShake
// (Native, Public, BlueprintCallable)
// Parameters:
// class UClass**                 ShakeClass                     (Parm, ZeroConstructor, IsPlainOldData)
// class UCameraShake*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UCameraShake* AKSCharacterBase::StartCameraShake(class UClass** ShakeClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.StartCameraShake");

	AKSCharacterBase_StartCameraShake_Params params;
	params.ShakeClass = ShakeClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterBase.ShowDebugLocation
// (Event, Public, BlueprintEvent)
// Parameters:
// bool*                          bVisible                       (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacterBase::ShowDebugLocation(bool* bVisible)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.ShowDebugLocation");

	AKSCharacterBase_ShowDebugLocation_Params params;
	params.bVisible = bVisible;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.SetRevealed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          Reveal                         (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacterBase::SetRevealed(bool* Reveal)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.SetRevealed");

	AKSCharacterBase_SetRevealed_Params params;
	params.Reveal = Reveal;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.SetHealth
// (Native, Public, BlueprintCallable)
// Parameters:
// float*                         NewHealth                      (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacterBase::SetHealth(float* NewHealth)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.SetHealth");

	AKSCharacterBase_SetHealth_Params params;
	params.NewHealth = NewHealth;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.RevealToWholeTeam
// (Native, Public, BlueprintCallable)
// Parameters:
// float*                         Duration                       (Parm, ZeroConstructor, IsPlainOldData)
// class AController**            Revealer                       (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Delay                          (Parm, ZeroConstructor, IsPlainOldData)
// EPlayerSilhouetteType*         Type                           (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          Fill                           (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          Mark                           (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacterBase::RevealToWholeTeam(float* Duration, class AController** Revealer, float* Delay, EPlayerSilhouetteType* Type, bool* Fill, bool* Mark)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.RevealToWholeTeam");

	AKSCharacterBase_RevealToWholeTeam_Params params;
	params.Duration = Duration;
	params.Revealer = Revealer;
	params.Delay = Delay;
	params.Type = Type;
	params.Fill = Fill;
	params.Mark = Mark;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.RevealForDuration
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float*                         RevealTime                     (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacterBase::RevealForDuration(float* RevealTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.RevealForDuration");

	AKSCharacterBase_RevealForDuration_Params params;
	params.RevealTime = RevealTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.Reveal
// (Native, Public, BlueprintCallable)
// Parameters:
// float*                         Duration                       (Parm, ZeroConstructor, IsPlainOldData)
// class AController**            Revealer                       (Parm, ZeroConstructor, IsPlainOldData)
// EPlayerSilhouetteType*         Type                           (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          Fill                           (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          Mark                           (Parm, ZeroConstructor, IsPlainOldData)
// struct FRevealInfo             ReturnValue                    (Parm, OutParm, ReturnParm)

struct FRevealInfo AKSCharacterBase::Reveal(float* Duration, class AController** Revealer, EPlayerSilhouetteType* Type, bool* Fill, bool* Mark)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.Reveal");

	AKSCharacterBase_Reveal_Params params;
	params.Duration = Duration;
	params.Revealer = Revealer;
	params.Type = Type;
	params.Fill = Fill;
	params.Mark = Mark;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterBase.ResetHealthRegeneration
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void AKSCharacterBase::ResetHealthRegeneration()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.ResetHealthRegeneration");

	AKSCharacterBase_ResetHealthRegeneration_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.ResetHealthRegenDelay
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void AKSCharacterBase::ResetHealthRegenDelay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.ResetHealthRegenDelay");

	AKSCharacterBase_ResetHealthRegenDelay_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.ResetFreeFallState
// (Final, Native, Public, BlueprintCallable)

void AKSCharacterBase::ResetFreeFallState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.ResetFreeFallState");

	AKSCharacterBase_ResetFreeFallState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.RemoveCameraShake
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UCameraShake**           CameraShake                    (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacterBase::RemoveCameraShake(class UCameraShake** CameraShake)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.RemoveCameraShake");

	AKSCharacterBase_RemoveCameraShake_Params params;
	params.CameraShake = CameraShake;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.OverhealDecayTick
// (Final, Native, Protected)

void AKSCharacterBase::OverhealDecayTick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.OverhealDecayTick");

	AKSCharacterBase_OverhealDecayTick_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.Overheal
// (Native, Public, BlueprintCallable)
// Parameters:
// float*                         OverhealValue                  (Parm, ZeroConstructor, IsPlainOldData)
// class AController**            HealInstigator                 (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 HealCauser                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSCharacterBase::Overheal(float* OverhealValue, class AController** HealInstigator, class AActor** HealCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.Overheal");

	AKSCharacterBase_Overheal_Params params;
	params.OverhealValue = OverhealValue;
	params.HealInstigator = HealInstigator;
	params.HealCauser = HealCauser;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterBase.OnTeamUpdated
// (Native, Event, Public, BlueprintEvent)

void AKSCharacterBase::OnTeamUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.OnTeamUpdated");

	AKSCharacterBase_OnTeamUpdated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.OnStopDefaultAim
// (Native, Event, Public, BlueprintEvent)

void AKSCharacterBase::OnStopDefaultAim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.OnStopDefaultAim");

	AKSCharacterBase_OnStopDefaultAim_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.OnStopAimOverShoulder
// (Native, Event, Public, BlueprintEvent)

void AKSCharacterBase::OnStopAimOverShoulder()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.OnStopAimOverShoulder");

	AKSCharacterBase_OnStopAimOverShoulder_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.OnStopAimDownSights
// (Native, Event, Public, BlueprintEvent)

void AKSCharacterBase::OnStopAimDownSights()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.OnStopAimDownSights");

	AKSCharacterBase_OnStopAimDownSights_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.OnStopAimAlternate
// (Native, Event, Public, BlueprintEvent)

void AKSCharacterBase::OnStopAimAlternate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.OnStopAimAlternate");

	AKSCharacterBase_OnStopAimAlternate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.OnStartDefaultAim
// (Native, Event, Public, BlueprintEvent)

void AKSCharacterBase::OnStartDefaultAim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.OnStartDefaultAim");

	AKSCharacterBase_OnStartDefaultAim_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.OnStartAimOverShoulder
// (Native, Event, Public, BlueprintEvent)

void AKSCharacterBase::OnStartAimOverShoulder()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.OnStartAimOverShoulder");

	AKSCharacterBase_OnStartAimOverShoulder_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.OnStartAimDownSights
// (Native, Event, Public, BlueprintEvent)

void AKSCharacterBase::OnStartAimDownSights()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.OnStartAimDownSights");

	AKSCharacterBase_OnStartAimDownSights_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.OnStartAimAlternate
// (Native, Event, Public, BlueprintEvent)

void AKSCharacterBase::OnStartAimAlternate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.OnStartAimAlternate");

	AKSCharacterBase_OnStartAimAlternate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.OnRep_Sprint
// (Native, Protected)

void AKSCharacterBase::OnRep_Sprint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.OnRep_Sprint");

	AKSCharacterBase_OnRep_Sprint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.OnRep_Silhouette
// (Final, Native, Private)

void AKSCharacterBase::OnRep_Silhouette()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.OnRep_Silhouette");

	AKSCharacterBase_OnRep_Silhouette_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.OnRep_ReplicatedStun
// (Final, Native, Public)

void AKSCharacterBase::OnRep_ReplicatedStun()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.OnRep_ReplicatedStun");

	AKSCharacterBase_OnRep_ReplicatedStun_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.OnRep_ReplicatedAimState
// (Native, Protected)

void AKSCharacterBase::OnRep_ReplicatedAimState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.OnRep_ReplicatedAimState");

	AKSCharacterBase_OnRep_ReplicatedAimState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.OnRep_ReplicatedAbilityMovement
// (Native, Protected)

void AKSCharacterBase::OnRep_ReplicatedAbilityMovement()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.OnRep_ReplicatedAbilityMovement");

	AKSCharacterBase_OnRep_ReplicatedAbilityMovement_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.OnRep_PowerSlide
// (Final, Native, Public)

void AKSCharacterBase::OnRep_PowerSlide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.OnRep_PowerSlide");

	AKSCharacterBase_OnRep_PowerSlide_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.OnRep_MantleInfo
// (Native, Public)

void AKSCharacterBase::OnRep_MantleInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.OnRep_MantleInfo");

	AKSCharacterBase_OnRep_MantleInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.OnRep_LungeInfo
// (Final, Native, Public)

void AKSCharacterBase::OnRep_LungeInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.OnRep_LungeInfo");

	AKSCharacterBase_OnRep_LungeInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.OnRep_IsSubmerged
// (Native, Protected)

void AKSCharacterBase::OnRep_IsSubmerged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.OnRep_IsSubmerged");

	AKSCharacterBase_OnRep_IsSubmerged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.OnRep_DeathState
// (Native, Protected)

void AKSCharacterBase::OnRep_DeathState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.OnRep_DeathState");

	AKSCharacterBase_OnRep_DeathState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.OnRep_CurrentOverheal
// (Final, Native, Protected)

void AKSCharacterBase::OnRep_CurrentOverheal()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.OnRep_CurrentOverheal");

	AKSCharacterBase_OnRep_CurrentOverheal_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.OnRep_CurrentLungCapacity
// (Native, Protected)

void AKSCharacterBase::OnRep_CurrentLungCapacity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.OnRep_CurrentLungCapacity");

	AKSCharacterBase_OnRep_CurrentLungCapacity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.OnRep_BackupPlayerState
// (Native, Protected)

void AKSCharacterBase::OnRep_BackupPlayerState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.OnRep_BackupPlayerState");

	AKSCharacterBase_OnRep_BackupPlayerState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.OnLeaveTeam
// (BlueprintAuthorityOnly, Native, Event, Public, BlueprintEvent)
// Parameters:
// class AKSTeamState**           OldTeam                        (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacterBase::OnLeaveTeam(class AKSTeamState** OldTeam)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.OnLeaveTeam");

	AKSCharacterBase_OnLeaveTeam_Params params;
	params.OldTeam = OldTeam;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.OnJoinTeam
// (BlueprintAuthorityOnly, Native, Event, Public, BlueprintEvent)
// Parameters:
// class AKSTeamState**           NewTeam                        (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacterBase::OnJoinTeam(class AKSTeamState** NewTeam)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.OnJoinTeam");

	AKSCharacterBase_OnJoinTeam_Params params;
	params.NewTeam = NewTeam;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.OnEndPowerSlide
// (Event, Public, BlueprintEvent)
// Parameters:
// EKSPowerSlideEndReason*        EndReason                      (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacterBase::OnEndPowerSlide(EKSPowerSlideEndReason* EndReason)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.OnEndPowerSlide");

	AKSCharacterBase_OnEndPowerSlide_Params params;
	params.EndReason = EndReason;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.OnBeginPowerSlide
// (Event, Public, BlueprintEvent)

void AKSCharacterBase::OnBeginPowerSlide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.OnBeginPowerSlide");

	AKSCharacterBase_OnBeginPowerSlide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.LockoutMovement
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float*                         Time                           (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacterBase::LockoutMovement(float* Time)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.LockoutMovement");

	AKSCharacterBase_LockoutMovement_Params params;
	params.Time = Time;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.IsUnderwater
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSCharacterBase::IsUnderwater()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.IsUnderwater");

	AKSCharacterBase_IsUnderwater_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterBase.IsThermalDetectable
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSCharacterBase::IsThermalDetectable()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.IsThermalDetectable");

	AKSCharacterBase_IsThermalDetectable_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterBase.IsStunned
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSCharacterBase::IsStunned()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.IsStunned");

	AKSCharacterBase_IsStunned_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterBase.IsSprinting
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSCharacterBase::IsSprinting()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.IsSprinting");

	AKSCharacterBase_IsSprinting_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterBase.IsRevealPermanent
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSCharacterBase::IsRevealPermanent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.IsRevealPermanent");

	AKSCharacterBase_IsRevealPermanent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterBase.IsRevealedToLocalPlayer
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSCharacterBase::IsRevealedToLocalPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.IsRevealedToLocalPlayer");

	AKSCharacterBase_IsRevealedToLocalPlayer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterBase.IsRevealed
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSCharacterBase::IsRevealed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.IsRevealed");

	AKSCharacterBase_IsRevealed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterBase.IsLunging
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSCharacterBase::IsLunging()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.IsLunging");

	AKSCharacterBase_IsLunging_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterBase.IsLocallyViewed
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSCharacterBase::IsLocallyViewed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.IsLocallyViewed");

	AKSCharacterBase_IsLocallyViewed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterBase.IsLaunched
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSCharacterBase::IsLaunched()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.IsLaunched");

	AKSCharacterBase_IsLaunched_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterBase.IsInPowerSlide
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSCharacterBase::IsInPowerSlide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.IsInPowerSlide");

	AKSCharacterBase_IsInPowerSlide_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterBase.IsInHardLandLockout
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSCharacterBase::IsInHardLandLockout()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.IsInHardLandLockout");

	AKSCharacterBase_IsInHardLandLockout_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterBase.IsInAimTransition
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSCharacterBase::IsInAimTransition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.IsInAimTransition");

	AKSCharacterBase_IsInAimTransition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterBase.IsDeadOrDestroyed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSCharacterBase::IsDeadOrDestroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.IsDeadOrDestroyed");

	AKSCharacterBase_IsDeadOrDestroyed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterBase.IsBot
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSCharacterBase::IsBot()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.IsBot");

	AKSCharacterBase_IsBot_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterBase.IsAimingOverShoulder
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSCharacterBase::IsAimingOverShoulder()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.IsAimingOverShoulder");

	AKSCharacterBase_IsAimingOverShoulder_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterBase.IsAimingDownSights
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSCharacterBase::IsAimingDownSights()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.IsAimingDownSights");

	AKSCharacterBase_IsAimingDownSights_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterBase.IsAimingAlternate
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSCharacterBase::IsAimingAlternate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.IsAimingAlternate");

	AKSCharacterBase_IsAimingAlternate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterBase.IsAiming
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSCharacterBase::IsAiming()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.IsAiming");

	AKSCharacterBase_IsAiming_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterBase.IsAbilityMoving
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSCharacterBase::IsAbilityMoving()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.IsAbilityMoving");

	AKSCharacterBase_IsAbilityMoving_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterBase.HealthRegenerationTick
// (Final, Native, Protected)

void AKSCharacterBase::HealthRegenerationTick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.HealthRegenerationTick");

	AKSCharacterBase_HealthRegenerationTick_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.HealthRegenDelayTimerTick
// (Final, Native, Protected)
// Parameters:
// float*                         Seconds                        (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacterBase::HealthRegenDelayTimerTick(float* Seconds)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.HealthRegenDelayTimerTick");

	AKSCharacterBase_HealthRegenDelayTimerTick_Params params;
	params.Seconds = Seconds;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.HealthRegenDelayTimerComplete
// (Final, Native, Protected)

void AKSCharacterBase::HealthRegenDelayTimerComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.HealthRegenDelayTimerComplete");

	AKSCharacterBase_HealthRegenDelayTimerComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.HealthRegenDelayTimerActive
// (Final, Native, Protected)
// Parameters:
// bool*                          bActive                        (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacterBase::HealthRegenDelayTimerActive(bool* bActive)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.HealthRegenDelayTimerActive");

	AKSCharacterBase_HealthRegenDelayTimerActive_Params params;
	params.bActive = bActive;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.Heal
// (Native, Public, BlueprintCallable)
// Parameters:
// float*                         HealAmount                     (Parm, ZeroConstructor, IsPlainOldData)
// class AController**            HealInstigator                 (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 HealCauser                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSCharacterBase::Heal(float* HealAmount, class AController** HealInstigator, class AActor** HealCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.Heal");

	AKSCharacterBase_Heal_Params params;
	params.HealAmount = HealAmount;
	params.HealInstigator = HealInstigator;
	params.HealCauser = HealCauser;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterBase.GetZiplineAdjustHeight
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSCharacterBase::GetZiplineAdjustHeight()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.GetZiplineAdjustHeight");

	AKSCharacterBase_GetZiplineAdjustHeight_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterBase.GetStartSpot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AActor* AKSCharacterBase::GetStartSpot()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.GetStartSpot");

	AKSCharacterBase_GetStartSpot_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterBase.GetSilhouetteComponents
// (BlueprintCosmetic, Native, Event, Protected, HasOutParms, BlueprintEvent)
// Parameters:
// TArray<class UPrimitiveComponent*> SilhouetteComponents           (Parm, OutParm, ZeroConstructor)

void AKSCharacterBase::GetSilhouetteComponents(TArray<class UPrimitiveComponent*>* SilhouetteComponents)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.GetSilhouetteComponents");

	AKSCharacterBase_GetSilhouetteComponents_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (SilhouetteComponents != nullptr)
		*SilhouetteComponents = params.SilhouetteComponents;
}


// Function Killstreak.KSCharacterBase.GetReplicatedAimState
// (Final, Native, Protected, Const)
// Parameters:
// EKSCharacterAimMode            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EKSCharacterAimMode AKSCharacterBase::GetReplicatedAimState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.GetReplicatedAimState");

	AKSCharacterBase_GetReplicatedAimState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterBase.GetPowerSlideProgress
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSCharacterBase::GetPowerSlideProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.GetPowerSlideProgress");

	AKSCharacterBase_GetPowerSlideProgress_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterBase.GetPowerSlideAngle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSCharacterBase::GetPowerSlideAngle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.GetPowerSlideAngle");

	AKSCharacterBase_GetPowerSlideAngle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterBase.GetMeleeThrowLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector AKSCharacterBase::GetMeleeThrowLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.GetMeleeThrowLocation");

	AKSCharacterBase_GetMeleeThrowLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterBase.GetMeleeThrowComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USceneComponent*         ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class USceneComponent* AKSCharacterBase::GetMeleeThrowComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.GetMeleeThrowComponent");

	AKSCharacterBase_GetMeleeThrowComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterBase.GetMaximumLungCapacity
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSCharacterBase::GetMaximumLungCapacity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.GetMaximumLungCapacity");

	AKSCharacterBase_GetMaximumLungCapacity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterBase.GetMaxHealth
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSCharacterBase::GetMaxHealth()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.GetMaxHealth");

	AKSCharacterBase_GetMaxHealth_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterBase.GetLungRecoveryTime
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSCharacterBase::GetLungRecoveryTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.GetLungRecoveryTime");

	AKSCharacterBase_GetLungRecoveryTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterBase.GetLastReplicatedAimState
// (Final, Native, Protected, Const)
// Parameters:
// EKSCharacterAimMode            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EKSCharacterAimMode AKSCharacterBase::GetLastReplicatedAimState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.GetLastReplicatedAimState");

	AKSCharacterBase_GetLastReplicatedAimState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterBase.GetKSPlayerState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AKSPlayerState*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AKSPlayerState* AKSCharacterBase::GetKSPlayerState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.GetKSPlayerState");

	AKSCharacterBase_GetKSPlayerState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterBase.GetKSMovementComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UKSCharacterMovementComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UKSCharacterMovementComponent* AKSCharacterBase::GetKSMovementComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.GetKSMovementComponent");

	AKSCharacterBase_GetKSMovementComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterBase.GetKSCharacterAnimInst
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UKSCharacterAnimInst*    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UKSCharacterAnimInst* AKSCharacterBase::GetKSCharacterAnimInst()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.GetKSCharacterAnimInst");

	AKSCharacterBase_GetKSCharacterAnimInst_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterBase.GetKSBestPlayerState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AKSPlayerState*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AKSPlayerState* AKSCharacterBase::GetKSBestPlayerState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.GetKSBestPlayerState");

	AKSCharacterBase_GetKSBestPlayerState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterBase.GetKSAnimInstance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UKSAnimInstance*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UKSAnimInstance* AKSCharacterBase::GetKSAnimInstance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.GetKSAnimInstance");

	AKSCharacterBase_GetKSAnimInstance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterBase.GetInteractionState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FName                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FName AKSCharacterBase::GetInteractionState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.GetInteractionState");

	AKSCharacterBase_GetInteractionState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterBase.GetImmediateDeathRagdoll
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSCharacterBase::GetImmediateDeathRagdoll()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.GetImmediateDeathRagdoll");

	AKSCharacterBase_GetImmediateDeathRagdoll_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterBase.GetHealthRegenDelayTime
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSCharacterBase::GetHealthRegenDelayTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.GetHealthRegenDelayTime");

	AKSCharacterBase_GetHealthRegenDelayTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterBase.GetHealthPct
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSCharacterBase::GetHealthPct()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.GetHealthPct");

	AKSCharacterBase_GetHealthPct_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterBase.GetHealth
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSCharacterBase::GetHealth()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.GetHealth");

	AKSCharacterBase_GetHealth_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterBase.GetGrenadeThrowLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector AKSCharacterBase::GetGrenadeThrowLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.GetGrenadeThrowLocation");

	AKSCharacterBase_GetGrenadeThrowLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterBase.GetGrenadeThrowComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USceneComponent*         ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class USceneComponent* AKSCharacterBase::GetGrenadeThrowComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.GetGrenadeThrowComponent");

	AKSCharacterBase_GetGrenadeThrowComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterBase.GetDeathState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EKSDeathState                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EKSDeathState AKSCharacterBase::GetDeathState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.GetDeathState");

	AKSCharacterBase_GetDeathState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterBase.GetCurrentOverheal
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSCharacterBase::GetCurrentOverheal()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.GetCurrentOverheal");

	AKSCharacterBase_GetCurrentOverheal_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterBase.GetCurrentLungCapacity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSCharacterBase::GetCurrentLungCapacity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.GetCurrentLungCapacity");

	AKSCharacterBase_GetCurrentLungCapacity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterBase.GetCurrentDesiredMovementDirection
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector AKSCharacterBase::GetCurrentDesiredMovementDirection()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.GetCurrentDesiredMovementDirection");

	AKSCharacterBase_GetCurrentDesiredMovementDirection_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterBase.GetCurrentAimState
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EKSCharacterAimMode            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EKSCharacterAimMode AKSCharacterBase::GetCurrentAimState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.GetCurrentAimState");

	AKSCharacterBase_GetCurrentAimState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterBase.GetCurrentAccelDirection
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector AKSCharacterBase::GetCurrentAccelDirection()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.GetCurrentAccelDirection");

	AKSCharacterBase_GetCurrentAccelDirection_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterBase.GetBestPlayerState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APlayerState*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APlayerState* AKSCharacterBase::GetBestPlayerState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.GetBestPlayerState");

	AKSCharacterBase_GetBestPlayerState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterBase.GetBackupPlayerState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APlayerState*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APlayerState* AKSCharacterBase::GetBackupPlayerState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.GetBackupPlayerState");

	AKSCharacterBase_GetBackupPlayerState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterBase.ForceSilhouette
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          bInForceSilhouette             (Parm, ZeroConstructor, IsPlainOldData)
// EPlayerSilhouetteType*         InSilhouetteType               (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          InFillSilhouette               (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          InMarkSilhouette               (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacterBase::ForceSilhouette(bool* bInForceSilhouette, EPlayerSilhouetteType* InSilhouetteType, bool* InFillSilhouette, bool* InMarkSilhouette)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.ForceSilhouette");

	AKSCharacterBase_ForceSilhouette_Params params;
	params.bInForceSilhouette = bInForceSilhouette;
	params.InSilhouetteType = InSilhouetteType;
	params.InFillSilhouette = InFillSilhouette;
	params.InMarkSilhouette = InMarkSilhouette;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.EndAbilityMovement
// (Native, Public)

void AKSCharacterBase::EndAbilityMovement()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.EndAbilityMovement");

	AKSCharacterBase_EndAbilityMovement_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.DoStun
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float*                         StunDuration                   (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          FreezeInPlace                  (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacterBase::DoStun(float* StunDuration, bool* FreezeInPlace)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.DoStun");

	AKSCharacterBase_DoStun_Params params;
	params.StunDuration = StunDuration;
	params.FreezeInPlace = FreezeInPlace;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.DoHardLandAvoid
// (Native, Public, BlueprintCallable)

void AKSCharacterBase::DoHardLandAvoid()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.DoHardLandAvoid");

	AKSCharacterBase_DoHardLandAvoid_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.DoHardLand
// (Native, Public, BlueprintCallable)
// Parameters:
// float*                         LockoutDuration                (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacterBase::DoHardLand(float* LockoutDuration)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.DoHardLand");

	AKSCharacterBase_DoHardLand_Params params;
	params.LockoutDuration = LockoutDuration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.CanViewDebugHealth
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSCharacterBase::CanViewDebugHealth()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.CanViewDebugHealth");

	AKSCharacterBase_CanViewDebugHealth_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterBase.BroadcastInstantInteraction
// (Net, Native, Event, NetMulticast, Public)
// Parameters:
// struct FName*                  InInteractionState             (Parm, ZeroConstructor, IsPlainOldData)
// float*                         InInteractionHeight            (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacterBase::BroadcastInstantInteraction(struct FName* InInteractionState, float* InInteractionHeight)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.BroadcastInstantInteraction");

	AKSCharacterBase_BroadcastInstantInteraction_Params params;
	params.InInteractionState = InInteractionState;
	params.InInteractionHeight = InInteractionHeight;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.BroadcastHardLandAvoid
// (Net, Native, Event, NetMulticast, Public)

void AKSCharacterBase::BroadcastHardLandAvoid()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.BroadcastHardLandAvoid");

	AKSCharacterBase_BroadcastHardLandAvoid_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.BlueprintOnStopSwimming
// (Event, Protected, BlueprintEvent)

void AKSCharacterBase::BlueprintOnStopSwimming()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.BlueprintOnStopSwimming");

	AKSCharacterBase_BlueprintOnStopSwimming_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.BlueprintOnStopSubmerged
// (Event, Protected, BlueprintEvent)

void AKSCharacterBase::BlueprintOnStopSubmerged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.BlueprintOnStopSubmerged");

	AKSCharacterBase_BlueprintOnStopSubmerged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.BlueprintOnStartSwimming
// (Event, Protected, BlueprintEvent)

void AKSCharacterBase::BlueprintOnStartSwimming()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.BlueprintOnStartSwimming");

	AKSCharacterBase_BlueprintOnStartSwimming_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.BlueprintOnStartSubmerged
// (Event, Protected, BlueprintEvent)

void AKSCharacterBase::BlueprintOnStartSubmerged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.BlueprintOnStartSubmerged");

	AKSCharacterBase_BlueprintOnStartSubmerged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.BeginDodgeRoll
// (Native, Public)

void AKSCharacterBase::BeginDodgeRoll()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.BeginDodgeRoll");

	AKSCharacterBase_BeginDodgeRoll_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.BeginAbilityMovement
// (Native, Public)

void AKSCharacterBase::BeginAbilityMovement()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.BeginAbilityMovement");

	AKSCharacterBase_BeginAbilityMovement_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.AllowSprintingRightNow
// (Native, Public, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSCharacterBase::AllowSprintingRightNow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.AllowSprintingRightNow");

	AKSCharacterBase_AllowSprintingRightNow_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterBase.AllowPowerSlideRightNow
// (Native, Public, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSCharacterBase::AllowPowerSlideRightNow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.AllowPowerSlideRightNow");

	AKSCharacterBase_AllowPowerSlideRightNow_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.ViewedPawnTakeDamage
// (BlueprintCosmetic, Native, Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// float*                         DamageAmount                   (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 DamageTypeClass                (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                DamageOrigin                   (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::ViewedPawnTakeDamage(float* DamageAmount, class UClass** DamageTypeClass, class AActor** DamageCauser, struct FVector* DamageOrigin)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ViewedPawnTakeDamage");

	AKSCharacter_ViewedPawnTakeDamage_Params params;
	params.DamageAmount = DamageAmount;
	params.DamageTypeClass = DamageTypeClass;
	params.DamageCauser = DamageCauser;
	params.DamageOrigin = DamageOrigin;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ViewedPawnNoLongerRevealed
// (BlueprintCosmetic, Native, Event, Protected, BlueprintEvent)

void AKSCharacter::ViewedPawnNoLongerRevealed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ViewedPawnNoLongerRevealed");

	AKSCharacter_ViewedPawnNoLongerRevealed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ViewedPawnInstigatedHeadshot
// (BlueprintCosmetic, Native, Event, Public, BlueprintEvent)
// Parameters:
// float*                         DamageAmount                   (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 DamageTypeClass                (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 Target                         (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::ViewedPawnInstigatedHeadshot(float* DamageAmount, class UClass** DamageTypeClass, class AActor** Target, class AActor** DamageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ViewedPawnInstigatedHeadshot");

	AKSCharacter_ViewedPawnInstigatedHeadshot_Params params;
	params.DamageAmount = DamageAmount;
	params.DamageTypeClass = DamageTypeClass;
	params.Target = Target;
	params.DamageCauser = DamageCauser;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ViewedPawnInstigatedDamage
// (BlueprintCosmetic, Native, Event, Public, BlueprintEvent)
// Parameters:
// float*                         DamageAmount                   (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 DamageTypeClass                (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 Target                         (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::ViewedPawnInstigatedDamage(float* DamageAmount, class UClass** DamageTypeClass, class AActor** Target, class AActor** DamageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ViewedPawnInstigatedDamage");

	AKSCharacter_ViewedPawnInstigatedDamage_Params params;
	params.DamageAmount = DamageAmount;
	params.DamageTypeClass = DamageTypeClass;
	params.Target = Target;
	params.DamageCauser = DamageCauser;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ViewedPawnHasBeenRevealed
// (BlueprintCosmetic, Native, Event, Protected, BlueprintEvent)
// Parameters:
// bool*                          Permanent                      (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::ViewedPawnHasBeenRevealed(bool* Permanent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ViewedPawnHasBeenRevealed");

	AKSCharacter_ViewedPawnHasBeenRevealed_Params params;
	params.Permanent = Permanent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.VehicleStateChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// EKSVehicleState*               CurrentVehicleState            (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::VehicleStateChanged(EKSVehicleState* CurrentVehicleState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.VehicleStateChanged");

	AKSCharacter_VehicleStateChanged_Params params;
	params.CurrentVehicleState = CurrentVehicleState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.UpdateNavModification
// (Final, Native, Protected)

void AKSCharacter::UpdateNavModification()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.UpdateNavModification");

	AKSCharacter_UpdateNavModification_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.UpdateMantleHands
// (Native, Public, BlueprintCallable)
// Parameters:
// EKSPlayerHand*                 Hand                           (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bEnable                        (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::UpdateMantleHands(EKSPlayerHand* Hand, bool* bEnable)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.UpdateMantleHands");

	AKSCharacter_UpdateMantleHands_Params params;
	params.Hand = Hand;
	params.bEnable = bEnable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.UpdateHoveredInteractable
// (Final, Native, Protected)

void AKSCharacter::UpdateHoveredInteractable()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.UpdateHoveredInteractable");

	AKSCharacter_UpdateHoveredInteractable_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.UpdateAmmo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EAmmoType*                     AmmoType                       (Parm, ZeroConstructor, IsPlainOldData)
// int*                           AmmoDelta                      (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::UpdateAmmo(EAmmoType* AmmoType, int* AmmoDelta)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.UpdateAmmo");

	AKSCharacter_UpdateAmmo_Params params;
	params.AmmoType = AmmoType;
	params.AmmoDelta = AmmoDelta;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.UpdateAimStatus
// (Final, Native, Public, BlueprintCallable)

void AKSCharacter::UpdateAimStatus()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.UpdateAimStatus");

	AKSCharacter_UpdateAimStatus_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.UnregisterFootstepOverride
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TScriptInterface<class UKSFootstepOverrideInterface>* ToRemove                       (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::UnregisterFootstepOverride(TScriptInterface<class UKSFootstepOverrideInterface>* ToRemove)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.UnregisterFootstepOverride");

	AKSCharacter_UnregisterFootstepOverride_Params params;
	params.ToRemove = ToRemove;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.UnlockShoulderSwap
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          ForceFullUnlock                (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::UnlockShoulderSwap(bool* ForceFullUnlock)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.UnlockShoulderSwap");

	AKSCharacter_UnlockShoulderSwap_Params params;
	params.ForceFullUnlock = ForceFullUnlock;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.UnHideADSMaterials
// (Final, Native, Public, BlueprintCallable)

void AKSCharacter::UnHideADSMaterials()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.UnHideADSMaterials");

	AKSCharacter_UnHideADSMaterials_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.TryToStopRagdoll
// (Final, Native, Protected)

void AKSCharacter::TryToStopRagdoll()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.TryToStopRagdoll");

	AKSCharacter_TryToStopRagdoll_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.TryToStopAiming
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          IsInterrupt                    (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::TryToStopAiming(bool* IsInterrupt)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.TryToStopAiming");

	AKSCharacter_TryToStopAiming_Params params;
	params.IsInterrupt = IsInterrupt;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.TryToAimOverShoulder
// (Final, Native, Public)
// Parameters:
// bool*                          bSkipUpdate                    (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::TryToAimOverShoulder(bool* bSkipUpdate)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.TryToAimOverShoulder");

	AKSCharacter_TryToAimOverShoulder_Params params;
	params.bSkipUpdate = bSkipUpdate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.TryToAimDownSights
// (Final, Native, Public)
// Parameters:
// bool*                          bSkipUpdate                    (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::TryToAimDownSights(bool* bSkipUpdate)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.TryToAimDownSights");

	AKSCharacter_TryToAimDownSights_Params params;
	params.bSkipUpdate = bSkipUpdate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.TryToAimAlternate
// (Final, Native, Public)
// Parameters:
// bool*                          bSkipUpdate                    (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::TryToAimAlternate(bool* bSkipUpdate)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.TryToAimAlternate");

	AKSCharacter_TryToAimAlternate_Params params;
	params.bSkipUpdate = bSkipUpdate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ToggleSprint
// (Final, Native, Protected)

void AKSCharacter::ToggleSprint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ToggleSprint");

	AKSCharacter_ToggleSprint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ToggleScopeZoomIndexUp
// (Final, Native, Public, BlueprintCallable)

void AKSCharacter::ToggleScopeZoomIndexUp()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ToggleScopeZoomIndexUp");

	AKSCharacter_ToggleScopeZoomIndexUp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ToggleScopeZoomIndexLoop
// (Final, Native, Public, BlueprintCallable)

void AKSCharacter::ToggleScopeZoomIndexLoop()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ToggleScopeZoomIndexLoop");

	AKSCharacter_ToggleScopeZoomIndexLoop_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ToggleScopeZoomIndexDown
// (Final, Native, Public, BlueprintCallable)

void AKSCharacter::ToggleScopeZoomIndexDown()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ToggleScopeZoomIndexDown");

	AKSCharacter_ToggleScopeZoomIndexDown_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ToggleCrouchRoll
// (Final, Native, Protected)

void AKSCharacter::ToggleCrouchRoll()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ToggleCrouchRoll");

	AKSCharacter_ToggleCrouchRoll_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ToggleCrouch
// (Final, Native, Protected)

void AKSCharacter::ToggleCrouch()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ToggleCrouch");

	AKSCharacter_ToggleCrouch_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ToggleCarry
// (Final, Native, Public)

void AKSCharacter::ToggleCarry()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ToggleCarry");

	AKSCharacter_ToggleCarry_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ThrowGrenadeReleased
// (Final, Native, Public, BlueprintCallable)

void AKSCharacter::ThrowGrenadeReleased()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ThrowGrenadeReleased");

	AKSCharacter_ThrowGrenadeReleased_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ThrowGrenadePressed
// (Final, Native, Public, BlueprintCallable)

void AKSCharacter::ThrowGrenadePressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ThrowGrenadePressed");

	AKSCharacter_ThrowGrenadePressed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.TagForDownAssist
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APlayerState**           Assistant                      (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Duration                       (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::TagForDownAssist(class APlayerState** Assistant, float* Duration)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.TagForDownAssist");

	AKSCharacter_TagForDownAssist_Params params;
	params.Assistant = Assistant;
	params.Duration = Duration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.SwapWeapon
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AKSWeapon**              NextWeapon                     (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bForce                         (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::SwapWeapon(class AKSWeapon** NextWeapon, bool* bForce)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.SwapWeapon");

	AKSCharacter_SwapWeapon_Params params;
	params.NextWeapon = NextWeapon;
	params.bForce = bForce;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.SwapToSecondary
// (Final, Native, Public, BlueprintCallable)

void AKSCharacter::SwapToSecondary()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.SwapToSecondary");

	AKSCharacter_SwapToSecondary_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.SwapToPrimary
// (Final, Native, Public, BlueprintCallable)

void AKSCharacter::SwapToPrimary()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.SwapToPrimary");

	AKSCharacter_SwapToPrimary_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.SwapToPreviousWeaponWithLoadedClip
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          bForce                         (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::SwapToPreviousWeaponWithLoadedClip(bool* bForce)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.SwapToPreviousWeaponWithLoadedClip");

	AKSCharacter_SwapToPreviousWeaponWithLoadedClip_Params params;
	params.bForce = bForce;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.SwapToPreviousWeaponWithAmmo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          bForce                         (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::SwapToPreviousWeaponWithAmmo(bool* bForce)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.SwapToPreviousWeaponWithAmmo");

	AKSCharacter_SwapToPreviousWeaponWithAmmo_Params params;
	params.bForce = bForce;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.SwapToPreviousWeapon
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          bForce                         (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::SwapToPreviousWeapon(bool* bForce)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.SwapToPreviousWeapon");

	AKSCharacter_SwapToPreviousWeapon_Params params;
	params.bForce = bForce;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.SwapToPreviousGrenade
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          bForce                         (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::SwapToPreviousGrenade(bool* bForce)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.SwapToPreviousGrenade");

	AKSCharacter_SwapToPreviousGrenade_Params params;
	params.bForce = bForce;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.SwapToNextWeaponWithLoadedClip
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          bForce                         (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::SwapToNextWeaponWithLoadedClip(bool* bForce)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.SwapToNextWeaponWithLoadedClip");

	AKSCharacter_SwapToNextWeaponWithLoadedClip_Params params;
	params.bForce = bForce;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.SwapToNextWeaponWithAmmo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          bForce                         (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::SwapToNextWeaponWithAmmo(bool* bForce)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.SwapToNextWeaponWithAmmo");

	AKSCharacter_SwapToNextWeaponWithAmmo_Params params;
	params.bForce = bForce;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.SwapToNextWeapon
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          bForce                         (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::SwapToNextWeapon(bool* bForce)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.SwapToNextWeapon");

	AKSCharacter_SwapToNextWeapon_Params params;
	params.bForce = bForce;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.SwapToNextGrenade
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          bForce                         (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::SwapToNextGrenade(bool* bForce)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.SwapToNextGrenade");

	AKSCharacter_SwapToNextGrenade_Params params;
	params.bForce = bForce;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.SwapToMelee
// (Final, Native, Public, BlueprintCallable)

void AKSCharacter::SwapToMelee()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.SwapToMelee");

	AKSCharacter_SwapToMelee_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.SwapSeatsTimerComplete
// (Final, Native, Protected)

void AKSCharacter::SwapSeatsTimerComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.SwapSeatsTimerComplete");

	AKSCharacter_SwapSeatsTimerComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.SwapSeatsReleased
// (Final, Native, Protected)

void AKSCharacter::SwapSeatsReleased()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.SwapSeatsReleased");

	AKSCharacter_SwapSeatsReleased_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.SwapSeatsPressed
// (Final, Native, Protected)

void AKSCharacter::SwapSeatsPressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.SwapSeatsPressed");

	AKSCharacter_SwapSeatsPressed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.SwapGrenade
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AKSWeapon**              NextWeapon                     (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bForce                         (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::SwapGrenade(class AKSWeapon** NextWeapon, bool* bForce)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.SwapGrenade");

	AKSCharacter_SwapGrenade_Params params;
	params.NextWeapon = NextWeapon;
	params.bForce = bForce;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.SwapActiveGrenade
// (Final, Native, Public)

void AKSCharacter::SwapActiveGrenade()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.SwapActiveGrenade");

	AKSCharacter_SwapActiveGrenade_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.StopRevealedToLocalPlayer
// (BlueprintCosmetic, Native, Event, Protected, BlueprintEvent)

void AKSCharacter::StopRevealedToLocalPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.StopRevealedToLocalPlayer");

	AKSCharacter_StopRevealedToLocalPlayer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.StopReveal
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FRevealInfo*            InRevealInfo                   (Parm)

void AKSCharacter::StopReveal(struct FRevealInfo* InRevealInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.StopReveal");

	AKSCharacter_StopReveal_Params params;
	params.InRevealInfo = InRevealInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.StopKSEffect
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FName*                  InFXID                         (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::StopKSEffect(struct FName* InFXID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.StopKSEffect");

	AKSCharacter_StopKSEffect_Params params;
	params.InFXID = InFXID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.StopFire
// (Final, Native, Public, BlueprintCallable)

void AKSCharacter::StopFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.StopFire");

	AKSCharacter_StopFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.StopAnimEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FName*                  AnimEventName                  (Parm, ZeroConstructor, IsPlainOldData)
// class UKSCharacterAnimInst**   CharAnimInstance               (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSCharacter::StopAnimEvent(struct FName* AnimEventName, class UKSCharacterAnimInst** CharAnimInstance)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.StopAnimEvent");

	AKSCharacter_StopAnimEvent_Params params;
	params.AnimEventName = AnimEventName;
	params.CharAnimInstance = CharAnimInstance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.StopAimDownSights
// (Final, Native, Public, BlueprintCallable)

void AKSCharacter::StopAimDownSights()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.StopAimDownSights");

	AKSCharacter_StopAimDownSights_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.StopActiveHaul
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void AKSCharacter::StopActiveHaul()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.StopActiveHaul");

	AKSCharacter_StopActiveHaul_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.StartRevealedToLocalPlayer
// (BlueprintCosmetic, Native, Event, Protected, BlueprintEvent)

void AKSCharacter::StartRevealedToLocalPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.StartRevealedToLocalPlayer");

	AKSCharacter_StartRevealedToLocalPlayer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.StartLockoutCamera
// (Final, Native, Public, BlueprintCallable)

void AKSCharacter::StartLockoutCamera()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.StartLockoutCamera");

	AKSCharacter_StartLockoutCamera_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.StartKSSpecialEffect
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FKSSpecialEffect*       Effect                         (ConstParm, Parm, OutParm, ReferenceParm)
// float*                         PlayRate                       (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bRestart                       (Parm, ZeroConstructor, IsPlainOldData)
// class UKSFXCurveComponent*     ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UKSFXCurveComponent* AKSCharacter::StartKSSpecialEffect(struct FKSSpecialEffect* Effect, float* PlayRate, bool* bRestart)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.StartKSSpecialEffect");

	AKSCharacter_StartKSSpecialEffect_Params params;
	params.Effect = Effect;
	params.PlayRate = PlayRate;
	params.bRestart = bRestart;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.StartHacking
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AKSCharacter::StartHacking()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.StartHacking");

	AKSCharacter_StartHacking_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.StartFire
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSCharacter::StartFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.StartFire");

	AKSCharacter_StartFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.SetupChords
// (Final, Native, Protected)

void AKSCharacter::SetupChords()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.SetupChords");

	AKSCharacter_SetupChords_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.SetSelfDestruct
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          InSelfDestruct                 (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::SetSelfDestruct(bool* InSelfDestruct)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.SetSelfDestruct");

	AKSCharacter_SetSelfDestruct_Params params;
	params.InSelfDestruct = InSelfDestruct;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.SetOnFire
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float*                         Duration                       (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::SetOnFire(float* Duration)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.SetOnFire");

	AKSCharacter_SetOnFire_Params params;
	params.Duration = Duration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.SetNoFire
// (Final, Native, Public, BlueprintCallable)

void AKSCharacter::SetNoFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.SetNoFire");

	AKSCharacter_SetNoFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.SetInteractionFacesRotation
// (Final, Native, Public)
// Parameters:
// bool*                          FacesRotation                  (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::SetInteractionFacesRotation(bool* FacesRotation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.SetInteractionFacesRotation");

	AKSCharacter_SetInteractionFacesRotation_Params params;
	params.FacesRotation = FacesRotation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.SetInteractionCameraTransition
// (Final, Native, Public)
// Parameters:
// struct FKSInteractableCameraTransition* CameraTransition               (Parm)

void AKSCharacter::SetInteractionCameraTransition(struct FKSInteractableCameraTransition* CameraTransition)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.SetInteractionCameraTransition");

	AKSCharacter_SetInteractionCameraTransition_Params params;
	params.CameraTransition = CameraTransition;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.SetGodMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          InGodMode                      (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::SetGodMode(bool* InGodMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.SetGodMode");

	AKSCharacter_SetGodMode_Params params;
	params.InGodMode = InGodMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.SetActorTargetingMeForRevive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor**                 Reviver                        (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::SetActorTargetingMeForRevive(class AActor** Reviver)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.SetActorTargetingMeForRevive");

	AKSCharacter_SetActorTargetingMeForRevive_Params params;
	params.Reviver = Reviver;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.SetActiveCameraSimple
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// struct FName*                  Tag                            (Parm, ZeroConstructor, IsPlainOldData)
// float*                         InBlendTime                    (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::SetActiveCameraSimple(struct FName* Tag, float* InBlendTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.SetActiveCameraSimple");

	AKSCharacter_SetActiveCameraSimple_Params params;
	params.Tag = Tag;
	params.InBlendTime = InBlendTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.SetActiveCamera
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FName*                  Tag                            (Parm, ZeroConstructor, IsPlainOldData)
// struct FViewTargetTransitionParams* InBlendParams                  (Parm)

void AKSCharacter::SetActiveCamera(struct FName* Tag, struct FViewTargetTransitionParams* InBlendParams)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.SetActiveCamera");

	AKSCharacter_SetActiveCamera_Params params;
	params.Tag = Tag;
	params.InBlendParams = InBlendParams;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ServerTryToCarry
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AActor**                 CarryTarget                    (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::ServerTryToCarry(class AActor** CarryTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ServerTryToCarry");

	AKSCharacter_ServerTryToCarry_Params params;
	params.CarryTarget = CarryTarget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ServerStopGiveUpTimer
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void AKSCharacter::ServerStopGiveUpTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ServerStopGiveUpTimer");

	AKSCharacter_ServerStopGiveUpTimer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ServerStopCarryChecked
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AActor**                 CarryTarget                    (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::ServerStopCarryChecked(class AActor** CarryTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ServerStopCarryChecked");

	AKSCharacter_ServerStopCarryChecked_Params params;
	params.CarryTarget = CarryTarget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ServerStopCarry
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AKSCharacter::ServerStopCarry()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ServerStopCarry");

	AKSCharacter_ServerStopCarry_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ServerStartGiveUpTimer
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void AKSCharacter::ServerStartGiveUpTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ServerStartGiveUpTimer");

	AKSCharacter_ServerStartGiveUpTimer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ServerSetActiveWeaponToNone
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int*                           InIndex                        (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::ServerSetActiveWeaponToNone(int* InIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ServerSetActiveWeaponToNone");

	AKSCharacter_ServerSetActiveWeaponToNone_Params params;
	params.InIndex = InIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ServerRequestActivateAbilityRelease
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// int*                           Ability                        (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::ServerRequestActivateAbilityRelease(int* Ability)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ServerRequestActivateAbilityRelease");

	AKSCharacter_ServerRequestActivateAbilityRelease_Params params;
	params.Ability = Ability;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ServerRequestActivateAbility
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// int*                           Ability                        (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::ServerRequestActivateAbility(int* Ability)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ServerRequestActivateAbility");

	AKSCharacter_ServerRequestActivateAbility_Params params;
	params.Ability = Ability;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ServerGetInNextEmptySeat
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void AKSCharacter::ServerGetInNextEmptySeat()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ServerGetInNextEmptySeat");

	AKSCharacter_ServerGetInNextEmptySeat_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ServerGetInDriverSeat
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void AKSCharacter::ServerGetInDriverSeat()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ServerGetInDriverSeat");

	AKSCharacter_ServerGetInDriverSeat_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ServerExitVehicle
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void AKSCharacter::ServerExitVehicle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ServerExitVehicle");

	AKSCharacter_ServerExitVehicle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ServerDropWeapon
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AKSWeapon**              InWeapon                       (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::ServerDropWeapon(class AKSWeapon** InWeapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ServerDropWeapon");

	AKSCharacter_ServerDropWeapon_Params params;
	params.InWeapon = InWeapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ServerChangeShoulderCamera
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// ECameraShoulder*               InShoulder                     (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::ServerChangeShoulderCamera(ECameraShoulder* InShoulder)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ServerChangeShoulderCamera");

	AKSCharacter_ServerChangeShoulderCamera_Params params;
	params.InShoulder = InShoulder;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.RotateToFace
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                Location                       (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::RotateToFace(struct FVector* Location)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.RotateToFace");

	AKSCharacter_RotateToFace_Params params;
	params.Location = Location;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ReviveOverlapStopped
// (Final, Native, Protected)
// Parameters:
// class UPrimitiveComponent**    OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor**                 OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent**    OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int*                           OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::ReviveOverlapStopped(class UPrimitiveComponent** OverlappedComponent, class AActor** OtherActor, class UPrimitiveComponent** OtherComp, int* OtherBodyIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ReviveOverlapStopped");

	AKSCharacter_ReviveOverlapStopped_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ReverseKSEffect
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FName*                  InFXID                         (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::ReverseKSEffect(struct FName* InFXID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ReverseKSEffect");

	AKSCharacter_ReverseKSEffect_Params params;
	params.InFXID = InFXID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.RevealToWholeTeamWithInfo
// (Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// float*                         Duration                       (Parm, ZeroConstructor, IsPlainOldData)
// class AController**            Revealer                       (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FRevealInfo>     OutRevealInfos                 (Parm, OutParm, ZeroConstructor)
// EPlayerSilhouetteType*         Type                           (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          Fill                           (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          Mark                           (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::RevealToWholeTeamWithInfo(float* Duration, class AController** Revealer, EPlayerSilhouetteType* Type, bool* Fill, bool* Mark, TArray<struct FRevealInfo>* OutRevealInfos)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.RevealToWholeTeamWithInfo");

	AKSCharacter_RevealToWholeTeamWithInfo_Params params;
	params.Duration = Duration;
	params.Revealer = Revealer;
	params.Type = Type;
	params.Fill = Fill;
	params.Mark = Mark;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutRevealInfos != nullptr)
		*OutRevealInfos = params.OutRevealInfos;
}


// Function Killstreak.KSCharacter.ResetKSEffectTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FName*                  InFXID                         (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::ResetKSEffectTime(struct FName* InFXID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ResetKSEffectTime");

	AKSCharacter_ResetKSEffectTime_Params params;
	params.InFXID = InFXID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ReportFootstepNoise
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float*                         Speed                          (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::ReportFootstepNoise(float* Speed)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ReportFootstepNoise");

	AKSCharacter_ReportFootstepNoise_Params params;
	params.Speed = Speed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ReportFireNoise
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float*                         Range                          (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::ReportFireNoise(float* Range)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ReportFireNoise");

	AKSCharacter_ReportFireNoise_Params params;
	params.Range = Range;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ReportDamageEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor**                 Damager                        (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Damage                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult*             Hit                            (Parm, IsPlainOldData)

void AKSCharacter::ReportDamageEvent(class AActor** Damager, float* Damage, struct FHitResult* Hit)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ReportDamageEvent");

	AKSCharacter_ReportDamageEvent_Params params;
	params.Damager = Damager;
	params.Damage = Damage;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ReportDamagedNoise
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float*                         Damage                         (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::ReportDamagedNoise(float* Damage)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ReportDamagedNoise");

	AKSCharacter_ReportDamagedNoise_Params params;
	params.Damage = Damage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ReplicateSpecialAmmoEvent
// (Net, Native, Event, NetMulticast, Public)
// Parameters:
// EAmmoType*                     AmmoType                       (Parm, ZeroConstructor, IsPlainOldData)
// int*                           AmmoDelta                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FName*                  EventName                      (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::ReplicateSpecialAmmoEvent(EAmmoType* AmmoType, int* AmmoDelta, struct FName* EventName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ReplicateSpecialAmmoEvent");

	AKSCharacter_ReplicateSpecialAmmoEvent_Params params;
	params.AmmoType = AmmoType;
	params.AmmoDelta = AmmoDelta;
	params.EventName = EventName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.RemoveWeaponFromInventory
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AKSWeapon**              InWeapon                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSCharacter::RemoveWeaponFromInventory(class AKSWeapon** InWeapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.RemoveWeaponFromInventory");

	AKSCharacter_RemoveWeaponFromInventory_Params params;
	params.InWeapon = InWeapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.RemoveParticleEffects
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UParticleSystemComponent*>* ParticleSystems                (Parm, ZeroConstructor)

void AKSCharacter::RemoveParticleEffects(TArray<class UParticleSystemComponent*>* ParticleSystems)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.RemoveParticleEffects");

	AKSCharacter_RemoveParticleEffects_Params params;
	params.ParticleSystems = ParticleSystems;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.RemoveOutOfRangePickup
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor**                 OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::RemoveOutOfRangePickup(class AActor** OtherActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.RemoveOutOfRangePickup");

	AKSCharacter_RemoveOutOfRangePickup_Params params;
	params.OtherActor = OtherActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.RemoveMod
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UKSPlayerMod**           Mod                            (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          RemoveAll                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSCharacter::RemoveMod(class UKSPlayerMod** Mod, bool* RemoveAll)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.RemoveMod");

	AKSCharacter_RemoveMod_Params params;
	params.Mod = Mod;
	params.RemoveAll = RemoveAll;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.RemoveEffectCurve
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FName*                  InFXID                         (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::RemoveEffectCurve(struct FName* InFXID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.RemoveEffectCurve");

	AKSCharacter_RemoveEffectCurve_Params params;
	params.InFXID = InFXID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.RemoveBlendable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TScriptInterface<class UBlendableInterface>* InBlendableObject              (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::RemoveBlendable(TScriptInterface<class UBlendableInterface>* InBlendableObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.RemoveBlendable");

	AKSCharacter_RemoveBlendable_Params params;
	params.InBlendableObject = InBlendableObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.RemoveBackpack
// (Native, Event, Public, BlueprintEvent)

void AKSCharacter::RemoveBackpack()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.RemoveBackpack");

	AKSCharacter_RemoveBackpack_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.RemoveActionRestriction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int*                           ID                             (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::RemoveActionRestriction(int* ID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.RemoveActionRestriction");

	AKSCharacter_RemoveActionRestriction_Params params;
	params.ID = ID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.RemotePlayerInteractStart
// (Net, Native, Event, NetMulticast, Public)
// Parameters:
// float*                         InteractDuration               (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 InteractTarget                 (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::RemotePlayerInteractStart(float* InteractDuration, class AActor** InteractTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.RemotePlayerInteractStart");

	AKSCharacter_RemotePlayerInteractStart_Params params;
	params.InteractDuration = InteractDuration;
	params.InteractTarget = InteractTarget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.RemotePlayerInteractEnd
// (Net, Native, Event, NetMulticast, Public)

void AKSCharacter::RemotePlayerInteractEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.RemotePlayerInteractEnd");

	AKSCharacter_RemotePlayerInteractEnd_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.Reload
// (Final, Native, Public, BlueprintCallable)

void AKSCharacter::Reload()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.Reload");

	AKSCharacter_Reload_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ReleaseToggleCrouchRoll
// (Final, Native, Protected)

void AKSCharacter::ReleaseToggleCrouchRoll()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ReleaseToggleCrouchRoll");

	AKSCharacter_ReleaseToggleCrouchRoll_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ReleaseGiveUp
// (Final, Native, Protected)

void AKSCharacter::ReleaseGiveUp()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ReleaseGiveUp");

	AKSCharacter_ReleaseGiveUp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ReleaseCrouch
// (Final, Native, Protected)

void AKSCharacter::ReleaseCrouch()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ReleaseCrouch");

	AKSCharacter_ReleaseCrouch_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.RegisterFootstepOverride
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TScriptInterface<class UKSFootstepOverrideInterface>* ToAdd                          (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::RegisterFootstepOverride(TScriptInterface<class UKSFootstepOverrideInterface>* ToAdd)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.RegisterFootstepOverride");

	AKSCharacter_RegisterFootstepOverride_Params params;
	params.ToAdd = ToAdd;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ReevaluateNoFire
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UPrimitiveComponent**    LeftOverlapper                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void AKSCharacter::ReevaluateNoFire(class UPrimitiveComponent** LeftOverlapper)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ReevaluateNoFire");

	AKSCharacter_ReevaluateNoFire_Params params;
	params.LeftOverlapper = LeftOverlapper;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.QuickMeleeHoldTimerComplete
// (Final, Native, Protected)

void AKSCharacter::QuickMeleeHoldTimerComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.QuickMeleeHoldTimerComplete");

	AKSCharacter_QuickMeleeHoldTimerComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.QueryModsForAnimEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FName*                  AnimEventName                  (Parm, ZeroConstructor, IsPlainOldData)
// class UKSCharacterAnimInst**   CharAnimInst                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSCharacter::QueryModsForAnimEvent(struct FName* AnimEventName, class UKSCharacterAnimInst** CharAnimInst)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.QueryModsForAnimEvent");

	AKSCharacter_QueryModsForAnimEvent_Params params;
	params.AnimEventName = AnimEventName;
	params.CharAnimInst = CharAnimInst;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.PrimaryWeaponFOVChanged
// (Native, Protected)
// Parameters:
// float*                         NewFOV                         (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::PrimaryWeaponFOVChanged(float* NewFOV)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.PrimaryWeaponFOVChanged");

	AKSCharacter_PrimaryWeaponFOVChanged_Params params;
	params.NewFOV = NewFOV;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.PressGiveUp
// (Final, Native, Protected)

void AKSCharacter::PressGiveUp()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.PressGiveUp");

	AKSCharacter_PressGiveUp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.PlayVO
// (Net, Native, Event, NetMulticast, Protected)
// Parameters:
// struct FKSVoicelineEvent*      VoicelineEvent                 (ConstParm, Parm, ReferenceParm)

void AKSCharacter::PlayVO(struct FKSVoicelineEvent* VoicelineEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.PlayVO");

	AKSCharacter_PlayVO_Params params;
	params.VoicelineEvent = VoicelineEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.PlayHitFromRadialDamage
// (BlueprintCosmetic, Event, Protected, HasOutParms, BlueprintEvent)
// Parameters:
// struct FDamageEffect*          Effect                         (ConstParm, Parm, OutParm, ReferenceParm)

void AKSCharacter::PlayHitFromRadialDamage(struct FDamageEffect* Effect)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.PlayHitFromRadialDamage");

	AKSCharacter_PlayHitFromRadialDamage_Params params;
	params.Effect = Effect;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.PlayHitFromPointDamage
// (BlueprintCosmetic, Event, Protected, HasOutParms, BlueprintEvent)
// Parameters:
// struct FDamageEffect*          Effect                         (ConstParm, Parm, OutParm, ReferenceParm)

void AKSCharacter::PlayHitFromPointDamage(struct FDamageEffect* Effect)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.PlayHitFromPointDamage");

	AKSCharacter_PlayHitFromPointDamage_Params params;
	params.Effect = Effect;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.PlayActionCameraSequence
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FName*                  SequenceName                   (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::PlayActionCameraSequence(struct FName* SequenceName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.PlayActionCameraSequence");

	AKSCharacter_PlayActionCameraSequence_Params params;
	params.SequenceName = SequenceName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OutOfBoundsWarningEnd
// (Final, Native, Protected)

void AKSCharacter::OutOfBoundsWarningEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OutOfBoundsWarningEnd");

	AKSCharacter_OutOfBoundsWarningEnd_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OutOfBoundsOverlapEnd
// (Final, Native, Public, BlueprintCallable)

void AKSCharacter::OutOfBoundsOverlapEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OutOfBoundsOverlapEnd");

	AKSCharacter_OutOfBoundsOverlapEnd_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OutOfBoundsOverlapBegin
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float*                         WarningLength                  (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::OutOfBoundsOverlapBegin(float* WarningLength)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OutOfBoundsOverlapBegin");

	AKSCharacter_OutOfBoundsOverlapBegin_Params params;
	params.WarningLength = WarningLength;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnWeaponSwapSuccessful
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AKSWeapon**              FromWeapon                     (Parm, ZeroConstructor, IsPlainOldData)
// class AKSWeapon**              ToWeapon                       (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::OnWeaponSwapSuccessful(class AKSWeapon** FromWeapon, class AKSWeapon** ToWeapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnWeaponSwapSuccessful");

	AKSCharacter_OnWeaponSwapSuccessful_Params params;
	params.FromWeapon = FromWeapon;
	params.ToWeapon = ToWeapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnWeaponSwapFailed
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AKSWeapon**              FromWeapon                     (Parm, ZeroConstructor, IsPlainOldData)
// class AKSWeapon**              ToWeapon                       (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::OnWeaponSwapFailed(class AKSWeapon** FromWeapon, class AKSWeapon** ToWeapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnWeaponSwapFailed");

	AKSCharacter_OnWeaponSwapFailed_Params params;
	params.FromWeapon = FromWeapon;
	params.ToWeapon = ToWeapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnUnhovered
// (Event, Protected, BlueprintEvent)
// Parameters:
// float*                         ExtraTime                      (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::OnUnhovered(float* ExtraTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnUnhovered");

	AKSCharacter_OnUnhovered_Params params;
	params.ExtraTime = ExtraTime;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnStopAimDownSightsCheckpoint
// (Native, Event, Protected, BlueprintEvent)

void AKSCharacter::OnStopAimDownSightsCheckpoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnStopAimDownSightsCheckpoint");

	AKSCharacter_OnStopAimDownSightsCheckpoint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnStartAimDownSightsCheckpoint
// (Native, Event, Protected, BlueprintEvent)

void AKSCharacter::OnStartAimDownSightsCheckpoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnStartAimDownSightsCheckpoint");

	AKSCharacter_OnStartAimDownSightsCheckpoint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnReviveStart
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AKSCharacter**           Reviver                        (Parm, ZeroConstructor, IsPlainOldData)
// float*                         ReviveTime                     (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          Remote                         (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::OnReviveStart(class AKSCharacter** Reviver, float* ReviveTime, bool* Remote)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnReviveStart");

	AKSCharacter_OnReviveStart_Params params;
	params.Reviver = Reviver;
	params.ReviveTime = ReviveTime;
	params.Remote = Remote;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnReviveInterrupt
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AKSCharacter**           Reviver                        (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::OnReviveInterrupt(class AKSCharacter** Reviver)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnReviveInterrupt");

	AKSCharacter_OnReviveInterrupt_Params params;
	params.Reviver = Reviver;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnReviveComplete
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AKSCharacter**           Reviver                        (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::OnReviveComplete(class AKSCharacter** Reviver)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnReviveComplete");

	AKSCharacter_OnReviveComplete_Params params;
	params.Reviver = Reviver;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnRep_VehicleState
// (Native, Protected)

void AKSCharacter::OnRep_VehicleState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnRep_VehicleState");

	AKSCharacter_OnRep_VehicleState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnRep_StartingActiveWeaponEquipPoint
// (Final, Native, Protected)

void AKSCharacter::OnRep_StartingActiveWeaponEquipPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnRep_StartingActiveWeaponEquipPoint");

	AKSCharacter_OnRep_StartingActiveWeaponEquipPoint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnRep_SelfDestruct
// (Final, Native, Private)

void AKSCharacter::OnRep_SelfDestruct()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnRep_SelfDestruct");

	AKSCharacter_OnRep_SelfDestruct_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnRep_Scrambled
// (Final, Native, Protected)

void AKSCharacter::OnRep_Scrambled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnRep_Scrambled");

	AKSCharacter_OnRep_Scrambled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnRep_ReviveInfo
// (Native, Protected)

void AKSCharacter::OnRep_ReviveInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnRep_ReviveInfo");

	AKSCharacter_OnRep_ReviveInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnRep_RevealedStatus
// (Native, Protected)

void AKSCharacter::OnRep_RevealedStatus()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnRep_RevealedStatus");

	AKSCharacter_OnRep_RevealedStatus_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnRep_OutOfBoundsInfo
// (Native, Protected)

void AKSCharacter::OnRep_OutOfBoundsInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnRep_OutOfBoundsInfo");

	AKSCharacter_OnRep_OutOfBoundsInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnRep_OnFire
// (Final, Native, Public)

void AKSCharacter::OnRep_OnFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnRep_OnFire");

	AKSCharacter_OnRep_OnFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnRep_IsInInteraction
// (Final, Native, Protected)

void AKSCharacter::OnRep_IsInInteraction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnRep_IsInInteraction");

	AKSCharacter_OnRep_IsInInteraction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnRep_Health
// (Native, Protected)

void AKSCharacter::OnRep_Health()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnRep_Health");

	AKSCharacter_OnRep_Health_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnRep_HaulingInfo
// (Native, Protected)

void AKSCharacter::OnRep_HaulingInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnRep_HaulingInfo");

	AKSCharacter_OnRep_HaulingInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnRep_GiveUpTimer
// (Final, Native, Protected)

void AKSCharacter::OnRep_GiveUpTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnRep_GiveUpTimer");

	AKSCharacter_OnRep_GiveUpTimer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnRep_Gender
// (Native, Protected)

void AKSCharacter::OnRep_Gender()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnRep_Gender");

	AKSCharacter_OnRep_Gender_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnRep_EMPLockout
// (Final, Native, Private)

void AKSCharacter::OnRep_EMPLockout()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnRep_EMPLockout");

	AKSCharacter_OnRep_EMPLockout_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnRep_Emotion
// (Final, Native, Protected)

void AKSCharacter::OnRep_Emotion()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnRep_Emotion");

	AKSCharacter_OnRep_Emotion_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnRep_Downed
// (Native, Protected)

void AKSCharacter::OnRep_Downed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnRep_Downed");

	AKSCharacter_OnRep_Downed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnRep_CurrentBehaviorState
// (Final, Native, Protected)

void AKSCharacter::OnRep_CurrentBehaviorState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnRep_CurrentBehaviorState");

	AKSCharacter_OnRep_CurrentBehaviorState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnRep_CarriedInfo
// (Native, Protected)

void AKSCharacter::OnRep_CarriedInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnRep_CarriedInfo");

	AKSCharacter_OnRep_CarriedInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnRep_CameraShoulder
// (Final, Native, Protected)

void AKSCharacter::OnRep_CameraShoulder()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnRep_CameraShoulder");

	AKSCharacter_OnRep_CameraShoulder_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnRep_CameraPivotTargetActor
// (Final, Native, Protected)

void AKSCharacter::OnRep_CameraPivotTargetActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnRep_CameraPivotTargetActor");

	AKSCharacter_OnRep_CameraPivotTargetActor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnRep_Bot
// (Final, Native, Protected)

void AKSCharacter::OnRep_Bot()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnRep_Bot");

	AKSCharacter_OnRep_Bot_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnRep_ApparelAssets
// (Final, Native, Protected)

void AKSCharacter::OnRep_ApparelAssets()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnRep_ApparelAssets");

	AKSCharacter_OnRep_ApparelAssets_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnRep_ActiveEquipmentId
// (Final, Native, Public)

void AKSCharacter::OnRep_ActiveEquipmentId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnRep_ActiveEquipmentId");

	AKSCharacter_OnRep_ActiveEquipmentId_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnImmuneStart
// (BlueprintCosmetic, Event, Public, BlueprintCallable, BlueprintEvent)

void AKSCharacter::OnImmuneStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnImmuneStart");

	AKSCharacter_OnImmuneStart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnImmuneEnd
// (BlueprintCosmetic, Event, Public, BlueprintCallable, BlueprintEvent)

void AKSCharacter::OnImmuneEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnImmuneEnd");

	AKSCharacter_OnImmuneEnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnHovered
// (Event, Protected, BlueprintEvent)

void AKSCharacter::OnHovered()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnHovered");

	AKSCharacter_OnHovered_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnGrenadeClassLoaded
// (Final, Native, Public)
// Parameters:
// class UKSWeaponAsset_Grenade** pGrenadeWeaponAsset            (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::OnGrenadeClassLoaded(class UKSWeaponAsset_Grenade** pGrenadeWeaponAsset)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnGrenadeClassLoaded");

	AKSCharacter_OnGrenadeClassLoaded_Params params;
	params.pGrenadeWeaponAsset = pGrenadeWeaponAsset;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnFieldOfViewModChange
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AKSCharacter::OnFieldOfViewModChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnFieldOfViewModChange");

	AKSCharacter_OnFieldOfViewModChange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnEndOutOfBounds
// (Event, Protected, BlueprintEvent)

void AKSCharacter::OnEndOutOfBounds()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnEndOutOfBounds");

	AKSCharacter_OnEndOutOfBounds_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnDeathCleanup
// (Final, Native, Protected)

void AKSCharacter::OnDeathCleanup()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnDeathCleanup");

	AKSCharacter_OnDeathCleanup_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnBeginOutOfBounds
// (Event, Protected, BlueprintEvent)

void AKSCharacter::OnBeginOutOfBounds()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnBeginOutOfBounds");

	AKSCharacter_OnBeginOutOfBounds_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnApparelTimeoutExpire
// (Final, Native, Protected)

void AKSCharacter::OnApparelTimeoutExpire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnApparelTimeoutExpire");

	AKSCharacter_OnApparelTimeoutExpire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.NoseDiveCameraTransition
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                          bEnterNoseDive                 (Parm, ZeroConstructor, IsPlainOldData)
// float*                         AnimLength                     (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::NoseDiveCameraTransition(bool* bEnterNoseDive, float* AnimLength)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.NoseDiveCameraTransition");

	AKSCharacter_NoseDiveCameraTransition_Params params;
	params.bEnterNoseDive = bEnterNoseDive;
	params.AnimLength = AnimLength;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.NativeJumpToSwingMontage
// (Net, Native, Event, NetMulticast, Public)
// Parameters:
// struct FString*                SwingMontageSectionName        (Parm, ZeroConstructor)

void AKSCharacter::NativeJumpToSwingMontage(struct FString* SwingMontageSectionName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.NativeJumpToSwingMontage");

	AKSCharacter_NativeJumpToSwingMontage_Params params;
	params.SwingMontageSectionName = SwingMontageSectionName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.MoveRight
// (Native, Protected)
// Parameters:
// float*                         Value                          (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::MoveRight(float* Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.MoveRight");

	AKSCharacter_MoveRight_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.MoveForward
// (Native, Protected)
// Parameters:
// float*                         Value                          (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::MoveForward(float* Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.MoveForward");

	AKSCharacter_MoveForward_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.MeleeReleased
// (Final, Native, Public, BlueprintCallable)

void AKSCharacter::MeleeReleased()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.MeleeReleased");

	AKSCharacter_MeleeReleased_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.MeleePressed
// (Final, Native, Public, BlueprintCallable)

void AKSCharacter::MeleePressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.MeleePressed");

	AKSCharacter_MeleePressed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.MeleeHoldTimerComplete
// (Final, Native, Protected)

void AKSCharacter::MeleeHoldTimerComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.MeleeHoldTimerComplete");

	AKSCharacter_MeleeHoldTimerComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.MedPackReleased
// (Final, Native, Public, BlueprintCallable)

void AKSCharacter::MedPackReleased()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.MedPackReleased");

	AKSCharacter_MedPackReleased_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.MedPackPressed
// (Final, Native, Public, BlueprintCallable)

void AKSCharacter::MedPackPressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.MedPackPressed");

	AKSCharacter_MedPackPressed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.LogShotgunHitData
// (Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FShotgunHitData*        HitData                        (ConstParm, Parm, OutParm, ReferenceParm)

void AKSCharacter::LogShotgunHitData(struct FShotgunHitData* HitData)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.LogShotgunHitData");

	AKSCharacter_LogShotgunHitData_Params params;
	params.HitData = HitData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.LockShoulderSwap
// (Final, Native, Public, BlueprintCallable)

void AKSCharacter::LockShoulderSwap()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.LockShoulderSwap");

	AKSCharacter_LockShoulderSwap_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.KillIfDowned
// (Native, Public, BlueprintCallable)

void AKSCharacter::KillIfDowned()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.KillIfDowned");

	AKSCharacter_KillIfDowned_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.JumpToSwingMontage
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// struct FString*                SwingMontageSectionName        (Parm, ZeroConstructor)

void AKSCharacter::JumpToSwingMontage(struct FString* SwingMontageSectionName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.JumpToSwingMontage");

	AKSCharacter_JumpToSwingMontage_Params params;
	params.SwingMontageSectionName = SwingMontageSectionName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.IsZipLining
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSCharacter::IsZipLining()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.IsZipLining");

	AKSCharacter_IsZipLining_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.IsShoulderSwapLocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSCharacter::IsShoulderSwapLocked()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.IsShoulderSwapLocked");

	AKSCharacter_IsShoulderSwapLocked_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.IsRevivingAnotherPlayer
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AKSCharacter*            OutReviveTarget                (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool*                          bCountRemoteRevives            (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSCharacter::IsRevivingAnotherPlayer(bool* bCountRemoteRevives, class AKSCharacter** OutReviveTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.IsRevivingAnotherPlayer");

	AKSCharacter_IsRevivingAnotherPlayer_Params params;
	params.bCountRemoteRevives = bCountRemoteRevives;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutReviveTarget != nullptr)
		*OutReviveTarget = params.OutReviveTarget;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.IsRevealable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSCharacter::IsRevealable()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.IsRevealable");

	AKSCharacter_IsRevealable_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.IsPerformingAnInteraction
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSCharacter::IsPerformingAnInteraction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.IsPerformingAnInteraction");

	AKSCharacter_IsPerformingAnInteraction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.IsOutOfRangePickup
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor**                 OtherActor                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSCharacter::IsOutOfRangePickup(class AActor** OtherActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.IsOutOfRangePickup");

	AKSCharacter_IsOutOfRangePickup_Params params;
	params.OtherActor = OtherActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.IsOutOfBounds
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          RemainingTime                  (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSCharacter::IsOutOfBounds(float* RemainingTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.IsOutOfBounds");

	AKSCharacter_IsOutOfBounds_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (RemainingTime != nullptr)
		*RemainingTime = params.RemainingTime;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.IsOnFire
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSCharacter::IsOnFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.IsOnFire");

	AKSCharacter_IsOnFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.IsLobby
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSCharacter::IsLobby()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.IsLobby");

	AKSCharacter_IsLobby_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.IsInVehicle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSCharacter::IsInVehicle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.IsInVehicle");

	AKSCharacter_IsInVehicle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.IsInRagdoll
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSCharacter::IsInRagdoll()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.IsInRagdoll");

	AKSCharacter_IsInRagdoll_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.IsInLockoutCameraCooldown
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSCharacter::IsInLockoutCameraCooldown()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.IsInLockoutCameraCooldown");

	AKSCharacter_IsInLockoutCameraCooldown_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.IsInLockoutCamera
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSCharacter::IsInLockoutCamera()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.IsInLockoutCamera");

	AKSCharacter_IsInLockoutCamera_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.IsHaulingRightNow
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSCharacter::IsHaulingRightNow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.IsHaulingRightNow");

	AKSCharacter_IsHaulingRightNow_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.IsDowned
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSCharacter::IsDowned()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.IsDowned");

	AKSCharacter_IsDowned_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.IsCrosshairHidden
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSCharacter::IsCrosshairHidden()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.IsCrosshairHidden");

	AKSCharacter_IsCrosshairHidden_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.IsBlinded
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSCharacter::IsBlinded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.IsBlinded");

	AKSCharacter_IsBlinded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.IsBeingRevived
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AKSCharacter*            Reviver                        (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// float                          Progress                       (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSCharacter::IsBeingRevived(class AKSCharacter** Reviver, float* Progress)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.IsBeingRevived");

	AKSCharacter_IsBeingRevived_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Reviver != nullptr)
		*Reviver = params.Reviver;
	if (Progress != nullptr)
		*Progress = params.Progress;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.IsAnyEquippedWeaponTakingAction
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AKSWeapon**              IgnoredWeapon                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSCharacter::IsAnyEquippedWeaponTakingAction(class AKSWeapon** IgnoredWeapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.IsAnyEquippedWeaponTakingAction");

	AKSCharacter_IsAnyEquippedWeaponTakingAction_Params params;
	params.IgnoredWeapon = IgnoredWeapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.IsAimLocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSCharacter::IsAimLocked()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.IsAimLocked");

	AKSCharacter_IsAimLocked_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.IsActiveWeapon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AKSWeapon**              InWeapon                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSCharacter::IsActiveWeapon(class AKSWeapon** InWeapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.IsActiveWeapon");

	AKSCharacter_IsActiveWeapon_Params params;
	params.InWeapon = InWeapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.InvalidateAllRevealOfMe
// (Native, Protected, BlueprintCallable)

void AKSCharacter::InvalidateAllRevealOfMe()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.InvalidateAllRevealOfMe");

	AKSCharacter_InvalidateAllRevealOfMe_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.InterruptNonCharacterRevive
// (Final, Native, Public, BlueprintCallable)

void AKSCharacter::InterruptNonCharacterRevive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.InterruptNonCharacterRevive");

	AKSCharacter_InterruptNonCharacterRevive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.InterruptAimDownSightsToggle
// (Final, Native, Public)
// Parameters:
// bool*                          bReturnWhenComplete            (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::InterruptAimDownSightsToggle(bool* bReturnWhenComplete)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.InterruptAimDownSightsToggle");

	AKSCharacter_InterruptAimDownSightsToggle_Params params;
	params.bReturnWhenComplete = bReturnWhenComplete;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.InterruptAimAlternateToggle
// (Final, Native, Public)
// Parameters:
// bool*                          bReturnWhenComplete            (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::InterruptAimAlternateToggle(bool* bReturnWhenComplete)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.InterruptAimAlternateToggle");

	AKSCharacter_InterruptAimAlternateToggle_Params params;
	params.bReturnWhenComplete = bReturnWhenComplete;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.InstantRevive
// (Final, Native, Protected)
// Parameters:
// class AKSCharacter**           Reviver                        (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::InstantRevive(class AKSCharacter** Reviver)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.InstantRevive");

	AKSCharacter_InstantRevive_Params params;
	params.Reviver = Reviver;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.InputStopSprint
// (Final, Native, Protected)

void AKSCharacter::InputStopSprint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.InputStopSprint");

	AKSCharacter_InputStopSprint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.InputStartSprint
// (Final, Native, Protected)

void AKSCharacter::InputStartSprint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.InputStartSprint");

	AKSCharacter_InputStartSprint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.InputStartFire
// (Final, Native, Public)

void AKSCharacter::InputStartFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.InputStartFire");

	AKSCharacter_InputStartFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.InitRagdoll
// (Native, Protected, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSCharacter::InitRagdoll()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.InitRagdoll");

	AKSCharacter_InitRagdoll_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.HideADSMaterials
// (Final, Native, Public, BlueprintCallable)

void AKSCharacter::HideADSMaterials()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.HideADSMaterials");

	AKSCharacter_HideADSMaterials_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.HasModAny
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UKSPlayerMod*>*   TestPlayerMods                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSCharacter::HasModAny(TArray<class UKSPlayerMod*>* TestPlayerMods)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.HasModAny");

	AKSCharacter_HasModAny_Params params;
	params.TestPlayerMods = TestPlayerMods;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.HasMod
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UKSPlayerMod**           TestPlayerMod                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSCharacter::HasMod(class UKSPlayerMod** TestPlayerMod)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.HasMod");

	AKSCharacter_HasMod_Params params;
	params.TestPlayerMod = TestPlayerMod;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.HasEquipPoint
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag*           EquipPoint                     (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSCharacter::HasEquipPoint(struct FGameplayTag* EquipPoint)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.HasEquipPoint");

	AKSCharacter_HasEquipPoint_Params params;
	params.EquipPoint = EquipPoint;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.GiveUpTimerTick
// (Final, Native, Protected)
// Parameters:
// float*                         Seconds                        (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::GiveUpTimerTick(float* Seconds)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GiveUpTimerTick");

	AKSCharacter_GiveUpTimerTick_Params params;
	params.Seconds = Seconds;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GiveUpTimerComplete
// (Final, Native, Protected)

void AKSCharacter::GiveUpTimerComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GiveUpTimerComplete");

	AKSCharacter_GiveUpTimerComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GiveUpTimerActive
// (Final, Native, Protected)
// Parameters:
// bool*                          bActive                        (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::GiveUpTimerActive(bool* bActive)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GiveUpTimerActive");

	AKSCharacter_GiveUpTimerActive_Params params;
	params.bActive = bActive;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GiveModInstance
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UKSPlayerMod**           Mod                            (Parm, ZeroConstructor, IsPlainOldData)
// class AKSPlayerState**         ModInstigator                  (Parm, ZeroConstructor, IsPlainOldData)
// class UKSPlayerModInstance*    Instance                       (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool*                          Unique                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSCharacter::GiveModInstance(class UKSPlayerMod** Mod, class AKSPlayerState** ModInstigator, bool* Unique, class UKSPlayerModInstance** Instance)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GiveModInstance");

	AKSCharacter_GiveModInstance_Params params;
	params.Mod = Mod;
	params.ModInstigator = ModInstigator;
	params.Unique = Unique;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Instance != nullptr)
		*Instance = params.Instance;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.GiveMod
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UKSPlayerMod**           Mod                            (Parm, ZeroConstructor, IsPlainOldData)
// class AKSPlayerState**         ModInstigator                  (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          Unique                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSCharacter::GiveMod(class UKSPlayerMod** Mod, class AKSPlayerState** ModInstigator, bool* Unique)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GiveMod");

	AKSCharacter_GiveMod_Params params;
	params.Mod = Mod;
	params.ModInstigator = ModInstigator;
	params.Unique = Unique;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.GetWeaponByAsset
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UKSWeaponAsset**         InAsset                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AKSWeapon*               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AKSWeapon* AKSCharacter::GetWeaponByAsset(class UKSWeaponAsset** InAsset)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetWeaponByAsset");

	AKSCharacter_GetWeaponByAsset_Params params;
	params.InAsset = InAsset;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.GetWeaponAtEquipPoint
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag*           EquipPoint                     (ConstParm, Parm, OutParm, ReferenceParm)
// class AKSWeapon*               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AKSWeapon* AKSCharacter::GetWeaponAtEquipPoint(struct FGameplayTag* EquipPoint)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetWeaponAtEquipPoint");

	AKSCharacter_GetWeaponAtEquipPoint_Params params;
	params.EquipPoint = EquipPoint;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.GetVOComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UKSVOComponent*          ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UKSVOComponent* AKSCharacter::GetVOComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetVOComponent");

	AKSCharacter_GetVOComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.GetValidWeaponPoints
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTagContainer   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FGameplayTagContainer AKSCharacter::GetValidWeaponPoints()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetValidWeaponPoints");

	AKSCharacter_GetValidWeaponPoints_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.GetUsedEquipPoints
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTagContainer   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FGameplayTagContainer AKSCharacter::GetUsedEquipPoints()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetUsedEquipPoints");

	AKSCharacter_GetUsedEquipPoints_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.GetSpecialties
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UKSSpecialty*>    OutSpecialties                 (Parm, OutParm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSCharacter::GetSpecialties(TArray<class UKSSpecialty*>* OutSpecialties)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetSpecialties");

	AKSCharacter_GetSpecialties_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutSpecialties != nullptr)
		*OutSpecialties = params.OutSpecialties;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.GetSeatAimCameraTag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FName                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FName AKSCharacter::GetSeatAimCameraTag()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetSeatAimCameraTag");

	AKSCharacter_GetSeatAimCameraTag_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.GetPickupSphere
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USphereComponent*        ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class USphereComponent* AKSCharacter::GetPickupSphere()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetPickupSphere");

	AKSCharacter_GetPickupSphere_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.GetOverrideByLocation
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                WorldLocation                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// bool                           outShouldOverride              (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// struct FName                   outOverrideName                (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::GetOverrideByLocation(struct FVector* WorldLocation, bool* outShouldOverride, struct FName* outOverrideName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetOverrideByLocation");

	AKSCharacter_GetOverrideByLocation_Params params;
	params.WorldLocation = WorldLocation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (outShouldOverride != nullptr)
		*outShouldOverride = params.outShouldOverride;
	if (outOverrideName != nullptr)
		*outOverrideName = params.outOverrideName;
}


// Function Killstreak.KSCharacter.GetMostRecentInteractionType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UKSInteractionType*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UKSInteractionType* AKSCharacter::GetMostRecentInteractionType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetMostRecentInteractionType");

	AKSCharacter_GetMostRecentInteractionType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.GetModInstances
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UKSPlayerModInstance*> OutMods                        (Parm, OutParm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSCharacter::GetModInstances(TArray<class UKSPlayerModInstance*>* OutMods)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetModInstances");

	AKSCharacter_GetModInstances_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutMods != nullptr)
		*OutMods = params.OutMods;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.GetMaxHealthBonus
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSCharacter::GetMaxHealthBonus()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetMaxHealthBonus");

	AKSCharacter_GetMaxHealthBonus_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.GetLeftArmVisibility
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EKSArmVisibilityType           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EKSArmVisibilityType AKSCharacter::GetLeftArmVisibility()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetLeftArmVisibility");

	AKSCharacter_GetLeftArmVisibility_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.GetInteractionTarget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AActor* AKSCharacter::GetInteractionTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetInteractionTarget");

	AKSCharacter_GetInteractionTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.GetHitPawnEffectOverride
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UParticleSystem*         ParticleSystem                 (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::GetHitPawnEffectOverride(class UParticleSystem** ParticleSystem)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetHitPawnEffectOverride");

	AKSCharacter_GetHitPawnEffectOverride_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (ParticleSystem != nullptr)
		*ParticleSystem = params.ParticleSystem;
}


// Function Killstreak.KSCharacter.GetHitHeadAudioEventOverride
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAkAudioEvent*           SoundEffect                    (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::GetHitHeadAudioEventOverride(class UAkAudioEvent** SoundEffect)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetHitHeadAudioEventOverride");

	AKSCharacter_GetHitHeadAudioEventOverride_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (SoundEffect != nullptr)
		*SoundEffect = params.SoundEffect;
}


// Function Killstreak.KSCharacter.GetHitByAudioEventOverride
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAkAudioEvent*           SoundEffect                    (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::GetHitByAudioEventOverride(class UAkAudioEvent** SoundEffect)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetHitByAudioEventOverride");

	AKSCharacter_GetHitByAudioEventOverride_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (SoundEffect != nullptr)
		*SoundEffect = params.SoundEffect;
}


// Function Killstreak.KSCharacter.GetHitBodyAudioEventOverride
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAkAudioEvent*           SoundEffect                    (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::GetHitBodyAudioEventOverride(class UAkAudioEvent** SoundEffect)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetHitBodyAudioEventOverride");

	AKSCharacter_GetHitBodyAudioEventOverride_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (SoundEffect != nullptr)
		*SoundEffect = params.SoundEffect;
}


// Function Killstreak.KSCharacter.GetGiveUpTime
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSCharacter::GetGiveUpTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetGiveUpTime");

	AKSCharacter_GetGiveUpTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.GetGender
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EKSCharacterGender             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EKSCharacterGender AKSCharacter::GetGender()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetGender");

	AKSCharacter_GetGender_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.GetFXCurveComponentByFXID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FName*                  InFXID                         (Parm, ZeroConstructor, IsPlainOldData)
// class UKSFXCurveComponent*     ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UKSFXCurveComponent* AKSCharacter::GetFXCurveComponentByFXID(struct FName* InFXID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetFXCurveComponentByFXID");

	AKSCharacter_GetFXCurveComponentByFXID_Params params;
	params.InFXID = InFXID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.GetFlashBangEffectDurationFromDistance
// (Event, Public, BlueprintEvent)
// Parameters:
// float*                         Distance                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSCharacter::GetFlashBangEffectDurationFromDistance(float* Distance)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetFlashBangEffectDurationFromDistance");

	AKSCharacter_GetFlashBangEffectDurationFromDistance_Params params;
	params.Distance = Distance;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.GetFieldOfViewFromMods
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          OutFov                         (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSCharacter::GetFieldOfViewFromMods(float* OutFov)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetFieldOfViewFromMods");

	AKSCharacter_GetFieldOfViewFromMods_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutFov != nullptr)
		*OutFov = params.OutFov;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.GetEquipmentManagerComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UKSEquipmentManagerComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UKSEquipmentManagerComponent* AKSCharacter::GetEquipmentManagerComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetEquipmentManagerComponent");

	AKSCharacter_GetEquipmentManagerComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.GetEquipmentAtEquipPoint
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag*           EquipPoint                     (ConstParm, Parm, OutParm, ReferenceParm)
// class AKSEquipment*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AKSEquipment* AKSCharacter::GetEquipmentAtEquipPoint(struct FGameplayTag* EquipPoint)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetEquipmentAtEquipPoint");

	AKSCharacter_GetEquipmentAtEquipPoint_Params params;
	params.EquipPoint = EquipPoint;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.GetDownedTransitionMontage
// (Event, Public, HasOutParms, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimMontage*            OutAnimMontage                 (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::GetDownedTransitionMontage(class UAnimMontage** OutAnimMontage)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetDownedTransitionMontage");

	AKSCharacter_GetDownedTransitionMontage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutAnimMontage != nullptr)
		*OutAnimMontage = params.OutAnimMontage;
}


// Function Killstreak.KSCharacter.GetDownedImmuneTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSCharacter::GetDownedImmuneTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetDownedImmuneTime");

	AKSCharacter_GetDownedImmuneTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.GetDamageModifiers
// (Final, Native, Protected, HasOutParms)
// Parameters:
// class AController**            EventInstigator                (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 DamageTypeClass                (Parm, ZeroConstructor, IsPlainOldData)
// float                          OutDefenseModifier             (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// float                          OutOffenseModifier             (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSCharacter::GetDamageModifiers(class AController** EventInstigator, class UClass** DamageTypeClass, float* OutDefenseModifier, float* OutOffenseModifier)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetDamageModifiers");

	AKSCharacter_GetDamageModifiers_Params params;
	params.EventInstigator = EventInstigator;
	params.DamageTypeClass = DamageTypeClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutDefenseModifier != nullptr)
		*OutDefenseModifier = params.OutDefenseModifier;
	if (OutOffenseModifier != nullptr)
		*OutOffenseModifier = params.OutOffenseModifier;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.GetCurrentVehicleSeat
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UKSVehicleSeatComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UKSVehicleSeatComponent* AKSCharacter::GetCurrentVehicleSeat()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetCurrentVehicleSeat");

	AKSCharacter_GetCurrentVehicleSeat_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.GetCurrentVehicle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AKSVehicle*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AKSVehicle* AKSCharacter::GetCurrentVehicle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetCurrentVehicle");

	AKSCharacter_GetCurrentVehicle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.GetCurrentReviveDuration
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          Duration                       (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// float                          RemainingTime                  (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::GetCurrentReviveDuration(float* Duration, float* RemainingTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetCurrentReviveDuration");

	AKSCharacter_GetCurrentReviveDuration_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Duration != nullptr)
		*Duration = params.Duration;
	if (RemainingTime != nullptr)
		*RemainingTime = params.RemainingTime;
}


// Function Killstreak.KSCharacter.GetCurrentCharacterEmotionAsName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FName                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FName AKSCharacter::GetCurrentCharacterEmotionAsName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetCurrentCharacterEmotionAsName");

	AKSCharacter_GetCurrentCharacterEmotionAsName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.GetCurrentCameraShoulder
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECameraShoulder                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ECameraShoulder AKSCharacter::GetCurrentCameraShoulder()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetCurrentCameraShoulder");

	AKSCharacter_GetCurrentCameraShoulder_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.GetCurrentAbilityIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AKSCharacter::GetCurrentAbilityIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetCurrentAbilityIndex");

	AKSCharacter_GetCurrentAbilityIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.GetCompatibleEquipPoints
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UKSWeaponAsset**         InWeaponAsset                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FGameplayTagContainer   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FGameplayTagContainer AKSCharacter::GetCompatibleEquipPoints(class UKSWeaponAsset** InWeaponAsset)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetCompatibleEquipPoints");

	AKSCharacter_GetCompatibleEquipPoints_Params params;
	params.InWeaponAsset = InWeaponAsset;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.GetCharacterAkComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UKSAkComponent*          ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UKSAkComponent* AKSCharacter::GetCharacterAkComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetCharacterAkComponent");

	AKSCharacter_GetCharacterAkComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.GetCarriedObject
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class UKSCarriedInterface> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TScriptInterface<class UKSCarriedInterface> AKSCharacter::GetCarriedObject()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetCarriedObject");

	AKSCharacter_GetCarriedObject_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.GetCameraShoulderSwapProgress
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSCharacter::GetCameraShoulderSwapProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetCameraShoulderSwapProgress");

	AKSCharacter_GetCameraShoulderSwapProgress_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.GetBodyApparelSkinObject
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UMultiSkinObject*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UMultiSkinObject* AKSCharacter::GetBodyApparelSkinObject()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetBodyApparelSkinObject");

	AKSCharacter_GetBodyApparelSkinObject_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.GetBehaviorState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECharacterBehaviorState        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ECharacterBehaviorState AKSCharacter::GetBehaviorState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetBehaviorState");

	AKSCharacter_GetBehaviorState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.GetBasePickupRange
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSCharacter::GetBasePickupRange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetBasePickupRange");

	AKSCharacter_GetBasePickupRange_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.GetAvailableEquipPoints
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTagContainer   OutEquipPoints                 (Parm, OutParm)

void AKSCharacter::GetAvailableEquipPoints(struct FGameplayTagContainer* OutEquipPoints)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetAvailableEquipPoints");

	AKSCharacter_GetAvailableEquipPoints_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutEquipPoints != nullptr)
		*OutEquipPoints = params.OutEquipPoints;
}


// Function Killstreak.KSCharacter.GetApparelSkinObjectByName
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FName*                  InSkinObjectName               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// class UMultiSkinObject*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UMultiSkinObject* AKSCharacter::GetApparelSkinObjectByName(struct FName* InSkinObjectName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetApparelSkinObjectByName");

	AKSCharacter_GetApparelSkinObjectByName_Params params;
	params.InSkinObjectName = InSkinObjectName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.GetAmmoCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EAmmoType*                     AmmoType                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AKSCharacter::GetAmmoCount(EAmmoType* AmmoType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetAmmoCount");

	AKSCharacter_GetAmmoCount_Params params;
	params.AmmoType = AmmoType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.GetAllEquippedWeapons
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AKSWeapon*>       OutWeapons                     (Parm, OutParm, ZeroConstructor)

void AKSCharacter::GetAllEquippedWeapons(TArray<class AKSWeapon*>* OutWeapons)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetAllEquippedWeapons");

	AKSCharacter_GetAllEquippedWeapons_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutWeapons != nullptr)
		*OutWeapons = params.OutWeapons;
}


// Function Killstreak.KSCharacter.GetActiveWeaponComponentAtIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int*                           Index                          (Parm, ZeroConstructor, IsPlainOldData)
// class UKSWeaponComponent*      ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UKSWeaponComponent* AKSCharacter::GetActiveWeaponComponentAtIndex(int* Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetActiveWeaponComponentAtIndex");

	AKSCharacter_GetActiveWeaponComponentAtIndex_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.GetActiveWeaponComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UKSWeaponComponent*      ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UKSWeaponComponent* AKSCharacter::GetActiveWeaponComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetActiveWeaponComponent");

	AKSCharacter_GetActiveWeaponComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.GetActiveWeapon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AKSWeapon*               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AKSWeapon* AKSCharacter::GetActiveWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetActiveWeapon");

	AKSCharacter_GetActiveWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.GetActiveTemporary
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AKSWeapon*               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AKSWeapon* AKSCharacter::GetActiveTemporary()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetActiveTemporary");

	AKSCharacter_GetActiveTemporary_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.GetActiveMods
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UKSPlayerMod*>    OutMods                        (Parm, OutParm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSCharacter::GetActiveMods(TArray<class UKSPlayerMod*>* OutMods)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetActiveMods");

	AKSCharacter_GetActiveMods_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutMods != nullptr)
		*OutMods = params.OutMods;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.GetActiveMelee
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AKSWeapon*               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AKSWeapon* AKSCharacter::GetActiveMelee()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetActiveMelee");

	AKSCharacter_GetActiveMelee_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.GetActiveMedPack
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AKSWeapon*               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AKSWeapon* AKSCharacter::GetActiveMedPack()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetActiveMedPack");

	AKSCharacter_GetActiveMedPack_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.GetActiveMainWeapon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AKSWeapon*               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AKSWeapon* AKSCharacter::GetActiveMainWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetActiveMainWeapon");

	AKSCharacter_GetActiveMainWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.GetActiveKSWeaponAnimInst
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int*                           Index                          (Parm, ZeroConstructor, IsPlainOldData)
// class UKSWeaponAnimInstance*   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UKSWeaponAnimInstance* AKSCharacter::GetActiveKSWeaponAnimInst(int* Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetActiveKSWeaponAnimInst");

	AKSCharacter_GetActiveKSWeaponAnimInst_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.GetActiveGrenade
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AKSWeapon*               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AKSWeapon* AKSCharacter::GetActiveGrenade()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetActiveGrenade");

	AKSCharacter_GetActiveGrenade_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.GetActiveGadgetPoints
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTagContainer   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FGameplayTagContainer AKSCharacter::GetActiveGadgetPoints()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetActiveGadgetPoints");

	AKSCharacter_GetActiveGadgetPoints_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.GetActiveEquipPoints
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTagContainer   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FGameplayTagContainer AKSCharacter::GetActiveEquipPoints()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetActiveEquipPoints");

	AKSCharacter_GetActiveEquipPoints_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.GetActiveCameraTag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FName                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FName AKSCharacter::GetActiveCameraTag()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetActiveCameraTag");

	AKSCharacter_GetActiveCameraTag_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.GetActiveCamera
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UCameraComponent*        ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UCameraComponent* AKSCharacter::GetActiveCamera()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetActiveCamera");

	AKSCharacter_GetActiveCamera_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.GetActiveAimedWeapon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AKSWeapon_Aimed*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AKSWeapon_Aimed* AKSCharacter::GetActiveAimedWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetActiveAimedWeapon");

	AKSCharacter_GetActiveAimedWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.GetActivatableMods
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UKSModInst_Activated*> OutMods                        (Parm, OutParm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSCharacter::GetActivatableMods(TArray<class UKSModInst_Activated*>* OutMods)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetActivatableMods");

	AKSCharacter_GetActivatableMods_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutMods != nullptr)
		*OutMods = params.OutMods;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.GetAbilityMovementMod
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UKSModInst_Activated*    ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UKSModInst_Activated* AKSCharacter::GetAbilityMovementMod()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetAbilityMovementMod");

	AKSCharacter_GetAbilityMovementMod_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.GamepadToggleSprint
// (Final, Native, Protected)

void AKSCharacter::GamepadToggleSprint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GamepadToggleSprint");

	AKSCharacter_GamepadToggleSprint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GamepadSwapReleased
// (Final, Native, Public)

void AKSCharacter::GamepadSwapReleased()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GamepadSwapReleased");

	AKSCharacter_GamepadSwapReleased_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GamepadSwapPressed
// (Final, Native, Public)

void AKSCharacter::GamepadSwapPressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GamepadSwapPressed");

	AKSCharacter_GamepadSwapPressed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GamepadLookUp
// (Native, Protected)
// Parameters:
// float*                         Value                          (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::GamepadLookUp(float* Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GamepadLookUp");

	AKSCharacter_GamepadLookUp_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GamepadLookRight
// (Native, Protected)
// Parameters:
// float*                         Value                          (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::GamepadLookRight(float* Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GamepadLookRight");

	AKSCharacter_GamepadLookRight_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ForceToShoulder
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ECameraShoulder*               ForcedShoulder                 (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::ForceToShoulder(ECameraShoulder* ForcedShoulder)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ForceToShoulder");

	AKSCharacter_ForceToShoulder_Params params;
	params.ForcedShoulder = ForcedShoulder;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ForceMainCameraBoomUpdate
// (Final, Native, Public, BlueprintCallable)

void AKSCharacter::ForceMainCameraBoomUpdate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ForceMainCameraBoomUpdate");

	AKSCharacter_ForceMainCameraBoomUpdate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.FinishHacking
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AKSCharacter::FinishHacking()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.FinishHacking");

	AKSCharacter_FinishHacking_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.FindTierOfEquipPoint
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag*           EquipPoint                     (ConstParm, Parm)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AKSCharacter::FindTierOfEquipPoint(struct FGameplayTag* EquipPoint)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.FindTierOfEquipPoint");

	AKSCharacter_FindTierOfEquipPoint_Params params;
	params.EquipPoint = EquipPoint;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.FindAllTiersOfEquipPoint
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag*           EquipPoint                     (ConstParm, Parm)
// TArray<int>                    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<int> AKSCharacter::FindAllTiersOfEquipPoint(struct FGameplayTag* EquipPoint)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.FindAllTiersOfEquipPoint");

	AKSCharacter_FindAllTiersOfEquipPoint_Params params;
	params.EquipPoint = EquipPoint;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.ExtinguishFire
// (Final, Native, Public, BlueprintCallable)

void AKSCharacter::ExtinguishFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ExtinguishFire");

	AKSCharacter_ExtinguishFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ExitVehiclePressed
// (Final, Native, Protected)

void AKSCharacter::ExitVehiclePressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ExitVehiclePressed");

	AKSCharacter_ExitVehiclePressed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.EventSetupCamerasForSpectator
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool*                          Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::EventSetupCamerasForSpectator(bool* Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.EventSetupCamerasForSpectator");

	AKSCharacter_EventSetupCamerasForSpectator_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.EvaluateCameraProximityFade
// (Final, Native, Protected)

void AKSCharacter::EvaluateCameraProximityFade()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.EvaluateCameraProximityFade");

	AKSCharacter_EvaluateCameraProximityFade_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.EndOutOfBounds
// (Final, Native, Protected)

void AKSCharacter::EndOutOfBounds()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.EndOutOfBounds");

	AKSCharacter_EndOutOfBounds_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.EndLockoutCamera
// (Final, Native, Public, BlueprintCallable)

void AKSCharacter::EndLockoutCamera()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.EndLockoutCamera");

	AKSCharacter_EndLockoutCamera_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.DrownDamageTick
// (Final, Native, Protected)

void AKSCharacter::DrownDamageTick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.DrownDamageTick");

	AKSCharacter_DrownDamageTick_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.DropButtonReleased
// (Final, Native, Public)

void AKSCharacter::DropButtonReleased()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.DropButtonReleased");

	AKSCharacter_DropButtonReleased_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.DropButtonPressed
// (Final, Native, Public)

void AKSCharacter::DropButtonPressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.DropButtonPressed");

	AKSCharacter_DropButtonPressed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.DropActiveWeapon
// (Final, Native, Public, BlueprintCallable)

void AKSCharacter::DropActiveWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.DropActiveWeapon");

	AKSCharacter_DropActiveWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.DropActiveGrenade
// (Final, Native, Public, BlueprintCallable)

void AKSCharacter::DropActiveGrenade()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.DropActiveGrenade");

	AKSCharacter_DropActiveGrenade_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.DownPlayer
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AController**            EventInstigator                (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 DamageType                     (Parm, ZeroConstructor, IsPlainOldData)
// EHitLocationType*              HitLocationType                (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)
// float*                         DamageDealt                    (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::DownPlayer(class AController** EventInstigator, class UClass** DamageType, EHitLocationType* HitLocationType, class AActor** DamageCauser, float* DamageDealt)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.DownPlayer");

	AKSCharacter_DownPlayer_Params params;
	params.EventInstigator = EventInstigator;
	params.DamageType = DamageType;
	params.HitLocationType = HitLocationType;
	params.DamageCauser = DamageCauser;
	params.DamageDealt = DamageDealt;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.DoSetOnFire
// (Event, Public, BlueprintEvent)

void AKSCharacter::DoSetOnFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.DoSetOnFire");

	AKSCharacter_DoSetOnFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.DoExtinguishFire
// (Event, Public, BlueprintEvent)

void AKSCharacter::DoExtinguishFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.DoExtinguishFire");

	AKSCharacter_DoExtinguishFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.DoesTransitionSupportFocalPoint
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// struct FName*                  ActiveCamera                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FName*                  PendingCamera                  (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSCharacter::DoesTransitionSupportFocalPoint(struct FName* ActiveCamera, struct FName* PendingCamera)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.DoesTransitionSupportFocalPoint");

	AKSCharacter_DoesTransitionSupportFocalPoint_Params params;
	params.ActiveCamera = ActiveCamera;
	params.PendingCamera = PendingCamera;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.DetachViewTargetOnlyBPComponents
// (Event, Public, BlueprintEvent)

void AKSCharacter::DetachViewTargetOnlyBPComponents()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.DetachViewTargetOnlyBPComponents");

	AKSCharacter_DetachViewTargetOnlyBPComponents_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.DestructibleSpeedGateOverlappedEvent
// (Event, Protected, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector*                BreakingLocation               (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                BreakingDirection              (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                BreakingNormal                 (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::DestructibleSpeedGateOverlappedEvent(struct FVector* BreakingLocation, struct FVector* BreakingDirection, struct FVector* BreakingNormal)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.DestructibleSpeedGateOverlappedEvent");

	AKSCharacter_DestructibleSpeedGateOverlappedEvent_Params params;
	params.BreakingLocation = BreakingLocation;
	params.BreakingDirection = BreakingDirection;
	params.BreakingNormal = BreakingNormal;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.DamageRecordReset
// (Final, Native, Private)

void AKSCharacter::DamageRecordReset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.DamageRecordReset");

	AKSCharacter_DamageRecordReset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.CreditEliminationAssist
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APlayerState**           Assistant                      (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::CreditEliminationAssist(class APlayerState** Assistant)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.CreditEliminationAssist");

	AKSCharacter_CreditEliminationAssist_Params params;
	params.Assistant = Assistant;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.CreditDownAssist
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APlayerState**           Assistant                      (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::CreditDownAssist(class APlayerState** Assistant)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.CreditDownAssist");

	AKSCharacter_CreditDownAssist_Params params;
	params.Assistant = Assistant;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ContextualPingReleased
// (Final, Native, Protected)

void AKSCharacter::ContextualPingReleased()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ContextualPingReleased");

	AKSCharacter_ContextualPingReleased_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ContextualPingPressed
// (Final, Native, Protected)

void AKSCharacter::ContextualPingPressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ContextualPingPressed");

	AKSCharacter_ContextualPingPressed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ContextualButtonReleased
// (Final, Native, Public)

void AKSCharacter::ContextualButtonReleased()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ContextualButtonReleased");

	AKSCharacter_ContextualButtonReleased_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ContextualButtonPressed
// (Final, Native, Public)

void AKSCharacter::ContextualButtonPressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ContextualButtonPressed");

	AKSCharacter_ContextualButtonPressed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.CompleteNonCharacterRevive
// (Final, Native, Protected)

void AKSCharacter::CompleteNonCharacterRevive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.CompleteNonCharacterRevive");

	AKSCharacter_CompleteNonCharacterRevive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.CloneCharacterMesh
// (Native, Public, BlueprintCallable)
// Parameters:
// class USkeletalMeshComponent** ClonedMesh                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void AKSCharacter::CloneCharacterMesh(class USkeletalMeshComponent** ClonedMesh)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.CloneCharacterMesh");

	AKSCharacter_CloneCharacterMesh_Params params;
	params.ClonedMesh = ClonedMesh;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ClientSwapTo
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class AKSWeapon**              InWeapon                       (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::ClientSwapTo(class AKSWeapon** InWeapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ClientSwapTo");

	AKSCharacter_ClientSwapTo_Params params;
	params.InWeapon = InWeapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ClientSwapFrom
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class AKSWeapon**              InWeapon                       (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::ClientSwapFrom(class AKSWeapon** InWeapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ClientSwapFrom");

	AKSCharacter_ClientSwapFrom_Params params;
	params.InWeapon = InWeapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ClientStopInteractAcknowledge
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// unsigned char*                 InInteractRequestId            (Parm, ZeroConstructor, IsPlainOldData)
// EKSInteractionResult*          Result                         (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::ClientStopInteractAcknowledge(unsigned char* InInteractRequestId, EKSInteractionResult* Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ClientStopInteractAcknowledge");

	AKSCharacter_ClientStopInteractAcknowledge_Params params;
	params.InInteractRequestId = InInteractRequestId;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ClientNotifyStuck
// (Net, Native, Event, NetMulticast, Public)

void AKSCharacter::ClientNotifyStuck()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ClientNotifyStuck");

	AKSCharacter_ClientNotifyStuck_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ClientInteractAcknowledge
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// unsigned char*                 InInteractRequestId            (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bFailed                        (Parm, ZeroConstructor, IsPlainOldData)
// float*                         InteractDuration               (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bRequiresManualInterrupt       (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::ClientInteractAcknowledge(unsigned char* InInteractRequestId, bool* bFailed, float* InteractDuration, bool* bRequiresManualInterrupt)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ClientInteractAcknowledge");

	AKSCharacter_ClientInteractAcknowledge_Params params;
	params.InInteractRequestId = InInteractRequestId;
	params.bFailed = bFailed;
	params.InteractDuration = InteractDuration;
	params.bRequiresManualInterrupt = bRequiresManualInterrupt;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ClientBroadcastModEvent
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// struct FName*                  ModEvent                       (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::ClientBroadcastModEvent(struct FName* ModEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ClientBroadcastModEvent");

	AKSCharacter_ClientBroadcastModEvent_Params params;
	params.ModEvent = ModEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ClearMaxHealthBonus
// (Final, Native, Public, BlueprintCallable)

void AKSCharacter::ClearMaxHealthBonus()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ClearMaxHealthBonus");

	AKSCharacter_ClearMaxHealthBonus_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ClearActorTargetingMeForRevive
// (Final, Native, Public, BlueprintCallable)

void AKSCharacter::ClearActorTargetingMeForRevive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ClearActorTargetingMeForRevive");

	AKSCharacter_ClearActorTargetingMeForRevive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ChangeShoulderCamera
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ECameraShoulder*               InShoulder                     (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::ChangeShoulderCamera(ECameraShoulder* InShoulder)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ChangeShoulderCamera");

	AKSCharacter_ChangeShoulderCamera_Params params;
	params.InShoulder = InShoulder;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.CanInteractWithTest
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor**                 InInteractionTarget            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           bPress                         (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           bHold                          (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSCharacter::CanInteractWithTest(class AActor** InInteractionTarget, bool* bPress, bool* bHold)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.CanInteractWithTest");

	AKSCharacter_CanInteractWithTest_Params params;
	params.InInteractionTarget = InInteractionTarget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (bPress != nullptr)
		*bPress = params.bPress;
	if (bHold != nullptr)
		*bHold = params.bHold;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.CanInteractWith
// (Final, Native, Public)
// Parameters:
// class AActor**                 InInteractionTarget            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSCharacter::CanInteractWith(class AActor** InInteractionTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.CanInteractWith");

	AKSCharacter_CanInteractWith_Params params;
	params.InInteractionTarget = InInteractionTarget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.CanFireRightNow
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EKSAbilityUsageFailureType     OutAbilityFailureType          (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool*                          bAltFire                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSCharacter::CanFireRightNow(bool* bAltFire, EKSAbilityUsageFailureType* OutAbilityFailureType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.CanFireRightNow");

	AKSCharacter_CanFireRightNow_Params params;
	params.bAltFire = bAltFire;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutAbilityFailureType != nullptr)
		*OutAbilityFailureType = params.OutAbilityFailureType;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.CancelBleed
// (Final, Native, Public, BlueprintCallable)

void AKSCharacter::CancelBleed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.CancelBleed");

	AKSCharacter_CancelBleed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.CanCarryDownedAllies
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSCharacter::CanCarryDownedAllies()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.CanCarryDownedAllies");

	AKSCharacter_CanCarryDownedAllies_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.CanBeRevivedBy
// (Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AKSCharacter**           Other                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bIgnoreOverlap                 (Parm, ZeroConstructor, IsPlainOldData)
// class AKSWeapon**              IgnoredWeapon                  (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSCharacter::CanBeRevivedBy(class AKSCharacter** Other, bool* bIgnoreOverlap, class AKSWeapon** IgnoredWeapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.CanBeRevivedBy");

	AKSCharacter_CanBeRevivedBy_Params params;
	params.Other = Other;
	params.bIgnoreOverlap = bIgnoreOverlap;
	params.IgnoredWeapon = IgnoredWeapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.CanAimOverShoulderNow
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSCharacter::CanAimOverShoulderNow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.CanAimOverShoulderNow");

	AKSCharacter_CanAimOverShoulderNow_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.CanAimDownSightsNow
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSCharacter::CanAimDownSightsNow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.CanAimDownSightsNow");

	AKSCharacter_CanAimDownSightsNow_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.CanAimAlternateNow
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSCharacter::CanAimAlternateNow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.CanAimAlternateNow");

	AKSCharacter_CanAimAlternateNow_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.CanActiveWeaponCanToggleOutOfAimDownSightsNow
// (Final, Native, Protected, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSCharacter::CanActiveWeaponCanToggleOutOfAimDownSightsNow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.CanActiveWeaponCanToggleOutOfAimDownSightsNow");

	AKSCharacter_CanActiveWeaponCanToggleOutOfAimDownSightsNow_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.CanActiveWeaponCanToggleIntoAimDownSightsNow
// (Final, Native, Protected, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSCharacter::CanActiveWeaponCanToggleIntoAimDownSightsNow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.CanActiveWeaponCanToggleIntoAimDownSightsNow");

	AKSCharacter_CanActiveWeaponCanToggleIntoAimDownSightsNow_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.CacheLatestHit
// (Native, Event, Protected, HasDefaults, BlueprintEvent)
// Parameters:
// float*                         Damage                         (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 DamageTypeClass                (Parm, ZeroConstructor, IsPlainOldData)
// float*                         DamageImpulse                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                RelativeImpactLocation         (Parm, ZeroConstructor, IsPlainOldData)
// struct FName*                  BoneName                       (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::CacheLatestHit(float* Damage, class UClass** DamageTypeClass, float* DamageImpulse, struct FVector* RelativeImpactLocation, struct FName* BoneName, class AActor** DamageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.CacheLatestHit");

	AKSCharacter_CacheLatestHit_Params params;
	params.Damage = Damage;
	params.DamageTypeClass = DamageTypeClass;
	params.DamageImpulse = DamageImpulse;
	params.RelativeImpactLocation = RelativeImpactLocation;
	params.BoneName = BoneName;
	params.DamageCauser = DamageCauser;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.BroadcastWeaponComponentStateChange
// (Net, Native, Event, NetMulticast, Public)
// Parameters:
// uint32_t*                      BroadcastId                    (Parm, ZeroConstructor, IsPlainOldData)
// uint16_t*                      nEquipmentId                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FKSWeaponDataUpdateContainer* NewState                       (Parm)

void AKSCharacter::BroadcastWeaponComponentStateChange(uint32_t* BroadcastId, uint16_t* nEquipmentId, struct FKSWeaponDataUpdateContainer* NewState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.BroadcastWeaponComponentStateChange");

	AKSCharacter_BroadcastWeaponComponentStateChange_Params params;
	params.BroadcastId = BroadcastId;
	params.nEquipmentId = nEquipmentId;
	params.NewState = NewState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.BroadcastWeaponComponentPostReload
// (Net, Native, Event, NetMulticast, Public)
// Parameters:
// uint32_t*                      BroadcastId                    (Parm, ZeroConstructor, IsPlainOldData)
// uint16_t*                      nEquipmentId                   (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char*                 AmmoInClip                     (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::BroadcastWeaponComponentPostReload(uint32_t* BroadcastId, uint16_t* nEquipmentId, unsigned char* AmmoInClip)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.BroadcastWeaponComponentPostReload");

	AKSCharacter_BroadcastWeaponComponentPostReload_Params params;
	params.BroadcastId = BroadcastId;
	params.nEquipmentId = nEquipmentId;
	params.AmmoInClip = AmmoInClip;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.BroadcastWeaponComponentFiredFull
// (Net, Native, Event, NetMulticast, Public)
// Parameters:
// uint32_t*                      BroadcastId                    (Parm, ZeroConstructor, IsPlainOldData)
// uint16_t*                      nEquipmentId                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FFullFireRepData*       Data                           (ConstParm, Parm, ReferenceParm)

void AKSCharacter::BroadcastWeaponComponentFiredFull(uint32_t* BroadcastId, uint16_t* nEquipmentId, struct FFullFireRepData* Data)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.BroadcastWeaponComponentFiredFull");

	AKSCharacter_BroadcastWeaponComponentFiredFull_Params params;
	params.BroadcastId = BroadcastId;
	params.nEquipmentId = nEquipmentId;
	params.Data = Data;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.BroadcastWeaponComponentFiredAmmo
// (Net, Native, Event, NetMulticast, Public)
// Parameters:
// uint32_t*                      BroadcastId                    (Parm, ZeroConstructor, IsPlainOldData)
// uint16_t*                      nEquipmentId                   (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char*                 AmmoInClip                     (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::BroadcastWeaponComponentFiredAmmo(uint32_t* BroadcastId, uint16_t* nEquipmentId, unsigned char* AmmoInClip)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.BroadcastWeaponComponentFiredAmmo");

	AKSCharacter_BroadcastWeaponComponentFiredAmmo_Params params;
	params.BroadcastId = BroadcastId;
	params.nEquipmentId = nEquipmentId;
	params.AmmoInClip = AmmoInClip;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.BroadcastWeaponComponentFiredAimAndAmmo
// (Net, Native, Event, NetMulticast, Public)
// Parameters:
// uint32_t*                      BroadcastId                    (Parm, ZeroConstructor, IsPlainOldData)
// uint16_t*                      nEquipmentId                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FAimData*               Aim                            (ConstParm, Parm, ReferenceParm)
// unsigned char*                 AmmoInClip                     (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::BroadcastWeaponComponentFiredAimAndAmmo(uint32_t* BroadcastId, uint16_t* nEquipmentId, struct FAimData* Aim, unsigned char* AmmoInClip)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.BroadcastWeaponComponentFiredAimAndAmmo");

	AKSCharacter_BroadcastWeaponComponentFiredAimAndAmmo_Params params;
	params.BroadcastId = BroadcastId;
	params.nEquipmentId = nEquipmentId;
	params.Aim = Aim;
	params.AmmoInClip = AmmoInClip;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.BroadcastWeaponComponentFired
// (Net, Native, Event, NetMulticast, Public)
// Parameters:
// uint32_t*                      BroadcastId                    (Parm, ZeroConstructor, IsPlainOldData)
// uint16_t*                      nEquipmentId                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FAimData*               Aim                            (ConstParm, Parm, ReferenceParm)

void AKSCharacter::BroadcastWeaponComponentFired(uint32_t* BroadcastId, uint16_t* nEquipmentId, struct FAimData* Aim)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.BroadcastWeaponComponentFired");

	AKSCharacter_BroadcastWeaponComponentFired_Params params;
	params.BroadcastId = BroadcastId;
	params.nEquipmentId = nEquipmentId;
	params.Aim = Aim;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.BroadcastWeaponComponentEmptyFire
// (Net, Native, Event, NetMulticast, Public)
// Parameters:
// uint32_t*                      BroadcastId                    (Parm, ZeroConstructor, IsPlainOldData)
// uint16_t*                      nEquipmentId                   (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::BroadcastWeaponComponentEmptyFire(uint32_t* BroadcastId, uint16_t* nEquipmentId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.BroadcastWeaponComponentEmptyFire");

	AKSCharacter_BroadcastWeaponComponentEmptyFire_Params params;
	params.BroadcastId = BroadcastId;
	params.nEquipmentId = nEquipmentId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.BroadcastWeaponComponentAmmoChange
// (Net, Native, Event, NetMulticast, Public)
// Parameters:
// uint32_t*                      BroadcastId                    (Parm, ZeroConstructor, IsPlainOldData)
// uint16_t*                      nEquipmentId                   (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char*                 AmmoInClip                     (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::BroadcastWeaponComponentAmmoChange(uint32_t* BroadcastId, uint16_t* nEquipmentId, unsigned char* AmmoInClip)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.BroadcastWeaponComponentAmmoChange");

	AKSCharacter_BroadcastWeaponComponentAmmoChange_Params params;
	params.BroadcastId = BroadcastId;
	params.nEquipmentId = nEquipmentId;
	params.AmmoInClip = AmmoInClip;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.BroadcastTakeRadialDamage
// (Net, Native, Event, NetMulticast, Protected)
// Parameters:
// struct FDamageEffect*          Effect                         (ConstParm, Parm, ReferenceParm)

void AKSCharacter::BroadcastTakeRadialDamage(struct FDamageEffect* Effect)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.BroadcastTakeRadialDamage");

	AKSCharacter_BroadcastTakeRadialDamage_Params params;
	params.Effect = Effect;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.BroadcastTakePointDamage
// (Net, Native, Event, NetMulticast, Protected)
// Parameters:
// struct FDamageEffect*          Effect                         (Parm)

void AKSCharacter::BroadcastTakePointDamage(struct FDamageEffect* Effect)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.BroadcastTakePointDamage");

	AKSCharacter_BroadcastTakePointDamage_Params params;
	params.Effect = Effect;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.BroadcastSpecialAmmoEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EAmmoType*                     AmmoType                       (Parm, ZeroConstructor, IsPlainOldData)
// int*                           AmmoDelta                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FName*                  EventName                      (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::BroadcastSpecialAmmoEvent(EAmmoType* AmmoType, int* AmmoDelta, struct FName* EventName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.BroadcastSpecialAmmoEvent");

	AKSCharacter_BroadcastSpecialAmmoEvent_Params params;
	params.AmmoType = AmmoType;
	params.AmmoDelta = AmmoDelta;
	params.EventName = EventName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.BroadcastSkydiveSkipped
// (Net, Native, Event, NetMulticast, Public)

void AKSCharacter::BroadcastSkydiveSkipped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.BroadcastSkydiveSkipped");

	AKSCharacter_BroadcastSkydiveSkipped_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.BroadcastReviveStart
// (Net, Native, Event, NetMulticast, Protected)
// Parameters:
// class AKSCharacter**           Reviver                        (Parm, ZeroConstructor, IsPlainOldData)
// float*                         ReviveTime                     (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          Remote                         (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::BroadcastReviveStart(class AKSCharacter** Reviver, float* ReviveTime, bool* Remote)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.BroadcastReviveStart");

	AKSCharacter_BroadcastReviveStart_Params params;
	params.Reviver = Reviver;
	params.ReviveTime = ReviveTime;
	params.Remote = Remote;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.BroadcastReviveInterrupt
// (Net, Native, Event, NetMulticast, Protected)
// Parameters:
// class AKSCharacter**           Reviver                        (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::BroadcastReviveInterrupt(class AKSCharacter** Reviver)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.BroadcastReviveInterrupt");

	AKSCharacter_BroadcastReviveInterrupt_Params params;
	params.Reviver = Reviver;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.BroadcastReviveComplete
// (Net, Native, Event, NetMulticast, Protected)
// Parameters:
// class AKSCharacter**           Reviver                        (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::BroadcastReviveComplete(class AKSCharacter** Reviver)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.BroadcastReviveComplete");

	AKSCharacter_BroadcastReviveComplete_Params params;
	params.Reviver = Reviver;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.BroadcastReliableWeaponComponentStateChange
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// uint32_t*                      BroadcastId                    (Parm, ZeroConstructor, IsPlainOldData)
// uint16_t*                      nEquipmentId                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FKSWeaponDataUpdateContainer* NewState                       (Parm)

void AKSCharacter::BroadcastReliableWeaponComponentStateChange(uint32_t* BroadcastId, uint16_t* nEquipmentId, struct FKSWeaponDataUpdateContainer* NewState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.BroadcastReliableWeaponComponentStateChange");

	AKSCharacter_BroadcastReliableWeaponComponentStateChange_Params params;
	params.BroadcastId = BroadcastId;
	params.nEquipmentId = nEquipmentId;
	params.NewState = NewState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.BroadcastReliableWeaponComponentPostReload
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// uint32_t*                      BroadcastId                    (Parm, ZeroConstructor, IsPlainOldData)
// uint16_t*                      nEquipmentId                   (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char*                 AmmoInClip                     (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::BroadcastReliableWeaponComponentPostReload(uint32_t* BroadcastId, uint16_t* nEquipmentId, unsigned char* AmmoInClip)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.BroadcastReliableWeaponComponentPostReload");

	AKSCharacter_BroadcastReliableWeaponComponentPostReload_Params params;
	params.BroadcastId = BroadcastId;
	params.nEquipmentId = nEquipmentId;
	params.AmmoInClip = AmmoInClip;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.BroadcastReliableWeaponComponentFiredFull
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// uint32_t*                      BroadcastId                    (Parm, ZeroConstructor, IsPlainOldData)
// uint16_t*                      nEquipmentId                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FFullFireRepData*       Data                           (ConstParm, Parm, ReferenceParm)

void AKSCharacter::BroadcastReliableWeaponComponentFiredFull(uint32_t* BroadcastId, uint16_t* nEquipmentId, struct FFullFireRepData* Data)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.BroadcastReliableWeaponComponentFiredFull");

	AKSCharacter_BroadcastReliableWeaponComponentFiredFull_Params params;
	params.BroadcastId = BroadcastId;
	params.nEquipmentId = nEquipmentId;
	params.Data = Data;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.BroadcastReliableWeaponComponentFiredAmmo
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// uint32_t*                      BroadcastId                    (Parm, ZeroConstructor, IsPlainOldData)
// uint16_t*                      nEquipmentId                   (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char*                 AmmoInClip                     (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::BroadcastReliableWeaponComponentFiredAmmo(uint32_t* BroadcastId, uint16_t* nEquipmentId, unsigned char* AmmoInClip)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.BroadcastReliableWeaponComponentFiredAmmo");

	AKSCharacter_BroadcastReliableWeaponComponentFiredAmmo_Params params;
	params.BroadcastId = BroadcastId;
	params.nEquipmentId = nEquipmentId;
	params.AmmoInClip = AmmoInClip;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.BroadcastReliableWeaponComponentFiredAimAndAmmo
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// uint32_t*                      BroadcastId                    (Parm, ZeroConstructor, IsPlainOldData)
// uint16_t*                      nEquipmentId                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FAimData*               Aim                            (ConstParm, Parm, ReferenceParm)
// unsigned char*                 AmmoInClip                     (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::BroadcastReliableWeaponComponentFiredAimAndAmmo(uint32_t* BroadcastId, uint16_t* nEquipmentId, struct FAimData* Aim, unsigned char* AmmoInClip)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.BroadcastReliableWeaponComponentFiredAimAndAmmo");

	AKSCharacter_BroadcastReliableWeaponComponentFiredAimAndAmmo_Params params;
	params.BroadcastId = BroadcastId;
	params.nEquipmentId = nEquipmentId;
	params.Aim = Aim;
	params.AmmoInClip = AmmoInClip;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.BroadcastReliableWeaponComponentFired
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// uint32_t*                      BroadcastId                    (Parm, ZeroConstructor, IsPlainOldData)
// uint16_t*                      nEquipmentId                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FAimData*               Aim                            (ConstParm, Parm, ReferenceParm)

void AKSCharacter::BroadcastReliableWeaponComponentFired(uint32_t* BroadcastId, uint16_t* nEquipmentId, struct FAimData* Aim)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.BroadcastReliableWeaponComponentFired");

	AKSCharacter_BroadcastReliableWeaponComponentFired_Params params;
	params.BroadcastId = BroadcastId;
	params.nEquipmentId = nEquipmentId;
	params.Aim = Aim;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.BroadcastReliableWeaponComponentEmptyFire
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// uint32_t*                      BroadcastId                    (Parm, ZeroConstructor, IsPlainOldData)
// uint16_t*                      nEquipmentId                   (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::BroadcastReliableWeaponComponentEmptyFire(uint32_t* BroadcastId, uint16_t* nEquipmentId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.BroadcastReliableWeaponComponentEmptyFire");

	AKSCharacter_BroadcastReliableWeaponComponentEmptyFire_Params params;
	params.BroadcastId = BroadcastId;
	params.nEquipmentId = nEquipmentId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.BroadcastReliableWeaponComponentAmmoChange
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// uint32_t*                      BroadcastId                    (Parm, ZeroConstructor, IsPlainOldData)
// uint16_t*                      nEquipmentId                   (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char*                 AmmoInClip                     (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::BroadcastReliableWeaponComponentAmmoChange(uint32_t* BroadcastId, uint16_t* nEquipmentId, unsigned char* AmmoInClip)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.BroadcastReliableWeaponComponentAmmoChange");

	AKSCharacter_BroadcastReliableWeaponComponentAmmoChange_Params params;
	params.BroadcastId = BroadcastId;
	params.nEquipmentId = nEquipmentId;
	params.AmmoInClip = AmmoInClip;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.BroadcastOnDamageReduced
// (Net, Native, Event, NetMulticast, Public)

void AKSCharacter::BroadcastOnDamageReduced()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.BroadcastOnDamageReduced");

	AKSCharacter_BroadcastOnDamageReduced_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.BroadcastOnDamageImmune
// (Net, Native, Event, NetMulticast, Public)

void AKSCharacter::BroadcastOnDamageImmune()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.BroadcastOnDamageImmune");

	AKSCharacter_BroadcastOnDamageImmune_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.BroadcastModEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FName*                  ModEvent                       (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::BroadcastModEvent(struct FName* ModEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.BroadcastModEvent");

	AKSCharacter_BroadcastModEvent_Params params;
	params.ModEvent = ModEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.BroadcastGrenadeExplodeInHand
// (Net, Native, Event, NetMulticast, Public)
// Parameters:
// class UKSWeaponAsset_Grenade** pGrenadeWeaponAsset            (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::BroadcastGrenadeExplodeInHand(class UKSWeaponAsset_Grenade** pGrenadeWeaponAsset)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.BroadcastGrenadeExplodeInHand");

	AKSCharacter_BroadcastGrenadeExplodeInHand_Params params;
	params.pGrenadeWeaponAsset = pGrenadeWeaponAsset;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.BlueprintHandleDeath
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSCharacter::BlueprintHandleDeath()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.BlueprintHandleDeath");

	AKSCharacter_BlueprintHandleDeath_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.BeginOutOfBounds
// (Final, Native, Protected)
// Parameters:
// float*                         WarningLength                  (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::BeginOutOfBounds(float* WarningLength)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.BeginOutOfBounds");

	AKSCharacter_BeginOutOfBounds_Params params;
	params.WarningLength = WarningLength;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.BeginNonCharacterRevive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AKSPlayerState**         ReviveInstigator               (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Duration                       (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::BeginNonCharacterRevive(class AKSPlayerState** ReviveInstigator, float* Duration)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.BeginNonCharacterRevive");

	AKSCharacter_BeginNonCharacterRevive_Params params;
	params.ReviveInstigator = ReviveInstigator;
	params.Duration = Duration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.BeginInstantRevive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AKSCharacter**           Reviver                        (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Duration                       (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          Guaranteed                     (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::BeginInstantRevive(class AKSCharacter** Reviver, float* Duration, bool* Guaranteed)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.BeginInstantRevive");

	AKSCharacter_BeginInstantRevive_Params params;
	params.Reviver = Reviver;
	params.Duration = Duration;
	params.Guaranteed = Guaranteed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.AttachViewTargetOnlyBPComponents
// (Event, Public, BlueprintEvent)

void AKSCharacter::AttachViewTargetOnlyBPComponents()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.AttachViewTargetOnlyBPComponents");

	AKSCharacter_AttachViewTargetOnlyBPComponents_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ApplyMaxHealthBonus
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float*                         Bonus                          (Parm, ZeroConstructor, IsPlainOldData)
// class AController**            EventInstigator                (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 EventCauser                    (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::ApplyMaxHealthBonus(float* Bonus, class AController** EventInstigator, class AActor** EventCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ApplyMaxHealthBonus");

	AKSCharacter_ApplyMaxHealthBonus_Params params;
	params.Bonus = Bonus;
	params.EventInstigator = EventInstigator;
	params.EventCauser = EventCauser;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ApplyLastHitImpulse
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                          UpdateTargetRotation           (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          AffectCapsule                  (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::ApplyLastHitImpulse(bool* UpdateTargetRotation, bool* AffectCapsule)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ApplyLastHitImpulse");

	AKSCharacter_ApplyLastHitImpulse_Params params;
	params.UpdateTargetRotation = UpdateTargetRotation;
	params.AffectCapsule = AffectCapsule;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ApplyFlinchFromPointDamage
// (Final, Native, Protected, HasDefaults)
// Parameters:
// float*                         Damage                         (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 DamageTypeClass                (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                RelativeImpactLocation         (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                RelativeImpactNormal           (Parm, ZeroConstructor, IsPlainOldData)
// struct FName*                  BoneName                       (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::ApplyFlinchFromPointDamage(float* Damage, class UClass** DamageTypeClass, struct FVector* RelativeImpactLocation, struct FVector* RelativeImpactNormal, struct FName* BoneName, class AActor** DamageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ApplyFlinchFromPointDamage");

	AKSCharacter_ApplyFlinchFromPointDamage_Params params;
	params.Damage = Damage;
	params.DamageTypeClass = DamageTypeClass;
	params.RelativeImpactLocation = RelativeImpactLocation;
	params.RelativeImpactNormal = RelativeImpactNormal;
	params.BoneName = BoneName;
	params.DamageCauser = DamageCauser;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ApplyCameraProximityFade
// (Final, Native, Protected)
// Parameters:
// float*                         Alpha                          (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::ApplyCameraProximityFade(float* Alpha)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ApplyCameraProximityFade");

	AKSCharacter_ApplyCameraProximityFade_Params params;
	params.Alpha = Alpha;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ApplyApparelAsset
// (Native, Public, BlueprintCallable)
// Parameters:
// class UKSApparelAsset**        ApparelAsset                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSCharacter::ApplyApparelAsset(class UKSApparelAsset** ApparelAsset)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ApplyApparelAsset");

	AKSCharacter_ApplyApparelAsset_Params params;
	params.ApparelAsset = ApparelAsset;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.AnyActivatableModsActive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSCharacter::AnyActivatableModsActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.AnyActivatableModsActive");

	AKSCharacter_AnyActivatableModsActive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.AnimAuditStop
// (Final, Exec, Native, Public)

void AKSCharacter::AnimAuditStop()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.AnimAuditStop");

	AKSCharacter_AnimAuditStop_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.AnimAuditStart
// (Final, Exec, Native, Public)

void AKSCharacter::AnimAuditStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.AnimAuditStart");

	AKSCharacter_AnimAuditStart_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.AnimAuditResume
// (Final, Native, Public, BlueprintCallable)

void AKSCharacter::AnimAuditResume()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.AnimAuditResume");

	AKSCharacter_AnimAuditResume_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.AnimAuditClear
// (Final, Exec, Native, Public)

void AKSCharacter::AnimAuditClear()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.AnimAuditClear");

	AKSCharacter_AnimAuditClear_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.AimDownSightsToggle
// (Final, Native, Public)

void AKSCharacter::AimDownSightsToggle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.AimDownSightsToggle");

	AKSCharacter_AimDownSightsToggle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.AimDownSightsReleased
// (Final, Native, Public)

void AKSCharacter::AimDownSightsReleased()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.AimDownSightsReleased");

	AKSCharacter_AimDownSightsReleased_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.AimDownSightsPressed
// (Final, Native, Public)

void AKSCharacter::AimDownSightsPressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.AimDownSightsPressed");

	AKSCharacter_AimDownSightsPressed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.AddParticleEffects
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<struct FKSParticleSystemAttachment>* ParticleSystemAttachments      (Parm, ZeroConstructor)
// TArray<class UParticleSystemComponent*> ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UParticleSystemComponent*> AKSCharacter::AddParticleEffects(TArray<struct FKSParticleSystemAttachment>* ParticleSystemAttachments)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.AddParticleEffects");

	AKSCharacter_AddParticleEffects_Params params;
	params.ParticleSystemAttachments = ParticleSystemAttachments;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.AddOutOfRangePickup
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor**                 OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// float*                         PickupDistance                 (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::AddOutOfRangePickup(class AActor** OtherActor, float* PickupDistance)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.AddOutOfRangePickup");

	AKSCharacter_AddOutOfRangePickup_Params params;
	params.OtherActor = OtherActor;
	params.PickupDistance = PickupDistance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.AddOrUpdateBlendable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TScriptInterface<class UBlendableInterface>* InBlendableObject              (Parm, ZeroConstructor, IsPlainOldData)
// float*                         InWeight                       (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::AddOrUpdateBlendable(TScriptInterface<class UBlendableInterface>* InBlendableObject, float* InWeight)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.AddOrUpdateBlendable");

	AKSCharacter_AddOrUpdateBlendable_Params params;
	params.InBlendableObject = InBlendableObject;
	params.InWeight = InWeight;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.AddActionRestrictionForDuration
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FKSActionRestrictor*    ActionRestrictor               (Parm)
// float*                         Duration                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AKSCharacter::AddActionRestrictionForDuration(struct FKSActionRestrictor* ActionRestrictor, float* Duration)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.AddActionRestrictionForDuration");

	AKSCharacter_AddActionRestrictionForDuration_Params params;
	params.ActionRestrictor = ActionRestrictor;
	params.Duration = Duration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.AddActionRestriction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FKSActionRestrictor*    ActionRestrictor               (Parm)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AKSCharacter::AddActionRestriction(struct FKSActionRestrictor* ActionRestrictor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.AddActionRestriction");

	AKSCharacter_AddActionRestriction_Params params;
	params.ActionRestrictor = ActionRestrictor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.ActivatableModAtIndexActive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int*                           AbilityIndex                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSCharacter::ActivatableModAtIndexActive(int* AbilityIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ActivatableModAtIndexActive");

	AKSCharacter_ActivatableModAtIndexActive_Params params;
	params.AbilityIndex = AbilityIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacter.AbortFireAllWeapons
// (Final, Native, Public, BlueprintCallable)

void AKSCharacter::AbortFireAllWeapons()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.AbortFireAllWeapons");

	AKSCharacter_AbortFireAllWeapons_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.AbilityChargeUpdated
// (Final, Native, Public)
// Parameters:
// class UKSPlayerMod_Activated** ChargingMod                    (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::AbilityChargeUpdated(class UKSPlayerMod_Activated** ChargingMod)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.AbilityChargeUpdated");

	AKSCharacter_AbilityChargeUpdated_Params params;
	params.ChargingMod = ChargingMod;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.AbilityActivated
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// int*                           AbilityIndex                   (Parm, ZeroConstructor, IsPlainOldData)

void AKSCharacter::AbilityActivated(int* AbilityIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.AbilityActivated");

	AKSCharacter_AbilityActivated_Params params;
	params.AbilityIndex = AbilityIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.UpdateTestCombatState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ECombatState*                  NewCombatState                 (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bBlockCooldown                 (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bForce                         (Parm, ZeroConstructor, IsPlainOldData)

void UKSCharacterAnimInst::UpdateTestCombatState(ECombatState* NewCombatState, bool* bBlockCooldown, bool* bForce)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.UpdateTestCombatState");

	UKSCharacterAnimInst_UpdateTestCombatState_Params params;
	params.NewCombatState = NewCombatState;
	params.bBlockCooldown = bBlockCooldown;
	params.bForce = bForce;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.UpdateCombatState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ECombatState*                  NewCombatState                 (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bBlockCooldown                 (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bForce                         (Parm, ZeroConstructor, IsPlainOldData)

void UKSCharacterAnimInst::UpdateCombatState(ECombatState* NewCombatState, bool* bBlockCooldown, bool* bForce)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.UpdateCombatState");

	UKSCharacterAnimInst_UpdateCombatState_Params params;
	params.NewCombatState = NewCombatState;
	params.bBlockCooldown = bBlockCooldown;
	params.bForce = bForce;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.UpdateCachedPivotLocation
// (Final, Native, Protected, BlueprintCallable)

void UKSCharacterAnimInst::UpdateCachedPivotLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.UpdateCachedPivotLocation");

	UKSCharacterAnimInst_UpdateCachedPivotLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.UnplantRightHand
// (Final, Native, Public, BlueprintCallable)

void UKSCharacterAnimInst::UnplantRightHand()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.UnplantRightHand");

	UKSCharacterAnimInst_UnplantRightHand_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.UnplantLeftHand
// (Final, Native, Public, BlueprintCallable)

void UKSCharacterAnimInst::UnplantLeftHand()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.UnplantLeftHand");

	UKSCharacterAnimInst_UnplantLeftHand_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.UnhideWeapon
// (Final, Native, Public, BlueprintCallable)

void UKSCharacterAnimInst::UnhideWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.UnhideWeapon");

	UKSCharacterAnimInst_UnhideWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.UnhideMag
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UKSCharacterAnimInst::UnhideMag()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.UnhideMag");

	UKSCharacterAnimInst_UnhideMag_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.UnhideGadget
// (Final, Native, Public, BlueprintCallable)

void UKSCharacterAnimInst::UnhideGadget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.UnhideGadget");

	UKSCharacterAnimInst_UnhideGadget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.TryToTriggerTurnInPlaceAnimation
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EKSTurnInPlaceAnimationVariant* AnimationVariant               (Parm, ZeroConstructor, IsPlainOldData)
// float*                         DelayTime                      (Parm, ZeroConstructor, IsPlainOldData)

void UKSCharacterAnimInst::TryToTriggerTurnInPlaceAnimation(EKSTurnInPlaceAnimationVariant* AnimationVariant, float* DelayTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.TryToTriggerTurnInPlaceAnimation");

	UKSCharacterAnimInst_TryToTriggerTurnInPlaceAnimation_Params params;
	params.AnimationVariant = AnimationVariant;
	params.DelayTime = DelayTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.TryGetKSCharacterBase
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AKSCharacterBase*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AKSCharacterBase* UKSCharacterAnimInst::TryGetKSCharacterBase()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.TryGetKSCharacterBase");

	UKSCharacterAnimInst_TryGetKSCharacterBase_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterAnimInst.TriggerDisableAims
// (Final, Native, Public)
// Parameters:
// bool*                          bShouldDisable                 (Parm, ZeroConstructor, IsPlainOldData)

void UKSCharacterAnimInst::TriggerDisableAims(bool* bShouldDisable)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.TriggerDisableAims");

	UKSCharacterAnimInst_TriggerDisableAims_Params params;
	params.bShouldDisable = bShouldDisable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.TriggerCustomPivot
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UKSCharacterAnimInst::TriggerCustomPivot()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.TriggerCustomPivot");

	UKSCharacterAnimInst_TriggerCustomPivot_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.SwitchWeaponNative
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UKSWeaponComponent**     Weapon                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UKSCharacterAnimInst::SwitchWeaponNative(class UKSWeaponComponent** Weapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.SwitchWeaponNative");

	UKSCharacterAnimInst_SwitchWeaponNative_Params params;
	params.Weapon = Weapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.SwitchWeaponIKNative
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UKSWeaponComponent**     Weapon                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UKSCharacterAnimInst::SwitchWeaponIKNative(class UKSWeaponComponent** Weapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.SwitchWeaponIKNative");

	UKSCharacterAnimInst_SwitchWeaponIKNative_Params params;
	params.Weapon = Weapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.StopSpray
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UKSCharacterAnimInst::StopSpray()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.StopSpray");

	UKSCharacterAnimInst_StopSpray_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.StopFire
// (Final, Native, Public, BlueprintCallable)

void UKSCharacterAnimInst::StopFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.StopFire");

	UKSCharacterAnimInst_StopFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.StopEmote
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UKSCharacterAnimInst::StopEmote()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.StopEmote");

	UKSCharacterAnimInst_StopEmote_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.StartSpray
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UKSCharacterAnimInst::StartSpray()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.StartSpray");

	UKSCharacterAnimInst_StartSpray_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.StartFire
// (Final, Native, Public, BlueprintCallable)

void UKSCharacterAnimInst::StartFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.StartFire");

	UKSCharacterAnimInst_StartFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.StartEmote
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimMontage**           EmoteMontage                   (Parm, ZeroConstructor, IsPlainOldData)

void UKSCharacterAnimInst::StartEmote(class UAnimMontage** EmoteMontage)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.StartEmote");

	UKSCharacterAnimInst_StartEmote_Params params;
	params.EmoteMontage = EmoteMontage;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.ShoulderCharge
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UKSCharacterAnimInst::ShoulderCharge()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.ShoulderCharge");

	UKSCharacterAnimInst_ShoulderCharge_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.SetMaxSpeedValues
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UKSWeaponAsset**         WeaponAsset                    (Parm, ZeroConstructor, IsPlainOldData)

void UKSCharacterAnimInst::SetMaxSpeedValues(class UKSWeaponAsset** WeaponAsset)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.SetMaxSpeedValues");

	UKSCharacterAnimInst_SetMaxSpeedValues_Params params;
	params.WeaponAsset = WeaponAsset;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.ReviveMesh
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimMontage**           ReviveMontage                  (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bIsInAir                       (Parm, ZeroConstructor, IsPlainOldData)

void UKSCharacterAnimInst::ReviveMesh(class UAnimMontage** ReviveMontage, bool* bIsInAir)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.ReviveMesh");

	UKSCharacterAnimInst_ReviveMesh_Params params;
	params.ReviveMontage = ReviveMontage;
	params.bIsInAir = bIsInAir;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.RetrieveEnd
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UKSCharacterAnimInst::RetrieveEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.RetrieveEnd");

	UKSCharacterAnimInst_RetrieveEnd_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.RetrieveBegin
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UKSCharacterAnimInst::RetrieveBegin()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.RetrieveBegin");

	UKSCharacterAnimInst_RetrieveBegin_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.RequestNewCombatState
// (Event, Public, BlueprintEvent)
// Parameters:
// ECombatState*                  NewCombatState                 (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bBlockCooldown                 (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bForce                         (Parm, ZeroConstructor, IsPlainOldData)

void UKSCharacterAnimInst::RequestNewCombatState(ECombatState* NewCombatState, bool* bBlockCooldown, bool* bForce)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.RequestNewCombatState");

	UKSCharacterAnimInst_RequestNewCombatState_Params params;
	params.NewCombatState = NewCombatState;
	params.bBlockCooldown = bBlockCooldown;
	params.bForce = bForce;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.RequestLeftHandIKForceOff
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UKSCharacterAnimInst::RequestLeftHandIKForceOff()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.RequestLeftHandIKForceOff");

	UKSCharacterAnimInst_RequestLeftHandIKForceOff_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterAnimInst.ReleaseWorldRotationLock
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// unsigned char*                 InLockId                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSCharacterAnimInst::ReleaseWorldRotationLock(unsigned char* InLockId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.ReleaseWorldRotationLock");

	UKSCharacterAnimInst_ReleaseWorldRotationLock_Params params;
	params.InLockId = InLockId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterAnimInst.PopLeftHandIKForceOffRequest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int*                           RequestID                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSCharacterAnimInst::PopLeftHandIKForceOffRequest(int* RequestID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.PopLeftHandIKForceOffRequest");

	UKSCharacterAnimInst_PopLeftHandIKForceOffRequest_Params params;
	params.RequestID = RequestID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterAnimInst.PlayRecoilProfile
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FRecoilProfile*         RecoilProfile                  (Parm)

void UKSCharacterAnimInst::PlayRecoilProfile(struct FRecoilProfile* RecoilProfile)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.PlayRecoilProfile");

	UKSCharacterAnimInst_PlayRecoilProfile_Params params;
	params.RecoilProfile = RecoilProfile;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.OnTestCombatStateCooldown
// (Final, Native, Protected)

void UKSCharacterAnimInst::OnTestCombatStateCooldown()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.OnTestCombatStateCooldown");

	UKSCharacterAnimInst_OnTestCombatStateCooldown_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.OnShoulderChanged
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void UKSCharacterAnimInst::OnShoulderChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.OnShoulderChanged");

	UKSCharacterAnimInst_OnShoulderChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.OnMovementDirectionChanged
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// EKSMovementDirection*          OldDirection                   (Parm, ZeroConstructor, IsPlainOldData)
// EKSMovementDirection*          NewDirection                   (Parm, ZeroConstructor, IsPlainOldData)

void UKSCharacterAnimInst::OnMovementDirectionChanged(EKSMovementDirection* OldDirection, EKSMovementDirection* NewDirection)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.OnMovementDirectionChanged");

	UKSCharacterAnimInst_OnMovementDirectionChanged_Params params;
	params.OldDirection = OldDirection;
	params.NewDirection = NewDirection;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.OnCombatStateCooldown
// (Final, Native, Protected)

void UKSCharacterAnimInst::OnCombatStateCooldown()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.OnCombatStateCooldown");

	UKSCharacterAnimInst_OnCombatStateCooldown_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.LocomotionStop
// (Event, Protected, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector*                StopLocation                   (Parm, ZeroConstructor, IsPlainOldData)

void UKSCharacterAnimInst::LocomotionStop(struct FVector* StopLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.LocomotionStop");

	UKSCharacterAnimInst_LocomotionStop_Params params;
	params.StopLocation = StopLocation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.LocomotionStart
// (Event, Protected, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector*                StartLocation                  (Parm, ZeroConstructor, IsPlainOldData)

void UKSCharacterAnimInst::LocomotionStart(struct FVector* StartLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.LocomotionStart");

	UKSCharacterAnimInst_LocomotionStart_Params params;
	params.StartLocation = StartLocation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.LocomotionPrePivot
// (Event, Protected, BlueprintEvent)

void UKSCharacterAnimInst::LocomotionPrePivot()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.LocomotionPrePivot");

	UKSCharacterAnimInst_LocomotionPrePivot_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.LocomotionPivotCheckpoint
// (Event, Protected, BlueprintEvent)

void UKSCharacterAnimInst::LocomotionPivotCheckpoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.LocomotionPivotCheckpoint");

	UKSCharacterAnimInst_LocomotionPivotCheckpoint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.LocomotionPivot
// (Event, Protected, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector*                PivotLocation                  (Parm, ZeroConstructor, IsPlainOldData)

void UKSCharacterAnimInst::LocomotionPivot(struct FVector* PivotLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.LocomotionPivot");

	UKSCharacterAnimInst_LocomotionPivot_Params params;
	params.PivotLocation = PivotLocation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.LocomotionJumpStart
// (Event, Protected, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector*                StartLocation                  (Parm, ZeroConstructor, IsPlainOldData)

void UKSCharacterAnimInst::LocomotionJumpStart(struct FVector* StartLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.LocomotionJumpStart");

	UKSCharacterAnimInst_LocomotionJumpStart_Params params;
	params.StartLocation = StartLocation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.LocomotionJumpLand
// (Event, Protected, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector*                LandLocation                   (Parm, ZeroConstructor, IsPlainOldData)

void UKSCharacterAnimInst::LocomotionJumpLand(struct FVector* LandLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.LocomotionJumpLand");

	UKSCharacterAnimInst_LocomotionJumpLand_Params params;
	params.LandLocation = LandLocation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.LockToCurrentInWorldRotation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// unsigned char                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

unsigned char UKSCharacterAnimInst::LockToCurrentInWorldRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.LockToCurrentInWorldRotation");

	UKSCharacterAnimInst_LockToCurrentInWorldRotation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterAnimInst.IsLeftHandIKForcedOff
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSCharacterAnimInst::IsLeftHandIKForcedOff()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.IsLeftHandIKForcedOff");

	UKSCharacterAnimInst_IsLeftHandIKForcedOff_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterAnimInst.HideWeapon
// (Final, Native, Public, BlueprintCallable)

void UKSCharacterAnimInst::HideWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.HideWeapon");

	UKSCharacterAnimInst_HideWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.HideMag
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UKSCharacterAnimInst::HideMag()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.HideMag");

	UKSCharacterAnimInst_HideMag_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.HideGadget
// (Final, Native, Public, BlueprintCallable)

void UKSCharacterAnimInst::HideGadget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.HideGadget");

	UKSCharacterAnimInst_HideGadget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.GetUnpairedMirrorBones
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FBoneReference>  ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

TArray<struct FBoneReference> UKSCharacterAnimInst::GetUnpairedMirrorBones()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.GetUnpairedMirrorBones");

	UKSCharacterAnimInst_GetUnpairedMirrorBones_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterAnimInst.GetPairedMirrorBones
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FBoneMirrorPair> ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

TArray<struct FBoneMirrorPair> UKSCharacterAnimInst::GetPairedMirrorBones()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.GetPairedMirrorBones");

	UKSCharacterAnimInst_GetPairedMirrorBones_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterAnimInst.GetMovementDirectionFromLocalAcceleration
// (Final, Native, Protected, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                NormalizedLocalAccel           (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bGetOppositeDirection          (Parm, ZeroConstructor, IsPlainOldData)
// EKSMovementDirection           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EKSMovementDirection UKSCharacterAnimInst::GetMovementDirectionFromLocalAcceleration(struct FVector* NormalizedLocalAccel, bool* bGetOppositeDirection)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.GetMovementDirectionFromLocalAcceleration");

	UKSCharacterAnimInst_GetMovementDirectionFromLocalAcceleration_Params params;
	params.NormalizedLocalAccel = NormalizedLocalAccel;
	params.bGetOppositeDirection = bGetOppositeDirection;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterAnimInst.FloatSpringInterp
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// float*                         Current                        (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Target                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FFloatHitSpringState    SpringState                    (Parm, OutParm, ReferenceParm)
// float*                         Stiffness                      (Parm, ZeroConstructor, IsPlainOldData)
// float*                         CriticalDampingFactor          (Parm, ZeroConstructor, IsPlainOldData)
// float*                         DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Mass                           (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSCharacterAnimInst::STATIC_FloatSpringInterp(float* Current, float* Target, float* Stiffness, float* CriticalDampingFactor, float* DeltaTime, float* Mass, struct FFloatHitSpringState* SpringState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.FloatSpringInterp");

	UKSCharacterAnimInst_FloatSpringInterp_Params params;
	params.Current = Current;
	params.Target = Target;
	params.Stiffness = Stiffness;
	params.CriticalDampingFactor = CriticalDampingFactor;
	params.DeltaTime = DeltaTime;
	params.Mass = Mass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (SpringState != nullptr)
		*SpringState = params.SpringState;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterAnimInst.EventStopSwimming
// (Event, Public, BlueprintEvent)

void UKSCharacterAnimInst::EventStopSwimming()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.EventStopSwimming");

	UKSCharacterAnimInst_EventStopSwimming_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.EventStopSubmerge
// (Event, Public, BlueprintEvent)

void UKSCharacterAnimInst::EventStopSubmerge()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.EventStopSubmerge");

	UKSCharacterAnimInst_EventStopSubmerge_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.EventStartSwimming
// (Event, Public, BlueprintEvent)

void UKSCharacterAnimInst::EventStartSwimming()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.EventStartSwimming");

	UKSCharacterAnimInst_EventStartSwimming_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.EventStartSubmerge
// (Event, Public, BlueprintEvent)

void UKSCharacterAnimInst::EventStartSubmerge()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.EventStartSubmerge");

	UKSCharacterAnimInst_EventStartSubmerge_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.EventStartInteraction
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FName*                  NewInteractState               (Parm, ZeroConstructor, IsPlainOldData)
// float*                         NewInteractHeight              (Parm, ZeroConstructor, IsPlainOldData)
// float*                         NewInteractTime                (Parm, ZeroConstructor, IsPlainOldData)

void UKSCharacterAnimInst::EventStartInteraction(struct FName* NewInteractState, float* NewInteractHeight, float* NewInteractTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.EventStartInteraction");

	UKSCharacterAnimInst_EventStartInteraction_Params params;
	params.NewInteractState = NewInteractState;
	params.NewInteractHeight = NewInteractHeight;
	params.NewInteractTime = NewInteractTime;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.EventPlayHitReactionAnimation
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FName*                  AttackDirection                (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bWillReturnDamage              (Parm, ZeroConstructor, IsPlainOldData)

void UKSCharacterAnimInst::EventPlayHitReactionAnimation(struct FName* AttackDirection, bool* bWillReturnDamage)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.EventPlayHitReactionAnimation");

	UKSCharacterAnimInst_EventPlayHitReactionAnimation_Params params;
	params.AttackDirection = AttackDirection;
	params.bWillReturnDamage = bWillReturnDamage;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.EventPlayFireAnimation
// (Event, Public, BlueprintEvent)

void UKSCharacterAnimInst::EventPlayFireAnimation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.EventPlayFireAnimation");

	UKSCharacterAnimInst_EventPlayFireAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.EventPlayDeathAnimation
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSCharacterAnimInst::EventPlayDeathAnimation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.EventPlayDeathAnimation");

	UKSCharacterAnimInst_EventPlayDeathAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterAnimInst.EventEndZipLineEnding
// (Event, Public, BlueprintEvent)

void UKSCharacterAnimInst::EventEndZipLineEnding()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.EventEndZipLineEnding");

	UKSCharacterAnimInst_EventEndZipLineEnding_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.EventEndZipLineBrace
// (Event, Public, BlueprintEvent)

void UKSCharacterAnimInst::EventEndZipLineBrace()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.EventEndZipLineBrace");

	UKSCharacterAnimInst_EventEndZipLineBrace_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.EventEndZipLine
// (Event, Public, BlueprintEvent)

void UKSCharacterAnimInst::EventEndZipLine()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.EventEndZipLine");

	UKSCharacterAnimInst_EventEndZipLine_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.EventEndVault
// (Event, Public, BlueprintEvent)

void UKSCharacterAnimInst::EventEndVault()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.EventEndVault");

	UKSCharacterAnimInst_EventEndVault_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.EventEndStun
// (Event, Public, BlueprintEvent)

void UKSCharacterAnimInst::EventEndStun()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.EventEndStun");

	UKSCharacterAnimInst_EventEndStun_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.EventEndPowerSlide
// (Event, Public, BlueprintEvent)
// Parameters:
// EKSPowerSlideEndReason*        EndReason                      (Parm, ZeroConstructor, IsPlainOldData)

void UKSCharacterAnimInst::EventEndPowerSlide(EKSPowerSlideEndReason* EndReason)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.EventEndPowerSlide");

	UKSCharacterAnimInst_EventEndPowerSlide_Params params;
	params.EndReason = EndReason;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.EventEndInteraction
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FName*                  OldInteractState               (Parm, ZeroConstructor, IsPlainOldData)

void UKSCharacterAnimInst::EventEndInteraction(struct FName* OldInteractState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.EventEndInteraction");

	UKSCharacterAnimInst_EventEndInteraction_Params params;
	params.OldInteractState = OldInteractState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.EventEndHardLand
// (Event, Public, BlueprintEvent)

void UKSCharacterAnimInst::EventEndHardLand()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.EventEndHardLand");

	UKSCharacterAnimInst_EventEndHardLand_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.EventEndActivatingMod
// (Event, Public, BlueprintEvent)

void UKSCharacterAnimInst::EventEndActivatingMod()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.EventEndActivatingMod");

	UKSCharacterAnimInst_EventEndActivatingMod_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.EventEndAbilityMovement
// (Event, Public, BlueprintEvent)

void UKSCharacterAnimInst::EventEndAbilityMovement()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.EventEndAbilityMovement");

	UKSCharacterAnimInst_EventEndAbilityMovement_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.EventDoZipLineEnding
// (Event, Public, BlueprintEvent)

void UKSCharacterAnimInst::EventDoZipLineEnding()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.EventDoZipLineEnding");

	UKSCharacterAnimInst_EventDoZipLineEnding_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.EventDoZipLineBrace
// (Event, Public, BlueprintEvent)

void UKSCharacterAnimInst::EventDoZipLineBrace()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.EventDoZipLineBrace");

	UKSCharacterAnimInst_EventDoZipLineBrace_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.EventDoZipLine
// (Event, Public, BlueprintEvent)

void UKSCharacterAnimInst::EventDoZipLine()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.EventDoZipLine");

	UKSCharacterAnimInst_EventDoZipLine_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.EventDoVault
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// float*                         InMantleHeight                 (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bInVault                       (Parm, ZeroConstructor, IsPlainOldData)
// float*                         InVaultDrop                    (Parm, ZeroConstructor, IsPlainOldData)
// float*                         InUpDuration                   (Parm, ZeroConstructor, IsPlainOldData)
// float*                         InAcrossDuration               (Parm, ZeroConstructor, IsPlainOldData)
// float*                         InDownDuration                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FName*                  InMantleName                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void UKSCharacterAnimInst::EventDoVault(float* InMantleHeight, bool* bInVault, float* InVaultDrop, float* InUpDuration, float* InAcrossDuration, float* InDownDuration, struct FName* InMantleName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.EventDoVault");

	UKSCharacterAnimInst_EventDoVault_Params params;
	params.InMantleHeight = InMantleHeight;
	params.bInVault = bInVault;
	params.InVaultDrop = InVaultDrop;
	params.InUpDuration = InUpDuration;
	params.InAcrossDuration = InAcrossDuration;
	params.InDownDuration = InDownDuration;
	params.InMantleName = InMantleName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.EventDoStun
// (Event, Public, BlueprintEvent)

void UKSCharacterAnimInst::EventDoStun()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.EventDoStun");

	UKSCharacterAnimInst_EventDoStun_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.EventDoPowerSlide
// (Event, Public, BlueprintEvent)

void UKSCharacterAnimInst::EventDoPowerSlide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.EventDoPowerSlide");

	UKSCharacterAnimInst_EventDoPowerSlide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.EventDoHardLandAvoid
// (Event, Public, BlueprintEvent)

void UKSCharacterAnimInst::EventDoHardLandAvoid()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.EventDoHardLandAvoid");

	UKSCharacterAnimInst_EventDoHardLandAvoid_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.EventDoHardLand
// (Event, Public, BlueprintEvent)

void UKSCharacterAnimInst::EventDoHardLand()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.EventDoHardLand");

	UKSCharacterAnimInst_EventDoHardLand_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.EventDoGoDown
// (Event, Public, BlueprintEvent)

void UKSCharacterAnimInst::EventDoGoDown()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.EventDoGoDown");

	UKSCharacterAnimInst_EventDoGoDown_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.EventDoDodgeRoll
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// float*                         Duration                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector2D*              Direction                      (Parm, ZeroConstructor, IsPlainOldData)

void UKSCharacterAnimInst::EventDoDodgeRoll(float* Duration, struct FVector2D* Direction)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.EventDoDodgeRoll");

	UKSCharacterAnimInst_EventDoDodgeRoll_Params params;
	params.Duration = Duration;
	params.Direction = Direction;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.EventDoActivatingMod
// (Event, Public, BlueprintEvent)

void UKSCharacterAnimInst::EventDoActivatingMod()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.EventDoActivatingMod");

	UKSCharacterAnimInst_EventDoActivatingMod_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.EventDoAbilityMovement
// (Event, Public, BlueprintEvent)

void UKSCharacterAnimInst::EventDoAbilityMovement()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.EventDoAbilityMovement");

	UKSCharacterAnimInst_EventDoAbilityMovement_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.EventActivatedModExpired
// (Event, Public, BlueprintEvent)

void UKSCharacterAnimInst::EventActivatedModExpired()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.EventActivatedModExpired");

	UKSCharacterAnimInst_EventActivatedModExpired_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.EnableAims
// (Final, Native, Public, BlueprintCallable)

void UKSCharacterAnimInst::EnableAims()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.EnableAims");

	UKSCharacterAnimInst_EnableAims_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.DoResetCustomPivot
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UKSCharacterAnimInst::DoResetCustomPivot()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.DoResetCustomPivot");

	UKSCharacterAnimInst_DoResetCustomPivot_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.DodgeRollExpire
// (Final, Native, Protected)

void UKSCharacterAnimInst::DodgeRollExpire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.DodgeRollExpire");

	UKSCharacterAnimInst_DodgeRollExpire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.DisableAims
// (Final, Native, Public, BlueprintCallable)

void UKSCharacterAnimInst::DisableAims()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.DisableAims");

	UKSCharacterAnimInst_DisableAims_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.CheckCanSpray
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSCharacterAnimInst::CheckCanSpray()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.CheckCanSpray");

	UKSCharacterAnimInst_CheckCanSpray_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterAnimInst.CheckCanEmote
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSCharacterAnimInst::CheckCanEmote()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.CheckCanEmote");

	UKSCharacterAnimInst_CheckCanEmote_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterAnimInst.CanUseCombatState
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// ECombatState*                  TestState                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSCharacterAnimInst::CanUseCombatState(ECombatState* TestState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.CanUseCombatState");

	UKSCharacterAnimInst_CanUseCombatState_Params params;
	params.TestState = TestState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterAnimInst.BroadcastOnGoDown
// (Final, Native, Protected, BlueprintCallable)

void UKSCharacterAnimInst::BroadcastOnGoDown()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.BroadcastOnGoDown");

	UKSCharacterAnimInst_BroadcastOnGoDown_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.BlinkEyes
// (Native, Event, Protected, BlueprintEvent)

void UKSCharacterAnimInst::BlinkEyes()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.BlinkEyes");

	UKSCharacterAnimInst_BlinkEyes_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.AttemptTestCombatStateCooldown
// (Final, Native, Public, BlueprintCallable)

void UKSCharacterAnimInst::AttemptTestCombatStateCooldown()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.AttemptTestCombatStateCooldown");

	UKSCharacterAnimInst_AttemptTestCombatStateCooldown_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.AttemptCombatStateCooldown
// (Final, Native, Public, BlueprintCallable)

void UKSCharacterAnimInst::AttemptCombatStateCooldown()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.AttemptCombatStateCooldown");

	UKSCharacterAnimInst_AttemptCombatStateCooldown_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterCameraShake.StopShakeOnViewTargetChanged
// (Native, Protected)
// Parameters:
// class APlayerController**      NewController                  (Parm, ZeroConstructor, IsPlainOldData)

void UKSCharacterCameraShake::StopShakeOnViewTargetChanged(class APlayerController** NewController)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterCameraShake.StopShakeOnViewTargetChanged");

	UKSCharacterCameraShake_StopShakeOnViewTargetChanged_Params params;
	params.NewController = NewController;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterCameraShake.StopShakeOnActorDestroyed
// (Native, Protected)
// Parameters:
// class AActor**                 DestroyedActor                 (Parm, ZeroConstructor, IsPlainOldData)

void UKSCharacterCameraShake::StopShakeOnActorDestroyed(class AActor** DestroyedActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterCameraShake.StopShakeOnActorDestroyed");

	UKSCharacterCameraShake_StopShakeOnActorDestroyed_Params params;
	params.DestroyedActor = DestroyedActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterCameraShake.StopShakeDynamic
// (Native, Public)

void UKSCharacterCameraShake::StopShakeDynamic()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterCameraShake.StopShakeDynamic");

	UKSCharacterCameraShake_StopShakeDynamic_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterCameraShake.OnAimStateChanged
// (Native, Protected)
// Parameters:
// EKSCharacterAimMode*           NextAimState                   (Parm, ZeroConstructor, IsPlainOldData)

void UKSCharacterCameraShake::OnAimStateChanged(EKSCharacterAimMode* NextAimState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterCameraShake.OnAimStateChanged");

	UKSCharacterCameraShake_OnAimStateChanged_Params params;
	params.NextAimState = NextAimState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterMovementComponent.ResetPostFireSprintLockout
// (Final, Native, Public)

void UKSCharacterMovementComponent::ResetPostFireSprintLockout()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterMovementComponent.ResetPostFireSprintLockout");

	UKSCharacterMovementComponent_ResetPostFireSprintLockout_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterMovementComponent.IsZipLining
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSCharacterMovementComponent::IsZipLining()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterMovementComponent.IsZipLining");

	UKSCharacterMovementComponent_IsZipLining_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterMovementComponent.IsSprintingWithVelocity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSCharacterMovementComponent::IsSprintingWithVelocity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterMovementComponent.IsSprintingWithVelocity");

	UKSCharacterMovementComponent_IsSprintingWithVelocity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterMovementComponent.IsSprinting
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSCharacterMovementComponent::IsSprinting()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterMovementComponent.IsSprinting");

	UKSCharacterMovementComponent_IsSprinting_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterMovementComponent.IsInPowerSlide
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSCharacterMovementComponent::IsInPowerSlide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterMovementComponent.IsInPowerSlide");

	UKSCharacterMovementComponent_IsInPowerSlide_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterMovementComponent.IsFlightRecovery
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSCharacterMovementComponent::IsFlightRecovery()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterMovementComponent.IsFlightRecovery");

	UKSCharacterMovementComponent_IsFlightRecovery_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterMovementComponent.IsDowned
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSCharacterMovementComponent::IsDowned()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterMovementComponent.IsDowned");

	UKSCharacterMovementComponent_IsDowned_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterMovementComponent.IsDodgeRolling
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSCharacterMovementComponent::IsDodgeRolling()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterMovementComponent.IsDodgeRolling");

	UKSCharacterMovementComponent_IsDodgeRolling_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterMovementComponent.IsAimingOverShoulder
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSCharacterMovementComponent::IsAimingOverShoulder()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterMovementComponent.IsAimingOverShoulder");

	UKSCharacterMovementComponent_IsAimingOverShoulder_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterMovementComponent.IsAimingDownSights
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSCharacterMovementComponent::IsAimingDownSights()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterMovementComponent.IsAimingDownSights");

	UKSCharacterMovementComponent_IsAimingDownSights_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterMovementComponent.IsAimingAlternate
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSCharacterMovementComponent::IsAimingAlternate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterMovementComponent.IsAimingAlternate");

	UKSCharacterMovementComponent_IsAimingAlternate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterMovementComponent.IsAiming
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSCharacterMovementComponent::IsAiming()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterMovementComponent.IsAiming");

	UKSCharacterMovementComponent_IsAiming_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterMovementComponent.GetWantsToSprint
// (Final, Native, Public, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSCharacterMovementComponent::GetWantsToSprint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterMovementComponent.GetWantsToSprint");

	UKSCharacterMovementComponent_GetWantsToSprint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterMovementComponent.GetWantsToPowerSlide
// (Final, Native, Public, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSCharacterMovementComponent::GetWantsToPowerSlide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterMovementComponent.GetWantsToPowerSlide");

	UKSCharacterMovementComponent_GetWantsToPowerSlide_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterMovementComponent.GetProratedMaxSpeed
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSCharacterMovementComponent::GetProratedMaxSpeed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterMovementComponent.GetProratedMaxSpeed");

	UKSCharacterMovementComponent_GetProratedMaxSpeed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterMovementComponent.FindPointAboveWater
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector*                TestPoint                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector UKSCharacterMovementComponent::FindPointAboveWater(struct FVector* TestPoint)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterMovementComponent.FindPointAboveWater");

	UKSCharacterMovementComponent_FindPointAboveWater_Params params;
	params.TestPoint = TestPoint;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCharacterMovementComponent.ClientAdjustPositionVault
// (Net, Native, Event, Public, HasDefaults, NetClient)
// Parameters:
// float*                         Timestamp                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                NewLoc                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                NewVel                         (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent**    NewBase                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FName*                  NewBaseBoneName                (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bHasBase                       (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bBaseRelativePosition          (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                NewPreVaultLocation            (Parm, ZeroConstructor, IsPlainOldData)

void UKSCharacterMovementComponent::ClientAdjustPositionVault(float* Timestamp, struct FVector* NewLoc, struct FVector* NewVel, class UPrimitiveComponent** NewBase, struct FName* NewBaseBoneName, bool* bHasBase, bool* bBaseRelativePosition, struct FVector* NewPreVaultLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterMovementComponent.ClientAdjustPositionVault");

	UKSCharacterMovementComponent_ClientAdjustPositionVault_Params params;
	params.Timestamp = Timestamp;
	params.NewLoc = NewLoc;
	params.NewVel = NewVel;
	params.NewBase = NewBase;
	params.NewBaseBoneName = NewBaseBoneName;
	params.bHasBase = bHasBase;
	params.bBaseRelativePosition = bBaseRelativePosition;
	params.NewPreVaultLocation = NewPreVaultLocation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterMovementComponent.ClientAdjustPositionDodgeRoll
// (Net, Native, Event, Public, HasDefaults, NetClient)
// Parameters:
// float*                         Timestamp                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                NewLoc                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                NewVel                         (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent**    NewBase                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FName*                  NewBaseBoneName                (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bHasBase                       (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bBaseRelativePosition          (Parm, ZeroConstructor, IsPlainOldData)
// float*                         NewDodgeDuration               (Parm, ZeroConstructor, IsPlainOldData)
// float*                         NewDodgeDirection              (Parm, ZeroConstructor, IsPlainOldData)

void UKSCharacterMovementComponent::ClientAdjustPositionDodgeRoll(float* Timestamp, struct FVector* NewLoc, struct FVector* NewVel, class UPrimitiveComponent** NewBase, struct FName* NewBaseBoneName, bool* bHasBase, bool* bBaseRelativePosition, float* NewDodgeDuration, float* NewDodgeDirection)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterMovementComponent.ClientAdjustPositionDodgeRoll");

	UKSCharacterMovementComponent_ClientAdjustPositionDodgeRoll_Params params;
	params.Timestamp = Timestamp;
	params.NewLoc = NewLoc;
	params.NewVel = NewVel;
	params.NewBase = NewBase;
	params.NewBaseBoneName = NewBaseBoneName;
	params.bHasBase = bHasBase;
	params.bBaseRelativePosition = bBaseRelativePosition;
	params.NewDodgeDuration = NewDodgeDuration;
	params.NewDodgeDirection = NewDodgeDirection;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSSkeletalMeshComponent.SetTeleportDistanceDeltaThreshold
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float*                         Threshold                      (Parm, ZeroConstructor, IsPlainOldData)

void UKSSkeletalMeshComponent::SetTeleportDistanceDeltaThreshold(float* Threshold)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSSkeletalMeshComponent.SetTeleportDistanceDeltaThreshold");

	UKSSkeletalMeshComponent_SetTeleportDistanceDeltaThreshold_Params params;
	params.Threshold = Threshold;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSSkeletalMeshComponent.SetForceTextureResidentFlag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          bEnable                        (Parm, ZeroConstructor, IsPlainOldData)

void UKSSkeletalMeshComponent::SetForceTextureResidentFlag(bool* bEnable)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSSkeletalMeshComponent.SetForceTextureResidentFlag");

	UKSSkeletalMeshComponent_SetForceTextureResidentFlag_Params params;
	params.bEnable = bEnable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSSkeletalMeshComponent.GetTeleportDistanceDeltaThreshold
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSSkeletalMeshComponent::GetTeleportDistanceDeltaThreshold()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSSkeletalMeshComponent.GetTeleportDistanceDeltaThreshold");

	UKSSkeletalMeshComponent_GetTeleportDistanceDeltaThreshold_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSSkeletalMeshComponent.GetForceTextureResidentFlag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSSkeletalMeshComponent::GetForceTextureResidentFlag()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSSkeletalMeshComponent.GetForceTextureResidentFlag");

	UKSSkeletalMeshComponent_GetForceTextureResidentFlag_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCheatComponent.WarpZ
// (Final, Exec, Native, Protected)
// Parameters:
// float*                         Z                              (Parm, ZeroConstructor, IsPlainOldData)

void UKSCheatComponent::WarpZ(float* Z)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.WarpZ");

	UKSCheatComponent_WarpZ_Params params;
	params.Z = Z;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.WarpToSpawn
// (Final, Exec, Native, Protected)

void UKSCheatComponent::WarpToSpawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.WarpToSpawn");

	UKSCheatComponent_WarpToSpawn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.Warp
// (Final, Exec, Native, Protected)
// Parameters:
// float*                         X                              (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Y                              (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Z                              (Parm, ZeroConstructor, IsPlainOldData)

void UKSCheatComponent::Warp(float* X, float* Y, float* Z)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.Warp");

	UKSCheatComponent_Warp_Params params;
	params.X = X;
	params.Y = Y;
	params.Z = Z;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ToggleWeaponDebug
// (Final, Exec, Native, Protected)

void UKSCheatComponent::ToggleWeaponDebug()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ToggleWeaponDebug");

	UKSCheatComponent_ToggleWeaponDebug_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ToggleHud
// (Final, Exec, Native, Protected)

void UKSCheatComponent::ToggleHud()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ToggleHud");

	UKSCheatComponent_ToggleHud_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ToggleGamepadAimDebug
// (Final, Exec, Native, Protected)

void UKSCheatComponent::ToggleGamepadAimDebug()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ToggleGamepadAimDebug");

	UKSCheatComponent_ToggleGamepadAimDebug_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ToggleAdvancedCombatLog
// (Final, Exec, Native, Protected)

void UKSCheatComponent::ToggleAdvancedCombatLog()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ToggleAdvancedCombatLog");

	UKSCheatComponent_ToggleAdvancedCombatLog_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.TestPreviewActor
// (Final, Exec, Native, Protected)
// Parameters:
// struct FString*                JobName                        (Parm, ZeroConstructor)
// int*                           PositionIndex                  (Parm, ZeroConstructor, IsPlainOldData)

void UKSCheatComponent::TestPreviewActor(struct FString* JobName, int* PositionIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.TestPreviewActor");

	UKSCheatComponent_TestPreviewActor_Params params;
	params.JobName = JobName;
	params.PositionIndex = PositionIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.TakeDamage
// (Final, Exec, Native, Protected)
// Parameters:
// struct FString*                WeaponName                     (Parm, ZeroConstructor)
// float*                         Amount                         (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          Head                           (Parm, ZeroConstructor, IsPlainOldData)

void UKSCheatComponent::TakeDamage(struct FString* WeaponName, float* Amount, bool* Head)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.TakeDamage");

	UKSCheatComponent_TakeDamage_Params params;
	params.WeaponName = WeaponName;
	params.Amount = Amount;
	params.Head = Head;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.Suicide
// (Exec, Native, Protected)

void UKSCheatComponent::Suicide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.Suicide");

	UKSCheatComponent_Suicide_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.Spectate
// (Final, Exec, Native, Protected)

void UKSCheatComponent::Spectate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.Spectate");

	UKSCheatComponent_Spectate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.Spawn
// (Final, Exec, Native, Protected)
// Parameters:
// struct FString*                BotName                        (Parm, ZeroConstructor)
// int*                           teamNum                        (Parm, ZeroConstructor, IsPlainOldData)
// int*                           Count                          (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Offset                         (Parm, ZeroConstructor, IsPlainOldData)

void UKSCheatComponent::Spawn(struct FString* BotName, int* teamNum, int* Count, float* Offset)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.Spawn");

	UKSCheatComponent_Spawn_Params params;
	params.BotName = BotName;
	params.teamNum = teamNum;
	params.Count = Count;
	params.Offset = Offset;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ShowWeaponStats
// (Final, Exec, Native, Protected)

void UKSCheatComponent::ShowWeaponStats()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ShowWeaponStats");

	UKSCheatComponent_ShowWeaponStats_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ShowLocation
// (Final, Exec, Native, Protected)
// Parameters:
// bool*                          Visible                        (Parm, ZeroConstructor, IsPlainOldData)

void UKSCheatComponent::ShowLocation(bool* Visible)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ShowLocation");

	UKSCheatComponent_ShowLocation_Params params;
	params.Visible = Visible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ShowKillCamWorld
// (Final, Exec, Native, Protected)
// Parameters:
// float*                         Duration                       (Parm, ZeroConstructor, IsPlainOldData)

void UKSCheatComponent::ShowKillCamWorld(float* Duration)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ShowKillCamWorld");

	UKSCheatComponent_ShowKillCamWorld_Params params;
	params.Duration = Duration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ShowHealth
// (Final, Exec, Native, Protected)
// Parameters:
// bool*                          Visible                        (Parm, ZeroConstructor, IsPlainOldData)

void UKSCheatComponent::ShowHealth(bool* Visible)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ShowHealth");

	UKSCheatComponent_ShowHealth_Params params;
	params.Visible = Visible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ShowDifficulties
// (Final, Exec, Native, Protected)

void UKSCheatComponent::ShowDifficulties()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ShowDifficulties");

	UKSCheatComponent_ShowDifficulties_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ShowBots
// (Final, Exec, Native, Protected)
// Parameters:
// bool*                          Show                           (Parm, ZeroConstructor, IsPlainOldData)

void UKSCheatComponent::ShowBots(bool* Show)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ShowBots");

	UKSCheatComponent_ShowBots_Params params;
	params.Show = Show;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.SetTimeLeft
// (Final, Exec, Native, Protected)
// Parameters:
// float*                         Seconds                        (Parm, ZeroConstructor, IsPlainOldData)

void UKSCheatComponent::SetTimeLeft(float* Seconds)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.SetTimeLeft");

	UKSCheatComponent_SetTimeLeft_Params params;
	params.Seconds = Seconds;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.SetTeam
// (Final, Exec, Native, Protected)
// Parameters:
// int*                           Team                           (Parm, ZeroConstructor, IsPlainOldData)

void UKSCheatComponent::SetTeam(int* Team)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.SetTeam");

	UKSCheatComponent_SetTeam_Params params;
	params.Team = Team;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.SetGroundSpeed
// (Final, Exec, Native, Protected)
// Parameters:
// float*                         Speed                          (Parm, ZeroConstructor, IsPlainOldData)

void UKSCheatComponent::SetGroundSpeed(float* Speed)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.SetGroundSpeed");

	UKSCheatComponent_SetGroundSpeed_Params params;
	params.Speed = Speed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.SetDifficulty
// (Final, Exec, Native, Protected)
// Parameters:
// int*                           TeamNumber                     (Parm, ZeroConstructor, IsPlainOldData)
// int*                           DifficultyIndex                (Parm, ZeroConstructor, IsPlainOldData)

void UKSCheatComponent::SetDifficulty(int* TeamNumber, int* DifficultyIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.SetDifficulty");

	UKSCheatComponent_SetDifficulty_Params params;
	params.TeamNumber = TeamNumber;
	params.DifficultyIndex = DifficultyIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ServerWarpZ
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// float*                         Z                              (Parm, ZeroConstructor, IsPlainOldData)

void UKSCheatComponent::ServerWarpZ(float* Z)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ServerWarpZ");

	UKSCheatComponent_ServerWarpZ_Params params;
	params.Z = Z;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ServerWarpToSpawn
// (Net, Native, Event, Protected, NetServer, NetValidate)

void UKSCheatComponent::ServerWarpToSpawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ServerWarpToSpawn");

	UKSCheatComponent_ServerWarpToSpawn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ServerWarp
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// float*                         X                              (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Y                              (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Z                              (Parm, ZeroConstructor, IsPlainOldData)

void UKSCheatComponent::ServerWarp(float* X, float* Y, float* Z)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ServerWarp");

	UKSCheatComponent_ServerWarp_Params params;
	params.X = X;
	params.Y = Y;
	params.Z = Z;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ServerToggleHud
// (Net, Native, Event, Protected, NetServer, NetValidate)

void UKSCheatComponent::ServerToggleHud()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ServerToggleHud");

	UKSCheatComponent_ServerToggleHud_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ServerToggleCombatLog
// (Net, Native, Event, Protected, NetServer, NetValidate)

void UKSCheatComponent::ServerToggleCombatLog()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ServerToggleCombatLog");

	UKSCheatComponent_ServerToggleCombatLog_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ServerTakeDamage
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// struct FString*                WeaponName                     (Parm, ZeroConstructor)
// float*                         Amount                         (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          Head                           (Parm, ZeroConstructor, IsPlainOldData)

void UKSCheatComponent::ServerTakeDamage(struct FString* WeaponName, float* Amount, bool* Head)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ServerTakeDamage");

	UKSCheatComponent_ServerTakeDamage_Params params;
	params.WeaponName = WeaponName;
	params.Amount = Amount;
	params.Head = Head;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ServerSuicide
// (Net, Native, Event, Protected, NetServer, NetValidate)

void UKSCheatComponent::ServerSuicide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ServerSuicide");

	UKSCheatComponent_ServerSuicide_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ServerSpectate
// (Net, Native, Event, Protected, NetServer, NetValidate)

void UKSCheatComponent::ServerSpectate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ServerSpectate");

	UKSCheatComponent_ServerSpectate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ServerSpawn
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// struct FString*                BotName                        (Parm, ZeroConstructor)
// int*                           teamNum                        (Parm, ZeroConstructor, IsPlainOldData)
// int*                           Count                          (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Offset                         (Parm, ZeroConstructor, IsPlainOldData)

void UKSCheatComponent::ServerSpawn(struct FString* BotName, int* teamNum, int* Count, float* Offset)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ServerSpawn");

	UKSCheatComponent_ServerSpawn_Params params;
	params.BotName = BotName;
	params.teamNum = teamNum;
	params.Count = Count;
	params.Offset = Offset;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ServerShowLocation
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool*                          Visible                        (Parm, ZeroConstructor, IsPlainOldData)

void UKSCheatComponent::ServerShowLocation(bool* Visible)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ServerShowLocation");

	UKSCheatComponent_ServerShowLocation_Params params;
	params.Visible = Visible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ServerShowHealth
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool*                          Visible                        (Parm, ZeroConstructor, IsPlainOldData)

void UKSCheatComponent::ServerShowHealth(bool* Visible)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ServerShowHealth");

	UKSCheatComponent_ServerShowHealth_Params params;
	params.Visible = Visible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ServerShowDifficulties
// (Net, Native, Event, Protected, NetServer, NetValidate)

void UKSCheatComponent::ServerShowDifficulties()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ServerShowDifficulties");

	UKSCheatComponent_ServerShowDifficulties_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ServerShowBots
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool*                          Show                           (Parm, ZeroConstructor, IsPlainOldData)

void UKSCheatComponent::ServerShowBots(bool* Show)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ServerShowBots");

	UKSCheatComponent_ServerShowBots_Params params;
	params.Show = Show;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ServerSetTimeLeft
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// float*                         Seconds                        (Parm, ZeroConstructor, IsPlainOldData)

void UKSCheatComponent::ServerSetTimeLeft(float* Seconds)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ServerSetTimeLeft");

	UKSCheatComponent_ServerSetTimeLeft_Params params;
	params.Seconds = Seconds;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ServerSetTeam
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// int*                           Team                           (Parm, ZeroConstructor, IsPlainOldData)

void UKSCheatComponent::ServerSetTeam(int* Team)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ServerSetTeam");

	UKSCheatComponent_ServerSetTeam_Params params;
	params.Team = Team;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ServerSetGroundSpeed
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// float*                         Speed                          (Parm, ZeroConstructor, IsPlainOldData)

void UKSCheatComponent::ServerSetGroundSpeed(float* Speed)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ServerSetGroundSpeed");

	UKSCheatComponent_ServerSetGroundSpeed_Params params;
	params.Speed = Speed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ServerSetDifficulty
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// int*                           TeamNumber                     (Parm, ZeroConstructor, IsPlainOldData)
// int*                           DifficultyIndex                (Parm, ZeroConstructor, IsPlainOldData)

void UKSCheatComponent::ServerSetDifficulty(int* TeamNumber, int* DifficultyIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ServerSetDifficulty");

	UKSCheatComponent_ServerSetDifficulty_Params params;
	params.TeamNumber = TeamNumber;
	params.DifficultyIndex = DifficultyIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ServerRemoveFromLoadout
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// struct FString*                ItemName                       (Parm, ZeroConstructor)

void UKSCheatComponent::ServerRemoveFromLoadout(struct FString* ItemName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ServerRemoveFromLoadout");

	UKSCheatComponent_ServerRemoveFromLoadout_Params params;
	params.ItemName = ItemName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ServerRemoveAllMods
// (Net, Native, Event, Protected, NetServer, NetValidate)

void UKSCheatComponent::ServerRemoveAllMods()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ServerRemoveAllMods");

	UKSCheatComponent_ServerRemoveAllMods_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ServerQuickEndGame
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool*                          bWin                           (Parm, ZeroConstructor, IsPlainOldData)

void UKSCheatComponent::ServerQuickEndGame(bool* bWin)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ServerQuickEndGame");

	UKSCheatComponent_ServerQuickEndGame_Params params;
	params.bWin = bWin;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ServerInvisMe
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool*                          Invis                          (Parm, ZeroConstructor, IsPlainOldData)

void UKSCheatComponent::ServerInvisMe(bool* Invis)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ServerInvisMe");

	UKSCheatComponent_ServerInvisMe_Params params;
	params.Invis = Invis;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ServerInstantReplay
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// float*                         TimeToReplay                   (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Duration                       (Parm, ZeroConstructor, IsPlainOldData)

void UKSCheatComponent::ServerInstantReplay(float* TimeToReplay, float* Duration)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ServerInstantReplay");

	UKSCheatComponent_ServerInstantReplay_Params params;
	params.TimeToReplay = TimeToReplay;
	params.Duration = Duration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ServerInfiniteAmmo
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool*                          Infinite                       (Parm, ZeroConstructor, IsPlainOldData)

void UKSCheatComponent::ServerInfiniteAmmo(bool* Infinite)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ServerInfiniteAmmo");

	UKSCheatComponent_ServerInfiniteAmmo_Params params;
	params.Infinite = Infinite;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ServerGod
// (Net, Native, Event, Protected, NetServer, NetValidate)

void UKSCheatComponent::ServerGod()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ServerGod");

	UKSCheatComponent_ServerGod_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ServerGiveKSPoints
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// int*                           Amount                         (Parm, ZeroConstructor, IsPlainOldData)

void UKSCheatComponent::ServerGiveKSPoints(int* Amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ServerGiveKSPoints");

	UKSCheatComponent_ServerGiveKSPoints_Params params;
	params.Amount = Amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ServerGiveAsync
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// struct FString*                ItemName                       (Parm, ZeroConstructor)

void UKSCheatComponent::ServerGiveAsync(struct FString* ItemName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ServerGiveAsync");

	UKSCheatComponent_ServerGiveAsync_Params params;
	params.ItemName = ItemName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ServerGiveAllKSPoints
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// int*                           Amount                         (Parm, ZeroConstructor, IsPlainOldData)

void UKSCheatComponent::ServerGiveAllKSPoints(int* Amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ServerGiveAllKSPoints");

	UKSCheatComponent_ServerGiveAllKSPoints_Params params;
	params.Amount = Amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ServerGive
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// struct FString*                ItemName                       (Parm, ZeroConstructor)

void UKSCheatComponent::ServerGive(struct FString* ItemName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ServerGive");

	UKSCheatComponent_ServerGive_Params params;
	params.ItemName = ItemName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ServerEnableKillCam
// (Net, Native, Event, Protected, NetServer, NetValidate)

void UKSCheatComponent::ServerEnableKillCam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ServerEnableKillCam");

	UKSCheatComponent_ServerEnableKillCam_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ServerDrop
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// struct FString*                ItemName                       (Parm, ZeroConstructor)

void UKSCheatComponent::ServerDrop(struct FString* ItemName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ServerDrop");

	UKSCheatComponent_ServerDrop_Params params;
	params.ItemName = ItemName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ServerDisableAFKTimer
// (Net, Native, Event, Protected, NetServer, NetValidate)

void UKSCheatComponent::ServerDisableAFKTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ServerDisableAFKTimer");

	UKSCheatComponent_ServerDisableAFKTimer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ServerCharReset
// (Net, Native, Event, Protected, NetServer, NetValidate)

void UKSCheatComponent::ServerCharReset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ServerCharReset");

	UKSCheatComponent_ServerCharReset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ServerChangeCash
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// int*                           CashDelta                      (Parm, ZeroConstructor, IsPlainOldData)

void UKSCheatComponent::ServerChangeCash(int* CashDelta)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ServerChangeCash");

	UKSCheatComponent_ServerChangeCash_Params params;
	params.CashDelta = CashDelta;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ServerBotGodMode
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool*                          Enable                         (Parm, ZeroConstructor, IsPlainOldData)

void UKSCheatComponent::ServerBotGodMode(bool* Enable)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ServerBotGodMode");

	UKSCheatComponent_ServerBotGodMode_Params params;
	params.Enable = Enable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ServerAttach
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// struct FString*                AttachmentName                 (Parm, ZeroConstructor)

void UKSCheatComponent::ServerAttach(struct FString* AttachmentName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ServerAttach");

	UKSCheatComponent_ServerAttach_Params params;
	params.AttachmentName = AttachmentName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ServerAdjustDifficulty
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// int*                           Amount                         (Parm, ZeroConstructor, IsPlainOldData)

void UKSCheatComponent::ServerAdjustDifficulty(int* Amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ServerAdjustDifficulty");

	UKSCheatComponent_ServerAdjustDifficulty_Params params;
	params.Amount = Amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ServerAddToLoadout
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// struct FString*                ItemName                       (Parm, ZeroConstructor)

void UKSCheatComponent::ServerAddToLoadout(struct FString* ItemName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ServerAddToLoadout");

	UKSCheatComponent_ServerAddToLoadout_Params params;
	params.ItemName = ItemName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ServerAddAttachmentToLoadout
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// struct FString*                ItemName                       (Parm, ZeroConstructor)
// struct FString*                AttachmentName                 (Parm, ZeroConstructor)

void UKSCheatComponent::ServerAddAttachmentToLoadout(struct FString* ItemName, struct FString* AttachmentName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ServerAddAttachmentToLoadout");

	UKSCheatComponent_ServerAddAttachmentToLoadout_Params params;
	params.ItemName = ItemName;
	params.AttachmentName = AttachmentName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.RemoveFromLoadout
// (Final, Exec, Native, Protected)
// Parameters:
// struct FString*                ItemName                       (Parm, ZeroConstructor)

void UKSCheatComponent::RemoveFromLoadout(struct FString* ItemName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.RemoveFromLoadout");

	UKSCheatComponent_RemoveFromLoadout_Params params;
	params.ItemName = ItemName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.RemoveAllMods
// (Final, Exec, Native, Protected)

void UKSCheatComponent::RemoveAllMods()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.RemoveAllMods");

	UKSCheatComponent_RemoveAllMods_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.QuickEndGame
// (Final, Exec, Native, Protected)
// Parameters:
// bool*                          bWin                           (Parm, ZeroConstructor, IsPlainOldData)

void UKSCheatComponent::QuickEndGame(bool* bWin)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.QuickEndGame");

	UKSCheatComponent_QuickEndGame_Params params;
	params.bWin = bWin;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.QEG
// (Final, Exec, Native, Protected)
// Parameters:
// bool*                          bWin                           (Parm, ZeroConstructor, IsPlainOldData)

void UKSCheatComponent::QEG(bool* bWin)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.QEG");

	UKSCheatComponent_QEG_Params params;
	params.bWin = bWin;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.OnRep_HudVisible
// (Native, Protected)

void UKSCheatComponent::OnRep_HudVisible()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.OnRep_HudVisible");

	UKSCheatComponent_OnRep_HudVisible_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.OnRep_CanViewLocation
// (Native, Protected)

void UKSCheatComponent::OnRep_CanViewLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.OnRep_CanViewLocation");

	UKSCheatComponent_OnRep_CanViewLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.OnRep_CanViewDebugHealth
// (Native, Protected)

void UKSCheatComponent::OnRep_CanViewDebugHealth()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.OnRep_CanViewDebugHealth");

	UKSCheatComponent_OnRep_CanViewDebugHealth_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.NextPerfCaptureCamera
// (Final, Exec, Native, Protected)

void UKSCheatComponent::NextPerfCaptureCamera()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.NextPerfCaptureCamera");

	UKSCheatComponent_NextPerfCaptureCamera_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.InvisMe
// (Final, Exec, Native, Protected)
// Parameters:
// bool*                          Invis                          (Parm, ZeroConstructor, IsPlainOldData)

void UKSCheatComponent::InvisMe(bool* Invis)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.InvisMe");

	UKSCheatComponent_InvisMe_Params params;
	params.Invis = Invis;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.InstantReplay
// (Final, Exec, Native, Protected)
// Parameters:
// float*                         TimeToReplay                   (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Duration                       (Parm, ZeroConstructor, IsPlainOldData)

void UKSCheatComponent::InstantReplay(float* TimeToReplay, float* Duration)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.InstantReplay");

	UKSCheatComponent_InstantReplay_Params params;
	params.TimeToReplay = TimeToReplay;
	params.Duration = Duration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.InfiniteAmmo
// (Final, Exec, Native, Protected)
// Parameters:
// bool*                          Infinite                       (Parm, ZeroConstructor, IsPlainOldData)

void UKSCheatComponent::InfiniteAmmo(bool* Infinite)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.InfiniteAmmo");

	UKSCheatComponent_InfiniteAmmo_Params params;
	params.Infinite = Infinite;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.God
// (Final, Exec, Native, Protected)

void UKSCheatComponent::God()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.God");

	UKSCheatComponent_God_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.GiveKSPoints
// (Final, Exec, Native, Protected)
// Parameters:
// int*                           Amount                         (Parm, ZeroConstructor, IsPlainOldData)

void UKSCheatComponent::GiveKSPoints(int* Amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.GiveKSPoints");

	UKSCheatComponent_GiveKSPoints_Params params;
	params.Amount = Amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.GiveAsync
// (Final, Exec, Native, Protected)
// Parameters:
// struct FString*                ItemName                       (Parm, ZeroConstructor)

void UKSCheatComponent::GiveAsync(struct FString* ItemName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.GiveAsync");

	UKSCheatComponent_GiveAsync_Params params;
	params.ItemName = ItemName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.GiveAllKSPoints
// (Final, Exec, Native, Protected)
// Parameters:
// int*                           Amount                         (Parm, ZeroConstructor, IsPlainOldData)

void UKSCheatComponent::GiveAllKSPoints(int* Amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.GiveAllKSPoints");

	UKSCheatComponent_GiveAllKSPoints_Params params;
	params.Amount = Amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.Give
// (Final, Exec, Native, Protected)
// Parameters:
// struct FString*                ItemName                       (Parm, ZeroConstructor)

void UKSCheatComponent::Give(struct FString* ItemName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.Give");

	UKSCheatComponent_Give_Params params;
	params.ItemName = ItemName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.EnableSound
// (Final, Exec, Native, Protected)

void UKSCheatComponent::EnableSound()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.EnableSound");

	UKSCheatComponent_EnableSound_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.EnableKillCam
// (Final, Exec, Native, Protected)

void UKSCheatComponent::EnableKillCam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.EnableKillCam");

	UKSCheatComponent_EnableKillCam_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.Drop
// (Final, Exec, Native, Protected)
// Parameters:
// struct FString*                ItemName                       (Parm, ZeroConstructor)

void UKSCheatComponent::Drop(struct FString* ItemName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.Drop");

	UKSCheatComponent_Drop_Params params;
	params.ItemName = ItemName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.DownSelf
// (Final, Exec, Native, Protected)

void UKSCheatComponent::DownSelf()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.DownSelf");

	UKSCheatComponent_DownSelf_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.DisableSound
// (Final, Exec, Native, Protected)

void UKSCheatComponent::DisableSound()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.DisableSound");

	UKSCheatComponent_DisableSound_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.DisableAFKTimer
// (Final, Exec, Native, Protected)

void UKSCheatComponent::DisableAFKTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.DisableAFKTimer");

	UKSCheatComponent_DisableAFKTimer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.DebugThreatLevels
// (Final, Exec, Native, Protected)
// Parameters:
// bool*                          Show                           (Parm, ZeroConstructor, IsPlainOldData)

void UKSCheatComponent::DebugThreatLevels(bool* Show)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.DebugThreatLevels");

	UKSCheatComponent_DebugThreatLevels_Params params;
	params.Show = Show;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.CharReset
// (Final, Exec, Native, Protected)

void UKSCheatComponent::CharReset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.CharReset");

	UKSCheatComponent_CharReset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ChangeCash
// (Final, Exec, Native, Protected)
// Parameters:
// int*                           CashDelta                      (Parm, ZeroConstructor, IsPlainOldData)

void UKSCheatComponent::ChangeCash(int* CashDelta)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ChangeCash");

	UKSCheatComponent_ChangeCash_Params params;
	params.CashDelta = CashDelta;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.BotGodMode
// (Final, Exec, Native, Protected)
// Parameters:
// bool*                          Enable                         (Parm, ZeroConstructor, IsPlainOldData)

void UKSCheatComponent::BotGodMode(bool* Enable)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.BotGodMode");

	UKSCheatComponent_BotGodMode_Params params;
	params.Enable = Enable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.Attach
// (Final, Exec, Native, Protected)
// Parameters:
// struct FString*                AttachmentName                 (Parm, ZeroConstructor)

void UKSCheatComponent::Attach(struct FString* AttachmentName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.Attach");

	UKSCheatComponent_Attach_Params params;
	params.AttachmentName = AttachmentName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.AdjustDifficulty
// (Final, Exec, Native, Protected)
// Parameters:
// int*                           Amount                         (Parm, ZeroConstructor, IsPlainOldData)

void UKSCheatComponent::AdjustDifficulty(int* Amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.AdjustDifficulty");

	UKSCheatComponent_AdjustDifficulty_Params params;
	params.Amount = Amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.AddToLoadout
// (Final, Exec, Native, Protected)
// Parameters:
// struct FString*                ItemName                       (Parm, ZeroConstructor)

void UKSCheatComponent::AddToLoadout(struct FString* ItemName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.AddToLoadout");

	UKSCheatComponent_AddToLoadout_Params params;
	params.ItemName = ItemName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.AddAttachmentToLoadout
// (Final, Exec, Native, Protected)
// Parameters:
// struct FString*                ItemName                       (Parm, ZeroConstructor)
// struct FString*                AttachmentName                 (Parm, ZeroConstructor)

void UKSCheatComponent::AddAttachmentToLoadout(struct FString* ItemName, struct FString* AttachmentName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.AddAttachmentToLoadout");

	UKSCheatComponent_AddAttachmentToLoadout_Params params;
	params.ItemName = ItemName;
	params.AttachmentName = AttachmentName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCombatLogComponent.ToggleDebugLogging
// (Final, Native, Public)

void UKSCombatLogComponent::ToggleDebugLogging()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCombatLogComponent.ToggleDebugLogging");

	UKSCombatLogComponent_ToggleDebugLogging_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCombatLogComponent.DrawToDebugCanvas
// (Final, Native, Public)
// Parameters:
// class UCanvas**                DebugCanvas                    (Parm, ZeroConstructor, IsPlainOldData)
// class APlayerController**      LocalController                (Parm, ZeroConstructor, IsPlainOldData)

void UKSCombatLogComponent::DrawToDebugCanvas(class UCanvas** DebugCanvas, class APlayerController** LocalController)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCombatLogComponent.DrawToDebugCanvas");

	UKSCombatLogComponent_DrawToDebugCanvas_Params params;
	params.DebugCanvas = DebugCanvas;
	params.LocalController = LocalController;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCombatLogComponent.CombatSummaryRecieved
// (Final, Native, Public, HasOutParms)
// Parameters:
// struct FAdvancedCombatSummary* CombatSummary                  (ConstParm, Parm, OutParm, ReferenceParm)

void UKSCombatLogComponent::CombatSummaryRecieved(struct FAdvancedCombatSummary* CombatSummary)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCombatLogComponent.CombatSummaryRecieved");

	UKSCombatLogComponent_CombatSummaryRecieved_Params params;
	params.CombatSummary = CombatSummary;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSControllerInterface.RecordDamageDealt
// (Native, Public)
// Parameters:
// float*                         ProratedDamage                 (Parm, ZeroConstructor, IsPlainOldData)
// float*                         ActualDamage                   (Parm, ZeroConstructor, IsPlainOldData)
// class UDamageType**            DamageType                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 DamagedActor                   (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)

void UKSControllerInterface::RecordDamageDealt(float* ProratedDamage, float* ActualDamage, class UDamageType** DamageType, class AActor** DamagedActor, class AActor** DamageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSControllerInterface.RecordDamageDealt");

	UKSControllerInterface_RecordDamageDealt_Params params;
	params.ProratedDamage = ProratedDamage;
	params.ActualDamage = ActualDamage;
	params.DamageType = DamageType;
	params.DamagedActor = DamagedActor;
	params.DamageCauser = DamageCauser;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSControllerInterface.GetSkinLevel
// (Native, Public, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UKSControllerInterface::GetSkinLevel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSControllerInterface.GetSkinLevel");

	UKSControllerInterface_GetSkinLevel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSControllerInterface.GetSkinId
// (Native, Public, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UKSControllerInterface::GetSkinId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSControllerInterface.GetSkinId");

	UKSControllerInterface_GetSkinId_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSControllerInterface.GetKSPlayerState
// (Native, Public, Const)
// Parameters:
// class AKSPlayerState*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AKSPlayerState* UKSControllerInterface::GetKSPlayerState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSControllerInterface.GetKSPlayerState");

	UKSControllerInterface_GetKSPlayerState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSControllerInterface.GetKSCharacter
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AKSCharacterBase*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AKSCharacterBase* UKSControllerInterface::GetKSCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSControllerInterface.GetKSCharacter");

	UKSControllerInterface_GetKSCharacter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSControllerInterface.GetController
// (Native, Public)
// Parameters:
// class AController*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AController* UKSControllerInterface::GetController()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSControllerInterface.GetController");

	UKSControllerInterface_GetController_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSControllerInterface.GetCheatComponent
// (Native, Public, Const)
// Parameters:
// class UKSCheatComponent*       ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UKSCheatComponent* UKSControllerInterface::GetCheatComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSControllerInterface.GetCheatComponent");

	UKSControllerInterface_GetCheatComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSControllerInterface.GetBotId
// (Native, Public, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UKSControllerInterface::GetBotId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSControllerInterface.GetBotId");

	UKSControllerInterface_GetBotId_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSControlPoint.RemovePrimitiveToPawnOverlapCheck
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UPrimitiveComponent**    InPrimitive                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void AKSControlPoint::RemovePrimitiveToPawnOverlapCheck(class UPrimitiveComponent** InPrimitive)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSControlPoint.RemovePrimitiveToPawnOverlapCheck");

	AKSControlPoint_RemovePrimitiveToPawnOverlapCheck_Params params;
	params.InPrimitive = InPrimitive;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSControlPoint.OnTeamSidesFlipped
// (Final, Native, Public)

void AKSControlPoint::OnTeamSidesFlipped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSControlPoint.OnTeamSidesFlipped");

	AKSControlPoint_OnTeamSidesFlipped_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSControlPoint.OnEndOverlap
// (Final, Native, Private)
// Parameters:
// class UPrimitiveComponent**    OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor**                 OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent**    OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int*                           OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)

void AKSControlPoint::OnEndOverlap(class UPrimitiveComponent** OverlappedComponent, class AActor** OtherActor, class UPrimitiveComponent** OtherComp, int* OtherBodyIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSControlPoint.OnEndOverlap");

	AKSControlPoint_OnEndOverlap_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSControlPoint.OnBeginOverlap
// (Final, Native, Private, HasOutParms)
// Parameters:
// class UPrimitiveComponent**    OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor**                 OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent**    OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int*                           OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult*             SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void AKSControlPoint::OnBeginOverlap(class UPrimitiveComponent** OverlappedComponent, class AActor** OtherActor, class UPrimitiveComponent** OtherComp, int* OtherBodyIndex, bool* bFromSweep, struct FHitResult* SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSControlPoint.OnBeginOverlap");

	AKSControlPoint_OnBeginOverlap_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSControlPoint.AddPrimitiveToPawnOverlapCheck
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UPrimitiveComponent**    InPrimitive                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void AKSControlPoint::AddPrimitiveToPawnOverlapCheck(class UPrimitiveComponent** InPrimitive)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSControlPoint.AddPrimitiveToPawnOverlapCheck");

	AKSControlPoint_AddPrimitiveToPawnOverlapCheck_Params params;
	params.InPrimitive = InPrimitive;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCustomApparelComponent.GetSkinObject
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UMultiSkinObject*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UMultiSkinObject* UKSCustomApparelComponent::GetSkinObject()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCustomApparelComponent.GetSkinObject");

	UKSCustomApparelComponent_GetSkinObject_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCustomApparelComponent.GetCharacterOwner
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AKSCharacter*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AKSCharacter* UKSCustomApparelComponent::GetCharacterOwner()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCustomApparelComponent.GetCharacterOwner");

	UKSCustomApparelComponent_GetCharacterOwner_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCustomApparelComponent.GetApparelAsset
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UKSApparelAsset_CustomComponent* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UKSApparelAsset_CustomComponent* UKSCustomApparelComponent::GetApparelAsset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCustomApparelComponent.GetApparelAsset");

	UKSCustomApparelComponent_GetApparelAsset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSCustomApparelComponent.BlueprintFinishedInitialization
// (Event, Protected, BlueprintEvent)

void UKSCustomApparelComponent::BlueprintFinishedInitialization()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCustomApparelComponent.BlueprintFinishedInitialization");

	UKSCustomApparelComponent_BlueprintFinishedInitialization_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSDamageable.ReportDamageByInstigator
// (Native, Protected, HasOutParms, BlueprintCallable)
// Parameters:
// struct FCombatEventInfo*       DamageInfo                     (ConstParm, Parm, OutParm, ReferenceParm)

void UKSDamageable::ReportDamageByInstigator(struct FCombatEventInfo* DamageInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDamageable.ReportDamageByInstigator");

	UKSDamageable_ReportDamageByInstigator_Params params;
	params.DamageInfo = DamageInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSDamageable.GetHitLocationTypeFromBoneName
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FName*                  BoneName                       (Parm, ZeroConstructor, IsPlainOldData)
// EHitLocationType               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EHitLocationType UKSDamageable::GetHitLocationTypeFromBoneName(struct FName* BoneName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDamageable.GetHitLocationTypeFromBoneName");

	UKSDamageable_GetHitLocationTypeFromBoneName_Params params;
	params.BoneName = BoneName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSDamageable.DoesBoneAllowHeadshotPassthrough
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FName*                  BoneName                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSDamageable::DoesBoneAllowHeadshotPassthrough(struct FName* BoneName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDamageable.DoesBoneAllowHeadshotPassthrough");

	UKSDamageable_DoesBoneAllowHeadshotPassthrough_Params params;
	params.BoneName = BoneName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSDamageTypeBase.GetDefaultObjectPropertiesFromDamageType
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass**                 DamageTypeClass                (Parm, ZeroConstructor, IsPlainOldData)
// class UParticleSystem*         OutHitPawnEffect               (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class UAkAudioEvent*           OutHitBodyAudioEvent           (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class UAkAudioEvent*           OutHitHeadAudioEvent           (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class UAkAudioEvent*           OutHitByAudioEvent             (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void UKSDamageTypeBase::STATIC_GetDefaultObjectPropertiesFromDamageType(class UClass** DamageTypeClass, class UParticleSystem** OutHitPawnEffect, class UAkAudioEvent** OutHitBodyAudioEvent, class UAkAudioEvent** OutHitHeadAudioEvent, class UAkAudioEvent** OutHitByAudioEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDamageTypeBase.GetDefaultObjectPropertiesFromDamageType");

	UKSDamageTypeBase_GetDefaultObjectPropertiesFromDamageType_Params params;
	params.DamageTypeClass = DamageTypeClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutHitPawnEffect != nullptr)
		*OutHitPawnEffect = params.OutHitPawnEffect;
	if (OutHitBodyAudioEvent != nullptr)
		*OutHitBodyAudioEvent = params.OutHitBodyAudioEvent;
	if (OutHitHeadAudioEvent != nullptr)
		*OutHitHeadAudioEvent = params.OutHitHeadAudioEvent;
	if (OutHitByAudioEvent != nullptr)
		*OutHitByAudioEvent = params.OutHitByAudioEvent;
}


// Function Killstreak.KSWeaponTargetingModule.TickTargeting
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// float*                         DeltaSeconds                   (Parm, ZeroConstructor, IsPlainOldData)

void UKSWeaponTargetingModule::TickTargeting(float* DeltaSeconds)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponTargetingModule.TickTargeting");

	UKSWeaponTargetingModule_TickTargeting_Params params;
	params.DeltaSeconds = DeltaSeconds;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponTargetingModule.IsTargetingModeEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSWeaponTargetingModule::IsTargetingModeEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponTargetingModule.IsTargetingModeEnabled");

	UKSWeaponTargetingModule_IsTargetingModeEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponTargetingModule.IsAimedAtEnemy
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSWeaponTargetingModule::IsAimedAtEnemy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponTargetingModule.IsAimedAtEnemy");

	UKSWeaponTargetingModule_IsAimedAtEnemy_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponTargetingModule.GetWeaponComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UKSWeaponComponent*      ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UKSWeaponComponent* UKSWeaponTargetingModule::GetWeaponComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponTargetingModule.GetWeaponComponent");

	UKSWeaponTargetingModule_GetWeaponComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponTargetingModule.GetOwningCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AKSCharacter*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AKSCharacter* UKSWeaponTargetingModule::GetOwningCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponTargetingModule.GetOwningCharacter");

	UKSWeaponTargetingModule_GetOwningCharacter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponTargetingModule.ExitTargetingMode
// (Native, Event, Public, BlueprintEvent)

void UKSWeaponTargetingModule::ExitTargetingMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponTargetingModule.ExitTargetingMode");

	UKSWeaponTargetingModule_ExitTargetingMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponTargetingModule.EnterTargetingMode
// (Native, Event, Public, BlueprintEvent)

void UKSWeaponTargetingModule::EnterTargetingMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponTargetingModule.EnterTargetingMode");

	UKSWeaponTargetingModule_EnterTargetingMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSDefaultAimTargetingModule.IsWallMarkerActive
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 WallLocation                   (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSDefaultAimTargetingModule::IsWallMarkerActive(struct FVector* WallLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDefaultAimTargetingModule.IsWallMarkerActive");

	UKSDefaultAimTargetingModule_IsWallMarkerActive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (WallLocation != nullptr)
		*WallLocation = params.WallLocation;

	return params.ReturnValue;
}


// Function Killstreak.KSDefaultAimTargetingModule.IsCurrentlyBlocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSDefaultAimTargetingModule::IsCurrentlyBlocked()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDefaultAimTargetingModule.IsCurrentlyBlocked");

	UKSDefaultAimTargetingModule_IsCurrentlyBlocked_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSMapPoint.ShouldCrouch
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSMapPoint::ShouldCrouch()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMapPoint.ShouldCrouch");

	AKSMapPoint_ShouldCrouch_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSMapPoint.MatchesTags
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTagContainer*  InMapPointTypes                (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSMapPoint::MatchesTags(struct FGameplayTagContainer* InMapPointTypes)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMapPoint.MatchesTags");

	AKSMapPoint_MatchesTags_Params params;
	params.InMapPointTypes = InMapPointTypes;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSMapPoint.MatchesTag
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag*           InMapPointType                 (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSMapPoint::MatchesTag(struct FGameplayTag* InMapPointType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMapPoint.MatchesTag");

	AKSMapPoint_MatchesTag_Params params;
	params.InMapPointType = InMapPointType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSMapPoint.IsFriendly
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor**                 InActor                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSMapPoint::IsFriendly(class AActor** InActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMapPoint.IsFriendly");

	AKSMapPoint_IsFriendly_Params params;
	params.InActor = InActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSMapPoint.IsAvailable
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor**                 InActor                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSMapPoint::IsAvailable(class AActor** InActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMapPoint.IsAvailable");

	AKSMapPoint_IsAvailable_Params params;
	params.InActor = InActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSMapPoint.IsActive
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSMapPoint::IsActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMapPoint.IsActive");

	AKSMapPoint_IsActive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSDefensePoint.RelevantObjectiveUpdated
// (Final, Native, Protected)
// Parameters:
// class AKSObjectiveBase**       Objective                      (Parm, ZeroConstructor, IsPlainOldData)

void AKSDefensePoint::RelevantObjectiveUpdated(class AKSObjectiveBase** Objective)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDefensePoint.RelevantObjectiveUpdated");

	AKSDefensePoint_RelevantObjectiveUpdated_Params params;
	params.Objective = Objective;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSDefensePoint.GetTargetDefensePoint
// (Native, Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector AKSDefensePoint::GetTargetDefensePoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDefensePoint.GetTargetDefensePoint");

	AKSDefensePoint_GetTargetDefensePoint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSDeployable.ShouldSetFriendlyOutlineOnRegister
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSDeployable::ShouldSetFriendlyOutlineOnRegister()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDeployable.ShouldSetFriendlyOutlineOnRegister");

	UKSDeployable_ShouldSetFriendlyOutlineOnRegister_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSDeployable.SetOutlineColor
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                          Enabled                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FKSOutlineParameters*   OutlineParams                  (Parm)
// int*                           Color                          (Parm, ZeroConstructor, IsPlainOldData)

void UKSDeployable::SetOutlineColor(bool* Enabled, struct FKSOutlineParameters* OutlineParams, int* Color)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDeployable.SetOutlineColor");

	UKSDeployable_SetOutlineColor_Params params;
	params.Enabled = Enabled;
	params.OutlineParams = OutlineParams;
	params.Color = Color;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSDestroyableHazardComponent.ShouldFireAt
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSDestroyableHazardComponent::ShouldFireAt()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDestroyableHazardComponent.ShouldFireAt");

	UKSDestroyableHazardComponent_ShouldFireAt_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSDestroyableHazardComponent.ShouldEMP
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSDestroyableHazardComponent::ShouldEMP()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDestroyableHazardComponent.ShouldEMP");

	UKSDestroyableHazardComponent_ShouldEMP_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSDestructibleBase.UndoBadDestroy
// (Final, Native, Protected)

void AKSDestructibleBase::UndoBadDestroy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDestructibleBase.UndoBadDestroy");

	AKSDestructibleBase_UndoBadDestroy_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSDestructibleBase.SpeedGateOverlap
// (Final, Native, Protected, HasOutParms)
// Parameters:
// class UPrimitiveComponent**    OverlappedComp                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor**                 OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent**    OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int*                           OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult*             SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void AKSDestructibleBase::SpeedGateOverlap(class UPrimitiveComponent** OverlappedComp, class AActor** OtherActor, class UPrimitiveComponent** OtherComp, int* OtherBodyIndex, bool* bFromSweep, struct FHitResult* SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDestructibleBase.SpeedGateOverlap");

	AKSDestructibleBase_SpeedGateOverlap_Params params;
	params.OverlappedComp = OverlappedComp;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSDestructibleBase.SetupPreBroken
// (Final, Native, Protected)

void AKSDestructibleBase::SetupPreBroken()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDestructibleBase.SetupPreBroken");

	AKSDestructibleBase_SetupPreBroken_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSDestructibleBase.ResetDestructible
// (Final, Native, Public, BlueprintCallable)

void AKSDestructibleBase::ResetDestructible()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDestructibleBase.ResetDestructible");

	AKSDestructibleBase_ResetDestructible_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSDestructibleBase.PostDestructionEvent
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// class UAkAudioEvent**          InEvent                        (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AKSDestructibleBase::PostDestructionEvent(class UAkAudioEvent** InEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDestructibleBase.PostDestructionEvent");

	AKSDestructibleBase_PostDestructionEvent_Params params;
	params.InEvent = InEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSDestructibleBase.OnRoundChange
// (Final, Native, Protected, HasOutParms)
// Parameters:
// struct FRoundInitState*        RoundInitState                 (ConstParm, Parm, OutParm, ReferenceParm)

void AKSDestructibleBase::OnRoundChange(struct FRoundInitState* RoundInitState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDestructibleBase.OnRoundChange");

	AKSDestructibleBase_OnRoundChange_Params params;
	params.RoundInitState = RoundInitState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSDestructibleBase.OnRep_Health
// (Final, Native, Protected)

void AKSDestructibleBase::OnRep_Health()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDestructibleBase.OnRep_Health");

	AKSDestructibleBase_OnRep_Health_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSDestructibleBase.OnDestructionChange
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// bool*                          Destroyed                      (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bInitialSetup                  (Parm, ZeroConstructor, IsPlainOldData)

void AKSDestructibleBase::OnDestructionChange(bool* Destroyed, bool* bInitialSetup)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDestructibleBase.OnDestructionChange");

	AKSDestructibleBase_OnDestructionChange_Params params;
	params.Destroyed = Destroyed;
	params.bInitialSetup = bInitialSetup;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSDestructibleBase.OnDamageEvent
// (Net, NetReliable, Native, Event, NetMulticast, Protected, HasDefaults)
// Parameters:
// float*                         NewHealth                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                HitLocation                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                HitDirection                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                HitNormal                      (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          FromServer                     (Parm, ZeroConstructor, IsPlainOldData)

void AKSDestructibleBase::OnDamageEvent(float* NewHealth, struct FVector* HitLocation, struct FVector* HitDirection, struct FVector* HitNormal, bool* FromServer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDestructibleBase.OnDamageEvent");

	AKSDestructibleBase_OnDamageEvent_Params params;
	params.NewHealth = NewHealth;
	params.HitLocation = HitLocation;
	params.HitDirection = HitDirection;
	params.HitNormal = HitNormal;
	params.FromServer = FromServer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSDestructibleBase.GetMaxHealth
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSDestructibleBase::GetMaxHealth()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDestructibleBase.GetMaxHealth");

	AKSDestructibleBase_GetMaxHealth_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSDestructibleBase.GetCurrentHealth
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSDestructibleBase::GetCurrentHealth()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDestructibleBase.GetCurrentHealth");

	AKSDestructibleBase_GetCurrentHealth_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSDestructibleBase.BlueprintPrepareKillCamPlayback
// (Event, Protected, BlueprintEvent)

void AKSDestructibleBase::BlueprintPrepareKillCamPlayback()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDestructibleBase.BlueprintPrepareKillCamPlayback");

	AKSDestructibleBase_BlueprintPrepareKillCamPlayback_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSDropLocation.ShouldReverseWayPointSetDirection
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSDropLocation::ShouldReverseWayPointSetDirection()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDropLocation.ShouldReverseWayPointSetDirection");

	AKSDropLocation_ShouldReverseWayPointSetDirection_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSDropLocation.IncrementSelectionCount
// (Final, Native, Public, BlueprintCallable)

void AKSDropLocation::IncrementSelectionCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDropLocation.IncrementSelectionCount");

	AKSDropLocation_IncrementSelectionCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSDropLocation.HandleRoundSetup
// (Final, Native, Protected, HasOutParms)
// Parameters:
// struct FRoundInitState*        RoundInitState                 (ConstParm, Parm, OutParm, ReferenceParm)

void AKSDropLocation::HandleRoundSetup(struct FRoundInitState* RoundInitState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDropLocation.HandleRoundSetup");

	AKSDropLocation_HandleRoundSetup_Params params;
	params.RoundInitState = RoundInitState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSDropLocation.GetWayPointSet
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AKSWayPointSet*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AKSWayPointSet* AKSDropLocation::GetWayPointSet()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDropLocation.GetWayPointSet");

	AKSDropLocation_GetWayPointSet_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSDropLocation.GetValidSides
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<int>                    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<int> AKSDropLocation::GetValidSides()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDropLocation.GetValidSides");

	AKSDropLocation_GetValidSides_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSDropLocation.GetTargetDropLocation
// (Native, Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector AKSDropLocation::GetTargetDropLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDropLocation.GetTargetDropLocation");

	AKSDropLocation_GetTargetDropLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSDropLocation.GetNumTimesSelected
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AKSDropLocation::GetNumTimesSelected()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDropLocation.GetNumTimesSelected");

	AKSDropLocation_GetNumTimesSelected_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSDropLocation.GetFreefallXYDistance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSDropLocation::GetFreefallXYDistance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDropLocation.GetFreefallXYDistance");

	AKSDropLocation_GetFreefallXYDistance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSDropLocation.GetFreefallHeight
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSDropLocation::GetFreefallHeight()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDropLocation.GetFreefallHeight");

	AKSDropLocation_GetFreefallHeight_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSDropLocation.GetFlightDistanceModifier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSDropLocation::GetFlightDistanceModifier()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDropLocation.GetFlightDistanceModifier");

	AKSDropLocation_GetFlightDistanceModifier_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSDropShipLocation.OnDropShipSpawned
// (Event, Public, BlueprintEvent)

void AKSDropShipLocation::OnDropShipSpawned()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDropShipLocation.OnDropShipSpawned");

	AKSDropShipLocation_OnDropShipSpawned_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSDynamicMaskComponent.Wipe
// (Final, Native, Public, BlueprintCallable)

void UKSDynamicMaskComponent::Wipe()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDynamicMaskComponent.Wipe");

	UKSDynamicMaskComponent_Wipe_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSDynamicMaskComponent.GetColorAtPosition
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D*              Position                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FColor                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FColor UKSDynamicMaskComponent::GetColorAtPosition(struct FVector2D* Position)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDynamicMaskComponent.GetColorAtPosition");

	UKSDynamicMaskComponent_GetColorAtPosition_Params params;
	params.Position = Position;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSDynamicMaskComponent.DrawDodecagon
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D*              Position                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// float*                         Radius                         (Parm, ZeroConstructor, IsPlainOldData)

void UKSDynamicMaskComponent::DrawDodecagon(struct FVector2D* Position, float* Radius)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDynamicMaskComponent.DrawDodecagon");

	UKSDynamicMaskComponent_DrawDodecagon_Params params;
	params.Position = Position;
	params.Radius = Radius;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSDynamicMaskComponent.DrawBox
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D*              Position                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FVector2D*              Dimensions                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void UKSDynamicMaskComponent::DrawBox(struct FVector2D* Position, struct FVector2D* Dimensions)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDynamicMaskComponent.DrawBox");

	UKSDynamicMaskComponent_DrawBox_Params params;
	params.Position = Position;
	params.Dimensions = Dimensions;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSDynamicMaskComponent.ConvertToTargetFromWorld
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector*                WorldSpace                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FVector2D               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector2D UKSDynamicMaskComponent::ConvertToTargetFromWorld(struct FVector* WorldSpace)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDynamicMaskComponent.ConvertToTargetFromWorld");

	UKSDynamicMaskComponent_ConvertToTargetFromWorld_Params params;
	params.WorldSpace = WorldSpace;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSEmote.ShouldPreventPlay
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EKSEmoteInterruptReason*       InReason                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSEmote::ShouldPreventPlay(EKSEmoteInterruptReason* InReason)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmote.ShouldPreventPlay");

	UKSEmote_ShouldPreventPlay_Params params;
	params.InReason = InReason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSEmote.ShouldInterrupt
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EKSEmoteInterruptReason*       InReason                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSEmote::ShouldInterrupt(EKSEmoteInterruptReason* InReason)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmote.ShouldInterrupt");

	UKSEmote_ShouldInterrupt_Params params;
	params.InReason = InReason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSEmote.GetLockPawnRotationWhilePlaying
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSEmote::GetLockPawnRotationWhilePlaying()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmote.GetLockPawnRotationWhilePlaying");

	UKSEmote_GetLockPawnRotationWhilePlaying_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSEmote.GetEmotionToApply
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EKSEmotion                     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EKSEmotion UKSEmote::GetEmotionToApply()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmote.GetEmotionToApply");

	UKSEmote_GetEmotionToApply_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSEmote.GetEmoteInstanceClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)

void UKSEmote::GetEmoteInstanceClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmote.GetEmoteInstanceClass");

	UKSEmote_GetEmoteInstanceClass_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEmote.GetEmoteCosmeticClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)

void UKSEmote::GetEmoteCosmeticClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmote.GetEmoteCosmeticClass");

	UKSEmote_GetEmoteCosmeticClass_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEquipmentCosmeticComponent.OnRep_EquipPoint
// (Final, Native, Protected)

void UKSEquipmentCosmeticComponent::OnRep_EquipPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEquipmentCosmeticComponent.OnRep_EquipPoint");

	UKSEquipmentCosmeticComponent_OnRep_EquipPoint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEquipmentCosmeticComponent.OnRep_EquipmentId
// (Native, Protected)

void UKSEquipmentCosmeticComponent::OnRep_EquipmentId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEquipmentCosmeticComponent.OnRep_EquipmentId");

	UKSEquipmentCosmeticComponent_OnRep_EquipmentId_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEquipmentCosmeticComponent.IsOwnerDeadOrDestroyed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSEquipmentCosmeticComponent::IsOwnerDeadOrDestroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEquipmentCosmeticComponent.IsOwnerDeadOrDestroyed");

	UKSEquipmentCosmeticComponent_IsOwnerDeadOrDestroyed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSEquipmentCosmeticComponent.IsLocallyViewed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSEquipmentCosmeticComponent::IsLocallyViewed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEquipmentCosmeticComponent.IsLocallyViewed");

	UKSEquipmentCosmeticComponent_IsLocallyViewed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSEquipmentCosmeticComponent.IsLocallyManaged
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSEquipmentCosmeticComponent::IsLocallyManaged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEquipmentCosmeticComponent.IsLocallyManaged");

	UKSEquipmentCosmeticComponent_IsLocallyManaged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSEquipmentCosmeticComponent.IsInAction
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSEquipmentCosmeticComponent::IsInAction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEquipmentCosmeticComponent.IsInAction");

	UKSEquipmentCosmeticComponent_IsInAction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSEquipmentCosmeticComponent.GetEquipPoint
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag            ReturnValue                    (Parm, OutParm, ReturnParm)

struct FGameplayTag UKSEquipmentCosmeticComponent::GetEquipPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEquipmentCosmeticComponent.GetEquipPoint");

	UKSEquipmentCosmeticComponent_GetEquipPoint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSEquipmentCosmeticComponent.GetCharAnimInstance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UKSCharacterAnimInst*    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UKSCharacterAnimInst* UKSEquipmentCosmeticComponent::GetCharAnimInstance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEquipmentCosmeticComponent.GetCharAnimInstance");

	UKSEquipmentCosmeticComponent_GetCharAnimInstance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSEquipmentCosmeticComponent.GetCharacterOwner
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AKSCharacter*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AKSCharacter* UKSEquipmentCosmeticComponent::GetCharacterOwner()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEquipmentCosmeticComponent.GetCharacterOwner");

	UKSEquipmentCosmeticComponent_GetCharacterOwner_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSEquipmentCosmeticComponent.GetCharacterMesh
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USkeletalMeshComponent*  ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class USkeletalMeshComponent* UKSEquipmentCosmeticComponent::GetCharacterMesh()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEquipmentCosmeticComponent.GetCharacterMesh");

	UKSEquipmentCosmeticComponent_GetCharacterMesh_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSEquipmentCosmeticComponent.BlueprintOwnerSkinTagContainerChanged
// (Event, Protected, BlueprintEvent)

void UKSEquipmentCosmeticComponent::BlueprintOwnerSkinTagContainerChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEquipmentCosmeticComponent.BlueprintOwnerSkinTagContainerChanged");

	UKSEquipmentCosmeticComponent_BlueprintOwnerSkinTagContainerChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEmoteCosmeticComponent.OnRep_PlayTicker
// (Final, Native, Private)

void UKSEmoteCosmeticComponent::OnRep_PlayTicker()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmoteCosmeticComponent.OnRep_PlayTicker");

	UKSEmoteCosmeticComponent_OnRep_PlayTicker_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEmoteCosmeticComponent.OnRep_EmoteAsset
// (Final, Native, Private)

void UKSEmoteCosmeticComponent::OnRep_EmoteAsset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmoteCosmeticComponent.OnRep_EmoteAsset");

	UKSEmoteCosmeticComponent_OnRep_EmoteAsset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEmoteCosmeticComponent.OnInitialize
// (Event, Protected, BlueprintEvent)

void UKSEmoteCosmeticComponent::OnInitialize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmoteCosmeticComponent.OnInitialize");

	UKSEmoteCosmeticComponent_OnInitialize_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEmoteCosmeticComponent.MarkStopped
// (Final, Native, Protected, BlueprintCallable)

void UKSEmoteCosmeticComponent::MarkStopped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmoteCosmeticComponent.MarkStopped");

	UKSEmoteCosmeticComponent_MarkStopped_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEmoteCosmeticComponent.MarkPlaying
// (Final, Native, Protected, BlueprintCallable)

void UKSEmoteCosmeticComponent::MarkPlaying()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmoteCosmeticComponent.MarkPlaying");

	UKSEmoteCosmeticComponent_MarkPlaying_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEmoteCosmeticComponent.IsPlaying
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSEmoteCosmeticComponent::IsPlaying()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmoteCosmeticComponent.IsPlaying");

	UKSEmoteCosmeticComponent_IsPlaying_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSEmoteCosmeticComponent.IsInitialized
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSEmoteCosmeticComponent::IsInitialized()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmoteCosmeticComponent.IsInitialized");

	UKSEmoteCosmeticComponent_IsInitialized_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSEmoteCosmeticComponent.GetSkinObject
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UMultiSkinObject*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UMultiSkinObject* UKSEmoteCosmeticComponent::GetSkinObject()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmoteCosmeticComponent.GetSkinObject");

	UKSEmoteCosmeticComponent_GetSkinObject_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSEmoteCosmeticComponent.GetEmoteAsset
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UKSEmote*                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UKSEmote* UKSEmoteCosmeticComponent::GetEmoteAsset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmoteCosmeticComponent.GetEmoteAsset");

	UKSEmoteCosmeticComponent_GetEmoteAsset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSEmoteCosmeticComponent.BlueprintPlayEmote
// (Event, Protected, BlueprintEvent)

void UKSEmoteCosmeticComponent::BlueprintPlayEmote()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmoteCosmeticComponent.BlueprintPlayEmote");

	UKSEmoteCosmeticComponent_BlueprintPlayEmote_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEmoteCosmeticComponent.BlueprintInterruptEmote
// (Event, Protected, BlueprintEvent)
// Parameters:
// EKSEmoteInterruptReason*       Reason                         (Parm, ZeroConstructor, IsPlainOldData)

void UKSEmoteCosmeticComponent::BlueprintInterruptEmote(EKSEmoteInterruptReason* Reason)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmoteCosmeticComponent.BlueprintInterruptEmote");

	UKSEmoteCosmeticComponent_BlueprintInterruptEmote_Params params;
	params.Reason = Reason;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEmoteCosmeticComponent_Spray.NetMulticastPlaySpray
// (Net, Native, Event, NetMulticast, Protected, HasDefaults)
// Parameters:
// struct FVector*                SprayLocation                  (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FRotator*               SprayRotation                  (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// class UPrimitiveComponent**    SprayTarget                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UKSEmoteCosmeticComponent_Spray::NetMulticastPlaySpray(struct FVector* SprayLocation, struct FRotator* SprayRotation, class UPrimitiveComponent** SprayTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmoteCosmeticComponent_Spray.NetMulticastPlaySpray");

	UKSEmoteCosmeticComponent_Spray_NetMulticastPlaySpray_Params params;
	params.SprayLocation = SprayLocation;
	params.SprayRotation = SprayRotation;
	params.SprayTarget = SprayTarget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEmoteCosmeticComponent_Spray.BlueprintPlaySpray
// (Event, Protected, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector*                SprayLocation                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FRotator*               SprayRotation                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// class UPrimitiveComponent**    SprayTarget                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UKSEmoteCosmeticComponent_Spray::BlueprintPlaySpray(struct FVector* SprayLocation, struct FRotator* SprayRotation, class UPrimitiveComponent** SprayTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmoteCosmeticComponent_Spray.BlueprintPlaySpray");

	UKSEmoteCosmeticComponent_Spray_BlueprintPlaySpray_Params params;
	params.SprayLocation = SprayLocation;
	params.SprayRotation = SprayRotation;
	params.SprayTarget = SprayTarget;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEmoteInstance.ServerPlayEmote
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void AKSEmoteInstance::ServerPlayEmote()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmoteInstance.ServerPlayEmote");

	AKSEmoteInstance_ServerPlayEmote_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEmoteInstance.ServerForceStopEmote
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void AKSEmoteInstance::ServerForceStopEmote()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmoteInstance.ServerForceStopEmote");

	AKSEmoteInstance_ServerForceStopEmote_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEmoteInstance.PlayEmote
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// EKSEmoteInterruptReason        OutInterruptReason             (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSEmoteInstance::PlayEmote(EKSEmoteInterruptReason* OutInterruptReason)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmoteInstance.PlayEmote");

	AKSEmoteInstance_PlayEmote_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutInterruptReason != nullptr)
		*OutInterruptReason = params.OutInterruptReason;

	return params.ReturnValue;
}


// Function Killstreak.KSEmoteInstance.OnRep_EmoteAsset
// (Native, Protected)

void AKSEmoteInstance::OnRep_EmoteAsset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmoteInstance.OnRep_EmoteAsset");

	AKSEmoteInstance_OnRep_EmoteAsset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEmoteInstance.IsManagingEmoteLocally
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSEmoteInstance::IsManagingEmoteLocally()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmoteInstance.IsManagingEmoteLocally");

	AKSEmoteInstance_IsManagingEmoteLocally_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSEmoteInstance.GetEmoteCosmeticComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UKSEmoteCosmeticComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UKSEmoteCosmeticComponent* AKSEmoteInstance::GetEmoteCosmeticComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmoteInstance.GetEmoteCosmeticComponent");

	AKSEmoteInstance_GetEmoteCosmeticComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSEmoteInstance.GetEmoteAsset
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UKSEmote*                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UKSEmote* AKSEmoteInstance::GetEmoteAsset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmoteInstance.GetEmoteAsset");

	AKSEmoteInstance_GetEmoteAsset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSEmoteInstance.GetActiveCharacterOwner
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AKSCharacter*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AKSCharacter* AKSEmoteInstance::GetActiveCharacterOwner()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmoteInstance.GetActiveCharacterOwner");

	AKSEmoteInstance_GetActiveCharacterOwner_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSEmoteInstance.ForceStopEmote
// (Final, Native, Public, BlueprintCallable)

void AKSEmoteInstance::ForceStopEmote()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmoteInstance.ForceStopEmote");

	AKSEmoteInstance_ForceStopEmote_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEmoteInstance.DoEmote
// (Native, Event, Protected, BlueprintEvent)

void AKSEmoteInstance::DoEmote()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmoteInstance.DoEmote");

	AKSEmoteInstance_DoEmote_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEmoteInstance.CanPlayEmoteNow
// (Native, Event, Public, HasOutParms, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// EKSEmoteInterruptReason        OutInterruptReason             (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSEmoteInstance::CanPlayEmoteNow(EKSEmoteInterruptReason* OutInterruptReason)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmoteInstance.CanPlayEmoteNow");

	AKSEmoteInstance_CanPlayEmoteNow_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutInterruptReason != nullptr)
		*OutInterruptReason = params.OutInterruptReason;

	return params.ReturnValue;
}


// Function Killstreak.KSEmoteInstance_Spray.ServerPlaySpray
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// struct FAimData*               InSprayAim                     (ConstParm, Parm, ReferenceParm)

void AKSEmoteInstance_Spray::ServerPlaySpray(struct FAimData* InSprayAim)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmoteInstance_Spray.ServerPlaySpray");

	AKSEmoteInstance_Spray_ServerPlaySpray_Params params;
	params.InSprayAim = InSprayAim;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEmotionComponentOwner.GetEmotionFloat
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSEmotionComponentOwner::GetEmotionFloat()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmotionComponentOwner.GetEmotionFloat");

	UKSEmotionComponentOwner_GetEmotionFloat_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSEmotionComponentOwner.GetEmotion
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EKSEmotion                     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EKSEmotion UKSEmotionComponentOwner::GetEmotion()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmotionComponentOwner.GetEmotion");

	UKSEmotionComponentOwner_GetEmotion_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSEmotionComponent.RemoveEmotionById
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int*                           InstanceId                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSEmotionComponent::RemoveEmotionById(int* InstanceId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmotionComponent.RemoveEmotionById");

	UKSEmotionComponent_RemoveEmotionById_Params params;
	params.InstanceId = InstanceId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSEmotionComponent.RemoveEmotion
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EKSEmotion*                    InEmotion                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UKSEmotionComponent::RemoveEmotion(EKSEmotion* InEmotion)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmotionComponent.RemoveEmotion");

	UKSEmotionComponent_RemoveEmotion_Params params;
	params.InEmotion = InEmotion;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSEmotionComponent.GetEmotionComponentOwner
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TScriptInterface<class UKSEmotionComponentOwner> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TScriptInterface<class UKSEmotionComponentOwner> UKSEmotionComponent::GetEmotionComponentOwner()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmotionComponent.GetEmotionComponentOwner");

	UKSEmotionComponent_GetEmotionComponentOwner_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSEmotionComponent.GetCurrentEmotion
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EKSEmotion                     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EKSEmotion UKSEmotionComponent::GetCurrentEmotion()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmotionComponent.GetCurrentEmotion");

	UKSEmotionComponent_GetCurrentEmotion_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSEmotionComponent.AddEmotionInternal
// (Final, Native, Private)
// Parameters:
// EKSEmotion*                    Emotion                        (Parm, ZeroConstructor, IsPlainOldData)
// int*                           ID                             (Parm, ZeroConstructor, IsPlainOldData)

void UKSEmotionComponent::AddEmotionInternal(EKSEmotion* Emotion, int* ID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmotionComponent.AddEmotionInternal");

	UKSEmotionComponent_AddEmotionInternal_Params params;
	params.Emotion = Emotion;
	params.ID = ID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEmotionComponent.AddEmotionForDuration
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EKSEmotion*                    InEmotion                      (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Duration                       (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UKSEmotionComponent::AddEmotionForDuration(EKSEmotion* InEmotion, float* Duration)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmotionComponent.AddEmotionForDuration");

	UKSEmotionComponent_AddEmotionForDuration_Params params;
	params.InEmotion = InEmotion;
	params.Duration = Duration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSEmotionComponent.AddEmotion
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EKSEmotion*                    InEmotion                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UKSEmotionComponent::AddEmotion(EKSEmotion* InEmotion)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmotionComponent.AddEmotion");

	UKSEmotionComponent_AddEmotion_Params params;
	params.InEmotion = InEmotion;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSEmotionComponent.AddAndRemoveEmotion
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EKSEmotion*                    InEmotion                      (Parm, ZeroConstructor, IsPlainOldData)
// int*                           InInstanceID                   (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UKSEmotionComponent::AddAndRemoveEmotion(EKSEmotion* InEmotion, int* InInstanceID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmotionComponent.AddAndRemoveEmotion");

	UKSEmotionComponent_AddAndRemoveEmotion_Params params;
	params.InEmotion = InEmotion;
	params.InInstanceID = InInstanceID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameRuleComponent.OnTeamSidesFlipped
// (Native, Protected)

void UKSGameRuleComponent::OnTeamSidesFlipped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameRuleComponent.OnTeamSidesFlipped");

	UKSGameRuleComponent_OnTeamSidesFlipped_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameRuleComponent.NewPlayerStarting
// (Native, Protected)
// Parameters:
// class APlayerController**      NewPlayer                      (Parm, ZeroConstructor, IsPlainOldData)

void UKSGameRuleComponent::NewPlayerStarting(class APlayerController** NewPlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameRuleComponent.NewPlayerStarting");

	UKSGameRuleComponent_NewPlayerStarting_Params params;
	params.NewPlayer = NewPlayer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameRuleComponent.NewBotStarting
// (Native, Protected)
// Parameters:
// class AKSAIController**        NewBot                         (Parm, ZeroConstructor, IsPlainOldData)

void UKSGameRuleComponent::NewBotStarting(class AKSAIController** NewBot)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameRuleComponent.NewBotStarting");

	UKSGameRuleComponent_NewBotStarting_Params params;
	params.NewBot = NewBot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEnforcedEquipmentState.OnRep_EnforcedItems
// (Final, Native, Protected)

void AKSEnforcedEquipmentState::OnRep_EnforcedItems()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEnforcedEquipmentState.OnRep_EnforcedItems");

	AKSEnforcedEquipmentState_OnRep_EnforcedItems_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEnvironmentVolumeActor.UpdateEnvironmentTag
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FName*                  NewTag                         (Parm, ZeroConstructor, IsPlainOldData)

void AKSEnvironmentVolumeActor::UpdateEnvironmentTag(struct FName* NewTag)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEnvironmentVolumeActor.UpdateEnvironmentTag");

	AKSEnvironmentVolumeActor_UpdateEnvironmentTag_Params params;
	params.NewTag = NewTag;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEquipmentManagerComponent.SetEquipmentContainerOwner
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TScriptInterface<class UKSEquipmentContainerOwner>* InEquipmentContainerOwner      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void UKSEquipmentManagerComponent::SetEquipmentContainerOwner(TScriptInterface<class UKSEquipmentContainerOwner>* InEquipmentContainerOwner)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEquipmentManagerComponent.SetEquipmentContainerOwner");

	UKSEquipmentManagerComponent_SetEquipmentContainerOwner_Params params;
	params.InEquipmentContainerOwner = InEquipmentContainerOwner;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEquipmentManagerComponent.OnItemDropped
// (Final, Native, Public)
// Parameters:
// class UKSItem**                InItem                         (Parm, ZeroConstructor, IsPlainOldData)
// class AKSItemDrop**            InDrop                         (Parm, ZeroConstructor, IsPlainOldData)

void UKSEquipmentManagerComponent::OnItemDropped(class UKSItem** InItem, class AKSItemDrop** InDrop)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEquipmentManagerComponent.OnItemDropped");

	UKSEquipmentManagerComponent_OnItemDropped_Params params;
	params.InItem = InItem;
	params.InDrop = InDrop;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEquipmentManagerComponent.GetEquipmentByEquipPoint
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag*           InEquipPoint                   (ConstParm, Parm, OutParm, ReferenceParm)
// class AKSEquipment*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AKSEquipment* UKSEquipmentManagerComponent::GetEquipmentByEquipPoint(struct FGameplayTag* InEquipPoint)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEquipmentManagerComponent.GetEquipmentByEquipPoint");

	UKSEquipmentManagerComponent_GetEquipmentByEquipPoint_Params params;
	params.InEquipPoint = InEquipPoint;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSEscapePoint.OnEscapeOverlapEnd
// (Final, Native, Protected)
// Parameters:
// class UPrimitiveComponent**    OverlappedComp                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor**                 OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent**    OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int*                           OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)

void AKSEscapePoint::OnEscapeOverlapEnd(class UPrimitiveComponent** OverlappedComp, class AActor** OtherActor, class UPrimitiveComponent** OtherComp, int* OtherBodyIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEscapePoint.OnEscapeOverlapEnd");

	AKSEscapePoint_OnEscapeOverlapEnd_Params params;
	params.OverlappedComp = OverlappedComp;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEscapePoint.OnEscapeOverlapBegin
// (Final, Native, Protected, HasOutParms)
// Parameters:
// class UPrimitiveComponent**    OverlappedComp                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor**                 OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent**    OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int*                           OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult*             SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void AKSEscapePoint::OnEscapeOverlapBegin(class UPrimitiveComponent** OverlappedComp, class AActor** OtherActor, class UPrimitiveComponent** OtherComp, int* OtherBodyIndex, bool* bFromSweep, struct FHitResult* SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEscapePoint.OnEscapeOverlapBegin");

	AKSEscapePoint_OnEscapeOverlapBegin_Params params;
	params.OverlappedComp = OverlappedComp;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEscapePoint.NotifyBots
// (Final, Native, Protected)

void AKSEscapePoint::NotifyBots()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEscapePoint.NotifyBots");

	AKSEscapePoint_NotifyBots_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEventTracker.TriggerEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int*                           Count                          (Parm, ZeroConstructor, IsPlainOldData)

void UKSEventTracker::TriggerEvent(int* Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEventTracker.TriggerEvent");

	UKSEventTracker_TriggerEvent_Params params;
	params.Count = Count;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEventTracker.TickTracker
// (Event, Public, BlueprintEvent)
// Parameters:
// float*                         DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void UKSEventTracker::TickTracker(float* DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEventTracker.TickTracker");

	UKSEventTracker_TickTracker_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEventTracker.HandleTrackerInitialized
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// TMap<struct FString, float>*   Config                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UKSEventTracker::HandleTrackerInitialized(TMap<struct FString, float>* Config)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEventTracker.HandleTrackerInitialized");

	UKSEventTracker_HandleTrackerInitialized_Params params;
	params.Config = Config;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEventTracker.HandleLostPlayerController
// (Event, Public, BlueprintEvent)

void UKSEventTracker::HandleLostPlayerController()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEventTracker.HandleLostPlayerController");

	UKSEventTracker_HandleLostPlayerController_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEventTracker.GetGameState
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AKSGameState*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AKSGameState* UKSEventTracker::GetGameState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEventTracker.GetGameState");

	UKSEventTracker_GetGameState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSEventTracker.GetGameMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AKSGameMode*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AKSGameMode* UKSEventTracker::GetGameMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEventTracker.GetGameMode");

	UKSEventTracker_GetGameMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSEventTracker.GetGameInstance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UKSGameInstance*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UKSGameInstance* UKSEventTracker::GetGameInstance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEventTracker.GetGameInstance");

	UKSEventTracker_GetGameInstance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSExtinguisher.ShouldExtinguishRightNow
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSExtinguisher::ShouldExtinguishRightNow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSExtinguisher.ShouldExtinguishRightNow");

	UKSExtinguisher_ShouldExtinguishRightNow_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSExtractionPickup.IsPickupUsed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSExtractionPickup::IsPickupUsed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSExtractionPickup.IsPickupUsed");

	AKSExtractionPickup_IsPickupUsed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSExtractionPickup.IsPickupEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSExtractionPickup::IsPickupEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSExtractionPickup.IsPickupEnabled");

	AKSExtractionPickup_IsPickupEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSExtractionPickup.DeactivatePickup
// (Final, Native, Public, BlueprintCallable)

void AKSExtractionPickup::DeactivatePickup()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSExtractionPickup.DeactivatePickup");

	AKSExtractionPickup_DeactivatePickup_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSExtractionPickup.ActivatePickup
// (Final, Native, Public, BlueprintCallable)

void AKSExtractionPickup::ActivatePickup()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSExtractionPickup.ActivatePickup");

	AKSExtractionPickup_ActivatePickup_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSFinalBlowTracker.HandleOnLastPlayer
// (Final, Native, Public)
// Parameters:
// class AKSPlayerState**         LastPlayer                     (Parm, ZeroConstructor, IsPlainOldData)

void UKSFinalBlowTracker::HandleOnLastPlayer(class AKSPlayerState** LastPlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSFinalBlowTracker.HandleOnLastPlayer");

	UKSFinalBlowTracker_HandleOnLastPlayer_Params params;
	params.LastPlayer = LastPlayer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSFinalBlowTracker.CheckLastPlayer
// (Final, Native, Public)
// Parameters:
// struct FCombatEventInfo*       ElimEvent                      (Parm)
// class AKSPlayerState**         LastPlayer                     (Parm, ZeroConstructor, IsPlainOldData)

void UKSFinalBlowTracker::CheckLastPlayer(struct FCombatEventInfo* ElimEvent, class AKSPlayerState** LastPlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSFinalBlowTracker.CheckLastPlayer");

	UKSFinalBlowTracker_CheckLastPlayer_Params params;
	params.ElimEvent = ElimEvent;
	params.LastPlayer = LastPlayer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSFirstBloodTracker.HandleTrackerAccolade
// (Final, Native, Public)
// Parameters:
// class AKSPlayerState**         PlayerState                    (Parm, ZeroConstructor, IsPlainOldData)

void UKSFirstBloodTracker::HandleTrackerAccolade(class AKSPlayerState** PlayerState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSFirstBloodTracker.HandleTrackerAccolade");

	UKSFirstBloodTracker_HandleTrackerAccolade_Params params;
	params.PlayerState = PlayerState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSFlightRecoveryVolume.OnOverlapEnd
// (Final, Native, Public)
// Parameters:
// class AActor**                 OverlappedActor                (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)

void AKSFlightRecoveryVolume::OnOverlapEnd(class AActor** OverlappedActor, class AActor** OtherActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSFlightRecoveryVolume.OnOverlapEnd");

	AKSFlightRecoveryVolume_OnOverlapEnd_Params params;
	params.OverlappedActor = OverlappedActor;
	params.OtherActor = OtherActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSFlightRecoveryVolume.OnOverlapBegin
// (Final, Native, Public)
// Parameters:
// class AActor**                 OverlappedActor                (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)

void AKSFlightRecoveryVolume::OnOverlapBegin(class AActor** OverlappedActor, class AActor** OtherActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSFlightRecoveryVolume.OnOverlapBegin");

	AKSFlightRecoveryVolume_OnOverlapBegin_Params params;
	params.OverlappedActor = OverlappedActor;
	params.OtherActor = OtherActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSFootstepOverrideInterface.GetPriorityLevel
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSFootstepOverrideInterface::GetPriorityLevel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSFootstepOverrideInterface.GetPriorityLevel");

	UKSFootstepOverrideInterface_GetPriorityLevel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSFootstepOverrideInterface.GetOverrideByLocation
// (Native, Event, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector*                WorldLocation                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// bool                           outShouldOverride              (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// struct FName                   outOverrideName                (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void UKSFootstepOverrideInterface::GetOverrideByLocation(struct FVector* WorldLocation, bool* outShouldOverride, struct FName* outOverrideName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSFootstepOverrideInterface.GetOverrideByLocation");

	UKSFootstepOverrideInterface_GetOverrideByLocation_Params params;
	params.WorldLocation = WorldLocation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (outShouldOverride != nullptr)
		*outShouldOverride = params.outShouldOverride;
	if (outOverrideName != nullptr)
		*outOverrideName = params.outOverrideName;
}


// Function Killstreak.KSGadgetAssetDrop.GetLabelInfoForGadgetDescription
// (Native, Event, Public, HasOutParms, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FText                   DescriptionText                (Parm, OutParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSGadgetAssetDrop::GetLabelInfoForGadgetDescription(struct FText* DescriptionText)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGadgetAssetDrop.GetLabelInfoForGadgetDescription");

	AKSGadgetAssetDrop_GetLabelInfoForGadgetDescription_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (DescriptionText != nullptr)
		*DescriptionText = params.DescriptionText;

	return params.ReturnValue;
}


// Function Killstreak.KSGameEngine.SetGoPlayMapTravelDelayed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          DelayGoPlayMap                 (Parm, ZeroConstructor, IsPlainOldData)

void UKSGameEngine::SetGoPlayMapTravelDelayed(bool* DelayGoPlayMap)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameEngine.SetGoPlayMapTravelDelayed");

	UKSGameEngine_SetGoPlayMapTravelDelayed_Params params;
	params.DelayGoPlayMap = DelayGoPlayMap;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameEngine.SetGoPlayMapDelayTimeoutLimit
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float*                         DelayTimeoutLimit              (Parm, ZeroConstructor, IsPlainOldData)

void UKSGameEngine::SetGoPlayMapDelayTimeoutLimit(float* DelayTimeoutLimit)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameEngine.SetGoPlayMapDelayTimeoutLimit");

	UKSGameEngine_SetGoPlayMapDelayTimeoutLimit_Params params;
	params.DelayTimeoutLimit = DelayTimeoutLimit;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameEngine.QuickGoPlayCachedMap
// (Final, Native, Public, BlueprintCallable)

void UKSGameEngine::QuickGoPlayCachedMap()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameEngine.QuickGoPlayCachedMap");

	UKSGameEngine_QuickGoPlayCachedMap_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameEngine.OnTriggerGoPlayMap
// (Final, Native, Public, BlueprintCallable)

void UKSGameEngine::OnTriggerGoPlayMap()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameEngine.OnTriggerGoPlayMap");

	UKSGameEngine_OnTriggerGoPlayMap_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameEngine.GetGoPlayMapTravelDelayed
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSGameEngine::GetGoPlayMapTravelDelayed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameEngine.GetGoPlayMapTravelDelayed");

	UKSGameEngine_GetGoPlayMapTravelDelayed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameEngine.GetGoPlayMapDelayTimeoutLimit
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSGameEngine::GetGoPlayMapDelayTimeoutLimit()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameEngine.GetGoPlayMapDelayTimeoutLimit");

	UKSGameEngine_GetGoPlayMapDelayTimeoutLimit_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameEngine.FinishGoPlayMap
// (Final, Native, Private)

void UKSGameEngine::FinishGoPlayMap()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameEngine.FinishGoPlayMap");

	UKSGameEngine_FinishGoPlayMap_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameEngine.CancelDelayedGoPlayMap
// (Final, Native, Public, BlueprintCallable)

void UKSGameEngine::CancelDelayedGoPlayMap()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameEngine.CancelDelayedGoPlayMap");

	UKSGameEngine_CancelDelayedGoPlayMap_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameInstance.UpdateRecordedAnimStats
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TMap<struct FName, struct FKSAnimStats> NewStats                       (Parm, OutParm, ZeroConstructor)

void UKSGameInstance::UpdateRecordedAnimStats(TMap<struct FName, struct FKSAnimStats>* NewStats)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameInstance.UpdateRecordedAnimStats");

	UKSGameInstance_UpdateRecordedAnimStats_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (NewStats != nullptr)
		*NewStats = params.NewStats;
}


// Function Killstreak.KSGameInstance.HandleAppResume
// (Final, Native, Public)

void UKSGameInstance::HandleAppResume()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameInstance.HandleAppResume");

	UKSGameInstance_HandleAppResume_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameInstance.HandleAppReactivated
// (Final, Native, Public)

void UKSGameInstance::HandleAppReactivated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameInstance.HandleAppReactivated");

	UKSGameInstance_HandleAppReactivated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameInstance.GetWeaponMasteryManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UKSWeaponMasteryManager* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UKSWeaponMasteryManager* UKSGameInstance::GetWeaponMasteryManager()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameInstance.GetWeaponMasteryManager");

	UKSGameInstance_GetWeaponMasteryManager_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameInstance.GetStoreItemHelper
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UPUMG_StoreItemHelper*   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UPUMG_StoreItemHelper* UKSGameInstance::GetStoreItemHelper()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameInstance.GetStoreItemHelper");

	UKSGameInstance_GetStoreItemHelper_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameInstance.GetPlayerStatsManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UKSPlayerStatsManager*   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UKSPlayerStatsManager* UKSGameInstance::GetPlayerStatsManager()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameInstance.GetPlayerStatsManager");

	UKSGameInstance_GetPlayerStatsManager_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameInstance.GetPlayerInventoryHelper
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UKSPlayerInventoryHelper* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UKSPlayerInventoryHelper* UKSGameInstance::GetPlayerInventoryHelper()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameInstance.GetPlayerInventoryHelper");

	UKSGameInstance_GetPlayerInventoryHelper_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameInstance.GetNPETrackManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UKSNPETrackManager*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UKSNPETrackManager* UKSGameInstance::GetNPETrackManager()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameInstance.GetNPETrackManager");

	UKSGameInstance_GetNPETrackManager_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameInstance.GetMercMasteryManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UKSMercMasteryManager*   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UKSMercMasteryManager* UKSGameInstance::GetMercMasteryManager()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameInstance.GetMercMasteryManager");

	UKSGameInstance_GetMercMasteryManager_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameInstance.GetLoadingScreenImage
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FString*                InMapName                      (Parm, ZeroConstructor)
// struct FText                   MapDisplayName                 (Parm, OutParm)
// struct FText                   MapRegion                      (Parm, OutParm)
// struct FText                   MapDescription                 (Parm, OutParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSGameInstance::GetLoadingScreenImage(struct FString* InMapName, struct FText* MapDisplayName, struct FText* MapRegion, struct FText* MapDescription)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameInstance.GetLoadingScreenImage");

	UKSGameInstance_GetLoadingScreenImage_Params params;
	params.InMapName = InMapName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (MapDisplayName != nullptr)
		*MapDisplayName = params.MapDisplayName;
	if (MapRegion != nullptr)
		*MapRegion = params.MapRegion;
	if (MapDescription != nullptr)
		*MapDescription = params.MapDescription;

	return params.ReturnValue;
}


// Function Killstreak.KSGameInstance.GetAwardsManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UKSAwardsManager*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UKSAwardsManager* UKSGameInstance::GetAwardsManager()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameInstance.GetAwardsManager");

	UKSGameInstance_GetAwardsManager_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameInstance.ExportAnimAudit
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString*                Filename                       (ConstParm, Parm, ZeroConstructor)

void UKSGameInstance::ExportAnimAudit(struct FString* Filename)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameInstance.ExportAnimAudit");

	UKSGameInstance_ExportAnimAudit_Params params;
	params.Filename = Filename;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameInstance.EndLoading
// (Event, Public, BlueprintEvent)

void UKSGameInstance::EndLoading()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameInstance.EndLoading");

	UKSGameInstance_EndLoading_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameInstance.BeginLoading
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FString*                mapName                        (Parm, ZeroConstructor)

void UKSGameInstance::BeginLoading(struct FString* mapName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameInstance.BeginLoading");

	UKSGameInstance_BeginLoading_Params params;
	params.mapName = mapName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode.UsePlayerLoadouts
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSGameMode::UsePlayerLoadouts()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.UsePlayerLoadouts");

	AKSGameMode_UsePlayerLoadouts_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameMode.SetMatchPhase
// (Native, Protected, BlueprintCallable)
// Parameters:
// struct FName*                  NewPhase                       (Parm, ZeroConstructor, IsPlainOldData)

void AKSGameMode::SetMatchPhase(struct FName* NewPhase)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.SetMatchPhase");

	AKSGameMode_SetMatchPhase_Params params;
	params.NewPhase = NewPhase;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode.SetInfiniteAmmo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          bValue                         (Parm, ZeroConstructor, IsPlainOldData)

void AKSGameMode::SetInfiniteAmmo(bool* bValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.SetInfiniteAmmo");

	AKSGameMode_SetInfiniteAmmo_Params params;
	params.bValue = bValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode.SelectAWinner
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AActor* AKSGameMode::SelectAWinner()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.SelectAWinner");

	AKSGameMode_SelectAWinner_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameMode.PopulateLootSites
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void AKSGameMode::PopulateLootSites()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.PopulateLootSites");

	AKSGameMode_PopulateLootSites_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode.PopulateInteractiveObjects
// (Final, Native, Public, BlueprintCallable)

void AKSGameMode::PopulateInteractiveObjects()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.PopulateInteractiveObjects");

	AKSGameMode_PopulateInteractiveObjects_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode.PlayerCanEnterPlay
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AController**            C                              (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSGameMode::PlayerCanEnterPlay(class AController** C)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.PlayerCanEnterPlay");

	AKSGameMode_PlayerCanEnterPlay_Params params;
	params.C = C;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameMode.OnWaitForPlayersExpired
// (Final, Native, Protected)

void AKSGameMode::OnWaitForPlayersExpired()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.OnWaitForPlayersExpired");

	AKSGameMode_OnWaitForPlayersExpired_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode.OnTeamEliminated
// (Native, Public)
// Parameters:
// class AKSTeamState**           Team                           (Parm, ZeroConstructor, IsPlainOldData)

void AKSGameMode::OnTeamEliminated(class AKSTeamState** Team)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.OnTeamEliminated");

	AKSGameMode_OnTeamEliminated_Params params;
	params.Team = Team;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode.OnPlayerEliminated
// (Native, Public)
// Parameters:
// class AKSPlayerState**         Player                         (Parm, ZeroConstructor, IsPlainOldData)

void AKSGameMode::OnPlayerEliminated(class AKSPlayerState** Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.OnPlayerEliminated");

	AKSGameMode_OnPlayerEliminated_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode.OnPlayerDownStateChanged
// (Native, Public)
// Parameters:
// class AKSPlayerState**         Player                         (Parm, ZeroConstructor, IsPlainOldData)

void AKSGameMode::OnPlayerDownStateChanged(class AKSPlayerState** Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.OnPlayerDownStateChanged");

	AKSGameMode_OnPlayerDownStateChanged_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode.OnKSCharacterRevived
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AKSCharacter**           InRevivee                      (Parm, ZeroConstructor, IsPlainOldData)
// class AKSPlayerState**         InReviver                      (Parm, ZeroConstructor, IsPlainOldData)

void AKSGameMode::OnKSCharacterRevived(class AKSCharacter** InRevivee, class AKSPlayerState** InReviver)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.OnKSCharacterRevived");

	AKSGameMode_OnKSCharacterRevived_Params params;
	params.InRevivee = InRevivee;
	params.InReviver = InReviver;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode.OnKSCharacterDowned
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AKSCharacter**           InCharacter                    (Parm, ZeroConstructor, IsPlainOldData)
// class AController**            EventInstigator                (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 DamageType                     (Parm, ZeroConstructor, IsPlainOldData)
// EHitLocationType*              HitLocationType                (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)
// float*                         DamageDealt                    (Parm, ZeroConstructor, IsPlainOldData)

void AKSGameMode::OnKSCharacterDowned(class AKSCharacter** InCharacter, class AController** EventInstigator, class UClass** DamageType, EHitLocationType* HitLocationType, class AActor** DamageCauser, float* DamageDealt)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.OnKSCharacterDowned");

	AKSGameMode_OnKSCharacterDowned_Params params;
	params.InCharacter = InCharacter;
	params.EventInstigator = EventInstigator;
	params.DamageType = DamageType;
	params.HitLocationType = HitLocationType;
	params.DamageCauser = DamageCauser;
	params.DamageDealt = DamageDealt;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode.OnKSCharacterDownAssist
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AKSCharacter**           InVictim                       (Parm, ZeroConstructor, IsPlainOldData)
// class AController**            DownInstigator                 (Parm, ZeroConstructor, IsPlainOldData)
// class AController**            DownAssistant                  (Parm, ZeroConstructor, IsPlainOldData)
// float*                         RawDamage                      (Parm, ZeroConstructor, IsPlainOldData)
// float*                         DamagePercent                  (Parm, ZeroConstructor, IsPlainOldData)

void AKSGameMode::OnKSCharacterDownAssist(class AKSCharacter** InVictim, class AController** DownInstigator, class AController** DownAssistant, float* RawDamage, float* DamagePercent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.OnKSCharacterDownAssist");

	AKSGameMode_OnKSCharacterDownAssist_Params params;
	params.InVictim = InVictim;
	params.DownInstigator = DownInstigator;
	params.DownAssistant = DownAssistant;
	params.RawDamage = RawDamage;
	params.DamagePercent = DamagePercent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode.OnKSCharacterCombatSummary
// (Native, Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// struct FAdvancedCombatSummary* CombatSummary                  (ConstParm, Parm, OutParm, ReferenceParm)

void AKSGameMode::OnKSCharacterCombatSummary(struct FAdvancedCombatSummary* CombatSummary)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.OnKSCharacterCombatSummary");

	AKSGameMode_OnKSCharacterCombatSummary_Params params;
	params.CombatSummary = CombatSummary;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode.OnKSCharacterCombatEvent
// (Native, Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// struct FAdvancedCombatEvent*   CombatEvent                    (ConstParm, Parm, OutParm, ReferenceParm)

void AKSGameMode::OnKSCharacterCombatEvent(struct FAdvancedCombatEvent* CombatEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.OnKSCharacterCombatEvent");

	AKSGameMode_OnKSCharacterCombatEvent_Params params;
	params.CombatEvent = CombatEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode.OnKSCharacterBaseDied
// (Native, Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// class AKSCharacterBase**       InCharacter                    (Parm, ZeroConstructor, IsPlainOldData)
// class APlayerState**           CharacterPlayer                (Parm, ZeroConstructor, IsPlainOldData)
// class AController**            EventInstigator                (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 DamageType                     (Parm, ZeroConstructor, IsPlainOldData)
// EHitLocationType*              HitLocationType                (Parm, ZeroConstructor, IsPlainOldData)
// struct FKSEventAssistants*     EventAssistants                (ConstParm, Parm, OutParm, ReferenceParm)
// class AActor**                 DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)
// float*                         DamageDealt                    (Parm, ZeroConstructor, IsPlainOldData)

void AKSGameMode::OnKSCharacterBaseDied(class AKSCharacterBase** InCharacter, class APlayerState** CharacterPlayer, class AController** EventInstigator, class UClass** DamageType, EHitLocationType* HitLocationType, struct FKSEventAssistants* EventAssistants, class AActor** DamageCauser, float* DamageDealt)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.OnKSCharacterBaseDied");

	AKSGameMode_OnKSCharacterBaseDied_Params params;
	params.InCharacter = InCharacter;
	params.CharacterPlayer = CharacterPlayer;
	params.EventInstigator = EventInstigator;
	params.DamageType = DamageType;
	params.HitLocationType = HitLocationType;
	params.EventAssistants = EventAssistants;
	params.DamageCauser = DamageCauser;
	params.DamageDealt = DamageDealt;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode.K2_OnMatchPhaseSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// struct FName*                  NewPhase                       (Parm, ZeroConstructor, IsPlainOldData)

void AKSGameMode::K2_OnMatchPhaseSet(struct FName* NewPhase)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.K2_OnMatchPhaseSet");

	AKSGameMode_K2_OnMatchPhaseSet_Params params;
	params.NewPhase = NewPhase;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode.IsAWinner
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor**                 Other                          (Parm, ZeroConstructor, IsPlainOldData)
// EKSRewardType                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EKSRewardType AKSGameMode::IsAWinner(class AActor** Other)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.IsAWinner");

	AKSGameMode_IsAWinner_Params params;
	params.Other = Other;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameMode.HandleAllPlayersFinishedPrePrep
// (Native, Protected)

void AKSGameMode::HandleAllPlayersFinishedPrePrep()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.HandleAllPlayersFinishedPrePrep");

	AKSGameMode_HandleAllPlayersFinishedPrePrep_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode.GetStartingTeamNum
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class UPlayer**                NewPlayer                      (Parm, ZeroConstructor, IsPlainOldData)
// class APGame_PlayerController** NewPlayerController            (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AKSGameMode::GetStartingTeamNum(class UPlayer** NewPlayer, class APGame_PlayerController** NewPlayerController)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.GetStartingTeamNum");

	AKSGameMode_GetStartingTeamNum_Params params;
	params.NewPlayer = NewPlayer;
	params.NewPlayerController = NewPlayerController;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameMode.GetShotListener
// (Final, Native, Public)
// Parameters:
// class AKSGlobalShotListener*   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AKSGlobalShotListener* AKSGameMode::GetShotListener()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.GetShotListener");

	AKSGameMode_GetShotListener_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameMode.GetRewardsCalculatorClass
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* AKSGameMode::GetRewardsCalculatorClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.GetRewardsCalculatorClass");

	AKSGameMode_GetRewardsCalculatorClass_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameMode.GetMatchTimeElapsed
// (Native, Public, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSGameMode::GetMatchTimeElapsed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.GetMatchTimeElapsed");

	AKSGameMode_GetMatchTimeElapsed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameMode.GetMatchPhase
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FName                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FName AKSGameMode::GetMatchPhase()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.GetMatchPhase");

	AKSGameMode_GetMatchPhase_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameMode.GetGameModeHUDSettings
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FKSGameHUDSettings      ReturnValue                    (Parm, OutParm, ReturnParm)

struct FKSGameHUDSettings AKSGameMode::GetGameModeHUDSettings()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.GetGameModeHUDSettings");

	AKSGameMode_GetGameModeHUDSettings_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameMode.GetDefaultPlayerMods
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// TArray<class UKSPlayerMod*>    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UKSPlayerMod*> AKSGameMode::GetDefaultPlayerMods()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.GetDefaultPlayerMods");

	AKSGameMode_GetDefaultPlayerMods_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameMode.GetCachedInteractiveObjects
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)

void AKSGameMode::GetCachedInteractiveObjects()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.GetCachedInteractiveObjects");

	AKSGameMode_GetCachedInteractiveObjects_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode.EventOnTeamCreated
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AKSTeamState**           Team                           (Parm, ZeroConstructor, IsPlainOldData)

void AKSGameMode::EventOnTeamCreated(class AKSTeamState** Team)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.EventOnTeamCreated");

	AKSGameMode_EventOnTeamCreated_Params params;
	params.Team = Team;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode.DestroyDynamicZipLines
// (Final, Native, Protected, BlueprintCallable)

void AKSGameMode::DestroyDynamicZipLines()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.DestroyDynamicZipLines");

	AKSGameMode_DestroyDynamicZipLines_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode.DestroyActive
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UClass**                 ActorClass                     (Parm, ZeroConstructor, IsPlainOldData)

void AKSGameMode::DestroyActive(class UClass** ActorClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.DestroyActive");

	AKSGameMode_DestroyActive_Params params;
	params.ActorClass = ActorClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode.ClearLootSites
// (Final, Native, Protected, BlueprintCallable)

void AKSGameMode::ClearLootSites()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.ClearLootSites");

	AKSGameMode_ClearLootSites_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode.ClearInteractiveObjects
// (Final, Native, Public, BlueprintCallable)

void AKSGameMode::ClearInteractiveObjects()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.ClearInteractiveObjects");

	AKSGameMode_ClearInteractiveObjects_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode.CanUsePlayerStart
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class AController**            Player                         (Parm, ZeroConstructor, IsPlainOldData)
// class APlayerStart**           PlayerStart                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSGameMode::CanUsePlayerStart(class AController** Player, class APlayerStart** PlayerStart)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.CanUsePlayerStart");

	AKSGameMode_CanUsePlayerStart_Params params;
	params.Player = Player;
	params.PlayerStart = PlayerStart;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameMode.CanSpawnBotsNow
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSGameMode::CanSpawnBotsNow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.CanSpawnBotsNow");

	AKSGameMode_CanSpawnBotsNow_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameMode.AllPlayersLockedInForComponent
// (Native, Protected)

void AKSGameMode::AllPlayersLockedInForComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.AllPlayersLockedInForComponent");

	AKSGameMode_AllPlayersLockedInForComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode.AddInteractiveObject
// (Final, Native, Public, BlueprintCallable)

void AKSGameMode::AddInteractiveObject()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.AddInteractiveObject");

	AKSGameMode_AddInteractiveObject_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode_RoundGame.StartRound
// (Native, Public, BlueprintCallable)

void AKSGameMode_RoundGame::StartRound()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode_RoundGame.StartRound");

	AKSGameMode_RoundGame_StartRound_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode_RoundGame.ReadyToStartNextRound
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSGameMode_RoundGame::ReadyToStartNextRound()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode_RoundGame.ReadyToStartNextRound");

	AKSGameMode_RoundGame_ReadyToStartNextRound_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameMode_RoundGame.ReadyToPrepareNextRound
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSGameMode_RoundGame::ReadyToPrepareNextRound()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode_RoundGame.ReadyToPrepareNextRound");

	AKSGameMode_RoundGame_ReadyToPrepareNextRound_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameMode_RoundGame.PrepareForNextRound
// (Native, Public, BlueprintCallable)

void AKSGameMode_RoundGame::PrepareForNextRound()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode_RoundGame.PrepareForNextRound");

	AKSGameMode_RoundGame_PrepareForNextRound_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode_RoundGame.K2_OnSetRoundState
// (Event, Protected, BlueprintEvent)
// Parameters:
// struct FName*                  InRoundState                   (Parm, ZeroConstructor, IsPlainOldData)

void AKSGameMode_RoundGame::K2_OnSetRoundState(struct FName* InRoundState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode_RoundGame.K2_OnSetRoundState");

	AKSGameMode_RoundGame_K2_OnSetRoundState_Params params;
	params.InRoundState = InRoundState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode_RoundGame.IsRoundSetupComplete
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSGameMode_RoundGame::IsRoundSetupComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode_RoundGame.IsRoundSetupComplete");

	AKSGameMode_RoundGame_IsRoundSetupComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameMode_RoundGame.IsRoundInProgress
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSGameMode_RoundGame::IsRoundInProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode_RoundGame.IsRoundInProgress");

	AKSGameMode_RoundGame_IsRoundInProgress_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameMode_RoundGame.HasRoundStarted
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSGameMode_RoundGame::HasRoundStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode_RoundGame.HasRoundStarted");

	AKSGameMode_RoundGame_HasRoundStarted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameMode_RoundGame.HasRoundEnded
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSGameMode_RoundGame::HasRoundEnded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode_RoundGame.HasRoundEnded");

	AKSGameMode_RoundGame_HasRoundEnded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameMode_RoundGame.HasPreparedNextRound
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSGameMode_RoundGame::HasPreparedNextRound()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode_RoundGame.HasPreparedNextRound");

	AKSGameMode_RoundGame_HasPreparedNextRound_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameMode_RoundGame.GetRoundState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FName                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FName AKSGameMode_RoundGame::GetRoundState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode_RoundGame.GetRoundState");

	AKSGameMode_RoundGame_GetRoundState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameMode_RoundGame.GetRoundStartTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSGameMode_RoundGame::GetRoundStartTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode_RoundGame.GetRoundStartTime");

	AKSGameMode_RoundGame_GetRoundStartTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameMode_RoundGame.GetRoundNumber
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// unsigned char                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

unsigned char AKSGameMode_RoundGame::GetRoundNumber()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode_RoundGame.GetRoundNumber");

	AKSGameMode_RoundGame_GetRoundNumber_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameMode_RoundGame.EndRoundKillCam
// (Final, Native, Public, BlueprintCallable)

void AKSGameMode_RoundGame::EndRoundKillCam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode_RoundGame.EndRoundKillCam");

	AKSGameMode_RoundGame_EndRoundKillCam_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode_RoundGame.EndRound
// (Native, Public, BlueprintCallable)

void AKSGameMode_RoundGame::EndRound()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode_RoundGame.EndRound");

	AKSGameMode_RoundGame_EndRound_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode_RoundGame.CanPlayerKeepInventoryBetweenRounds
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// class AKSCharacter**           Character                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AController**            Player                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSGameMode_RoundGame::CanPlayerKeepInventoryBetweenRounds(class AKSCharacter** Character, class AController** Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode_RoundGame.CanPlayerKeepInventoryBetweenRounds");

	AKSGameMode_RoundGame_CanPlayerKeepInventoryBetweenRounds_Params params;
	params.Character = Character;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameMode_Control.GetUpdateRateForControlPoint
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class AKSControlPoint**        InPoint                        (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSGameMode_Control::GetUpdateRateForControlPoint(class AKSControlPoint** InPoint)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode_Control.GetUpdateRateForControlPoint");

	AKSGameMode_Control_GetUpdateRateForControlPoint_Params params;
	params.InPoint = InPoint;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameMode_NeutralBomb.ResetBombIfInSpawnedState
// (Final, Native, Protected)

void AKSGameMode_NeutralBomb::ResetBombIfInSpawnedState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode_NeutralBomb.ResetBombIfInSpawnedState");

	AKSGameMode_NeutralBomb_ResetBombIfInSpawnedState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode_NeutralBomb.ResetBomb
// (Final, Native, Public)

void AKSGameMode_NeutralBomb::ResetBomb()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode_NeutralBomb.ResetBomb");

	AKSGameMode_NeutralBomb_ResetBomb_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode_ExtractionCoop.BroadcastAlarm
// (Final, Native, Protected)

void AKSGameMode_ExtractionCoop::BroadcastAlarm()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode_ExtractionCoop.BroadcastAlarm");

	AKSGameMode_ExtractionCoop_BroadcastAlarm_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode_RoyaleBase.TickZoneDamage
// (Final, Native, Protected)

void AKSGameMode_RoyaleBase::TickZoneDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode_RoyaleBase.TickZoneDamage");

	AKSGameMode_RoyaleBase_TickZoneDamage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode_RoyaleBase.GetMustContainActor
// (Native, Protected, HasOutParms, BlueprintCallable)
// Parameters:
// class AActor*                  MustContainActor               (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// float                          SafeRadius                     (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSGameMode_RoyaleBase::GetMustContainActor(class AActor** MustContainActor, float* SafeRadius)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode_RoyaleBase.GetMustContainActor");

	AKSGameMode_RoyaleBase_GetMustContainActor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (MustContainActor != nullptr)
		*MustContainActor = params.MustContainActor;
	if (SafeRadius != nullptr)
		*SafeRadius = params.SafeRadius;

	return params.ReturnValue;
}


// Function Killstreak.KSGameMode_Sabotage.OnHackComplete
// (Final, Native, Protected)
// Parameters:
// class AKSExtractionComputer**  InComputer                     (Parm, ZeroConstructor, IsPlainOldData)

void AKSGameMode_Sabotage::OnHackComplete(class AKSExtractionComputer** InComputer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode_Sabotage.OnHackComplete");

	AKSGameMode_Sabotage_OnHackComplete_Params params;
	params.InComputer = InComputer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode_Sabotage.HasDefendingTeamWon
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSGameMode_Sabotage::HasDefendingTeamWon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode_Sabotage.HasDefendingTeamWon");

	AKSGameMode_Sabotage_HasDefendingTeamWon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameMode_Sabotage.HasAttackingTeamWon
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSGameMode_Sabotage::HasAttackingTeamWon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode_Sabotage.HasAttackingTeamWon");

	AKSGameMode_Sabotage_HasAttackingTeamWon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGamepadCurvedLookSpeedManager.SetOuterDeadZone
// (Final, Exec, Native, Public)
// Parameters:
// float*                         NewZoneX                       (Parm, ZeroConstructor, IsPlainOldData)
// float*                         NewZoneY                       (Parm, ZeroConstructor, IsPlainOldData)

void UKSGamepadCurvedLookSpeedManager::SetOuterDeadZone(float* NewZoneX, float* NewZoneY)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGamepadCurvedLookSpeedManager.SetOuterDeadZone");

	UKSGamepadCurvedLookSpeedManager_SetOuterDeadZone_Params params;
	params.NewZoneX = NewZoneX;
	params.NewZoneY = NewZoneY;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGamepadCurvedLookSpeedManager.SetBoostMultiplier
// (Final, Exec, Native, Public)
// Parameters:
// float*                         NewBoostX                      (Parm, ZeroConstructor, IsPlainOldData)
// float*                         NewBoostY                      (Parm, ZeroConstructor, IsPlainOldData)

void UKSGamepadCurvedLookSpeedManager::SetBoostMultiplier(float* NewBoostX, float* NewBoostY)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGamepadCurvedLookSpeedManager.SetBoostMultiplier");

	UKSGamepadCurvedLookSpeedManager_SetBoostMultiplier_Params params;
	params.NewBoostX = NewBoostX;
	params.NewBoostY = NewBoostY;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGamepadCurvedLookSpeedManager.SetBoostAcceleration
// (Final, Exec, Native, Public)
// Parameters:
// float*                         NewAccel                       (Parm, ZeroConstructor, IsPlainOldData)

void UKSGamepadCurvedLookSpeedManager::SetBoostAcceleration(float* NewAccel)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGamepadCurvedLookSpeedManager.SetBoostAcceleration");

	UKSGamepadCurvedLookSpeedManager_SetBoostAcceleration_Params params;
	params.NewAccel = NewAccel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGamepadCurvedLookSpeedManager.SetBaseVelocityCurve
// (Final, Exec, Native, Public)
// Parameters:
// struct FName*                  TestCurveName                  (Parm, ZeroConstructor, IsPlainOldData)

void UKSGamepadCurvedLookSpeedManager::SetBaseVelocityCurve(struct FName* TestCurveName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGamepadCurvedLookSpeedManager.SetBaseVelocityCurve");

	UKSGamepadCurvedLookSpeedManager_SetBaseVelocityCurve_Params params;
	params.TestCurveName = TestCurveName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGamepadCurvedLookSpeedManager.PrintLookSpeedParameters
// (Final, Exec, Native, Public)

void UKSGamepadCurvedLookSpeedManager::PrintLookSpeedParameters()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGamepadCurvedLookSpeedManager.PrintLookSpeedParameters");

	UKSGamepadCurvedLookSpeedManager_PrintLookSpeedParameters_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState.WasLastPhasePrepare
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSGameState::WasLastPhasePrepare()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.WasLastPhasePrepare");

	AKSGameState_WasLastPhasePrepare_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameState.SetSideForTeam
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int*                           TeamNumber                     (Parm, ZeroConstructor, IsPlainOldData)
// int*                           SideNumber                     (Parm, ZeroConstructor, IsPlainOldData)

void AKSGameState::SetSideForTeam(int* TeamNumber, int* SideNumber)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.SetSideForTeam");

	AKSGameState_SetSideForTeam_Params params;
	params.TeamNumber = TeamNumber;
	params.SideNumber = SideNumber;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState.RemoveGameDisplayInfoForActor
// (Final, Native, Private)
// Parameters:
// class AActor**                 pActor                         (Parm, ZeroConstructor, IsPlainOldData)

void AKSGameState::RemoveGameDisplayInfoForActor(class AActor** pActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.RemoveGameDisplayInfoForActor");

	AKSGameState_RemoveGameDisplayInfoForActor_Params params;
	params.pActor = pActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState.RemoveGameDisplayInfoById
// (Final, Native, Public)
// Parameters:
// int*                           DisplayInfoIdToRemove          (Parm, ZeroConstructor, IsPlainOldData)

void AKSGameState::RemoveGameDisplayInfoById(int* DisplayInfoIdToRemove)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.RemoveGameDisplayInfoById");

	AKSGameState_RemoveGameDisplayInfoById_Params params;
	params.DisplayInfoIdToRemove = DisplayInfoIdToRemove;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState.RemoveDeployable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TScriptInterface<class UKSDeployable>* Deployable                     (Parm, ZeroConstructor, IsPlainOldData)

void AKSGameState::RemoveDeployable(TScriptInterface<class UKSDeployable>* Deployable)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.RemoveDeployable");

	AKSGameState_RemoveDeployable_Params params;
	params.Deployable = Deployable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState.ReceivedKillCamStatus
// (Native, Public)

void AKSGameState::ReceivedKillCamStatus()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.ReceivedKillCamStatus");

	AKSGameState_ReceivedKillCamStatus_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState.OnRep_MatchPhase
// (Native, Protected)

void AKSGameState::OnRep_MatchPhase()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.OnRep_MatchPhase");

	AKSGameState_OnRep_MatchPhase_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState.OnRep_LootRarityTimerPairs
// (Native, Protected)

void AKSGameState::OnRep_LootRarityTimerPairs()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.OnRep_LootRarityTimerPairs");

	AKSGameState_OnRep_LootRarityTimerPairs_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState.OnRep_InfiniteAmmo
// (Final, Native, Private)

void AKSGameState::OnRep_InfiniteAmmo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.OnRep_InfiniteAmmo");

	AKSGameState_OnRep_InfiniteAmmo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState.OnRep_DisplayCash
// (Final, Native, Protected)

void AKSGameState::OnRep_DisplayCash()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.OnRep_DisplayCash");

	AKSGameState_OnRep_DisplayCash_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState.LootRespawnTimerTick
// (Native, Protected)
// Parameters:
// float*                         Seconds                        (Parm, ZeroConstructor, IsPlainOldData)
// ELootSiteRarity*               Rarity                         (Parm, ZeroConstructor, IsPlainOldData)

void AKSGameState::LootRespawnTimerTick(float* Seconds, ELootSiteRarity* Rarity)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.LootRespawnTimerTick");

	AKSGameState_LootRespawnTimerTick_Params params;
	params.Seconds = Seconds;
	params.Rarity = Rarity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState.LootRespawnTimerComplete
// (Native, Protected)
// Parameters:
// ELootSiteRarity*               Rarity                         (Parm, ZeroConstructor, IsPlainOldData)

void AKSGameState::LootRespawnTimerComplete(ELootSiteRarity* Rarity)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.LootRespawnTimerComplete");

	AKSGameState_LootRespawnTimerComplete_Params params;
	params.Rarity = Rarity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState.LootRespawnTimerActive
// (Native, Protected)
// Parameters:
// bool*                          bActive                        (Parm, ZeroConstructor, IsPlainOldData)
// ELootSiteRarity*               Rarity                         (Parm, ZeroConstructor, IsPlainOldData)

void AKSGameState::LootRespawnTimerActive(bool* bActive, ELootSiteRarity* Rarity)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.LootRespawnTimerActive");

	AKSGameState_LootRespawnTimerActive_Params params;
	params.bActive = bActive;
	params.Rarity = Rarity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState.IsRoyaleMode
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSGameState::IsRoyaleMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.IsRoyaleMode");

	AKSGameState_IsRoyaleMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameState.IsKillCamRecording
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSGameState::IsKillCamRecording()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.IsKillCamRecording");

	AKSGameState_IsKillCamRecording_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameState.IsInSetup
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSGameState::IsInSetup()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.IsInSetup");

	AKSGameState_IsInSetup_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameState.GetWorldDeployables
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AActor*>          ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

TArray<class AActor*> AKSGameState::GetWorldDeployables()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.GetWorldDeployables");

	AKSGameState_GetWorldDeployables_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameState.GetWinningTeamNum
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AKSGameState::GetWinningTeamNum()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.GetWinningTeamNum");

	AKSGameState_GetWinningTeamNum_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameState.GetTrackedWorldDrops
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AKSItemDrop*>     ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

TArray<class AKSItemDrop*> AKSGameState::GetTrackedWorldDrops()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.GetTrackedWorldDrops");

	AKSGameState_GetTrackedWorldDrops_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameState.GetTrackedProjectiles
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AKSProjectile*>   ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

TArray<class AKSProjectile*> AKSGameState::GetTrackedProjectiles()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.GetTrackedProjectiles");

	AKSGameState_GetTrackedProjectiles_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameState.GetTeams
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AKSTeamState*>    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class AKSTeamState*> AKSGameState::GetTeams()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.GetTeams");

	AKSGameState_GetTeams_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameState.GetSideForTeam
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int*                           TeamNumber                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AKSGameState::GetSideForTeam(int* TeamNumber)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.GetSideForTeam");

	AKSGameState_GetSideForTeam_Params params;
	params.TeamNumber = TeamNumber;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameState.GetMiniMapAssistant
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AKSMiniMapAssistant*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AKSMiniMapAssistant* AKSGameState::GetMiniMapAssistant()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.GetMiniMapAssistant");

	AKSGameState_GetMiniMapAssistant_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameState.GetMatchTimerState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EPGame_ReplicateTimerState     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EPGame_ReplicateTimerState AKSGameState::GetMatchTimerState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.GetMatchTimerState");

	AKSGameState_GetMatchTimerState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameState.GetMatchTimer
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          OutPhaseTimeRemaining          (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// float                          OutTotalPhaseTime              (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void AKSGameState::GetMatchTimer(float* OutPhaseTimeRemaining, float* OutTotalPhaseTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.GetMatchTimer");

	AKSGameState_GetMatchTimer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutPhaseTimeRemaining != nullptr)
		*OutPhaseTimeRemaining = params.OutPhaseTimeRemaining;
	if (OutTotalPhaseTime != nullptr)
		*OutTotalPhaseTime = params.OutTotalPhaseTime;
}


// Function Killstreak.KSGameState.GetMatchPhase
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FName                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FName AKSGameState::GetMatchPhase()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.GetMatchPhase");

	AKSGameState_GetMatchPhase_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameState.GetKillCamSecondaryFocusPawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int*                           LocalPlayerIndex               (Parm, ZeroConstructor, IsPlainOldData)
// class APawn*                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APawn* AKSGameState::GetKillCamSecondaryFocusPawn(int* LocalPlayerIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.GetKillCamSecondaryFocusPawn");

	AKSGameState_GetKillCamSecondaryFocusPawn_Params params;
	params.LocalPlayerIndex = LocalPlayerIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameState.GetKillCamFocusSpecial
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int*                           LocalPlayerIndex               (Parm, ZeroConstructor, IsPlainOldData)
// class AKSProjectile*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AKSProjectile* AKSGameState::GetKillCamFocusSpecial(int* LocalPlayerIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.GetKillCamFocusSpecial");

	AKSGameState_GetKillCamFocusSpecial_Params params;
	params.LocalPlayerIndex = LocalPlayerIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameState.GetKillCamFocusPawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int*                           LocalPlayerIndex               (Parm, ZeroConstructor, IsPlainOldData)
// class APawn*                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APawn* AKSGameState::GetKillCamFocusPawn(int* LocalPlayerIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.GetKillCamFocusPawn");

	AKSGameState_GetKillCamFocusPawn_Params params;
	params.LocalPlayerIndex = LocalPlayerIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameState.GetKillCamActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int*                           Guid                           (Parm, ZeroConstructor, IsPlainOldData)
// int*                           LocalPlayerIndex               (Parm, ZeroConstructor, IsPlainOldData)
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AActor* AKSGameState::GetKillCamActor(int* Guid, int* LocalPlayerIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.GetKillCamActor");

	AKSGameState_GetKillCamActor_Params params;
	params.Guid = Guid;
	params.LocalPlayerIndex = LocalPlayerIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameState.GetFirstTeamForSide
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int*                           SideNumber                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AKSGameState::GetFirstTeamForSide(int* SideNumber)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.GetFirstTeamForSide");

	AKSGameState_GetFirstTeamForSide_Params params;
	params.SideNumber = SideNumber;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameState.GetAttackingTeam
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AKSTeamState*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AKSTeamState* AKSGameState::GetAttackingTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.GetAttackingTeam");

	AKSGameState_GetAttackingTeam_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameState.FlipTeamSides
// (Final, Native, Public, BlueprintCallable)

void AKSGameState::FlipTeamSides()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.FlipTeamSides");

	AKSGameState_FlipTeamSides_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState.ClientsNotifyWinnerSet
// (Net, Native, Event, NetMulticast, Public)
// Parameters:
// int*                           teamNum                        (Parm, ZeroConstructor, IsPlainOldData)

void AKSGameState::ClientsNotifyWinnerSet(int* teamNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.ClientsNotifyWinnerSet");

	AKSGameState_ClientsNotifyWinnerSet_Params params;
	params.teamNum = teamNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState.ClientsNotifyLastManStanding
// (Net, Native, Event, NetMulticast, Protected)
// Parameters:
// class AKSPlayerState**         LastPlayer                     (Parm, ZeroConstructor, IsPlainOldData)

void AKSGameState::ClientsNotifyLastManStanding(class AKSPlayerState** LastPlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.ClientsNotifyLastManStanding");

	AKSGameState_ClientsNotifyLastManStanding_Params params;
	params.LastPlayer = LastPlayer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState.CharacterBodiesPersistAfterDeath
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSGameState::CharacterBodiesPersistAfterDeath()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.CharacterBodiesPersistAfterDeath");

	AKSGameState_CharacterBodiesPersistAfterDeath_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameState.CalculateCashForAssist
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float*                         DamagePercent                  (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AKSGameState::CalculateCashForAssist(float* DamagePercent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.CalculateCashForAssist");

	AKSGameState_CalculateCashForAssist_Params params;
	params.DamagePercent = DamagePercent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameState.BroadcastTeamSidesFlipped
// (Net, NetReliable, Native, Event, NetMulticast, Protected)

void AKSGameState::BroadcastTeamSidesFlipped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.BroadcastTeamSidesFlipped");

	AKSGameState_BroadcastTeamSidesFlipped_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState.BroadcastKillCamParameters
// (Net, Native, Event, NetMulticast, Public)
// Parameters:
// class APawn**                  InPawn                         (Parm, ZeroConstructor, IsPlainOldData)
// class APawn**                  InSecondaryPawn                (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 InSpecialDamageCauser          (Parm, ZeroConstructor, IsPlainOldData)

void AKSGameState::BroadcastKillCamParameters(class APawn** InPawn, class APawn** InSecondaryPawn, class AActor** InSpecialDamageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.BroadcastKillCamParameters");

	AKSGameState_BroadcastKillCamParameters_Params params;
	params.InPawn = InPawn;
	params.InSecondaryPawn = InSecondaryPawn;
	params.InSpecialDamageCauser = InSpecialDamageCauser;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState.BlueprintIsMatchInProgress
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSGameState::BlueprintIsMatchInProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.BlueprintIsMatchInProgress");

	AKSGameState_BlueprintIsMatchInProgress_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameState.BlueprintHasMatchEnded
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSGameState::BlueprintHasMatchEnded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.BlueprintHasMatchEnded");

	AKSGameState_BlueprintHasMatchEnded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameState.AddGameDisplayInfo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FDisplayInfo*           DisplayInfo                    (Parm)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AKSGameState::AddGameDisplayInfo(struct FDisplayInfo* DisplayInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.AddGameDisplayInfo");

	AKSGameState_AddGameDisplayInfo_Params params;
	params.DisplayInfo = DisplayInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameState.AddDeployable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TScriptInterface<class UKSDeployable>* Deployable                     (Parm, ZeroConstructor, IsPlainOldData)

void AKSGameState::AddDeployable(TScriptInterface<class UKSDeployable>* Deployable)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.AddDeployable");

	AKSGameState_AddDeployable_Params params;
	params.Deployable = Deployable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_RoundGame.TryToReplayLastKill
// (Native, Protected)

void AKSGameState_RoundGame::TryToReplayLastKill()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_RoundGame.TryToReplayLastKill");

	AKSGameState_RoundGame_TryToReplayLastKill_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_RoundGame.RoundHasStarted
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSGameState_RoundGame::RoundHasStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_RoundGame.RoundHasStarted");

	AKSGameState_RoundGame_RoundHasStarted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameState_RoundGame.RoundHasEnded
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSGameState_RoundGame::RoundHasEnded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_RoundGame.RoundHasEnded");

	AKSGameState_RoundGame_RoundHasEnded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameState_RoundGame.PreparingForNextRound
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSGameState_RoundGame::PreparingForNextRound()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_RoundGame.PreparingForNextRound");

	AKSGameState_RoundGame_PreparingForNextRound_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameState_RoundGame.OnRep_RoundResult
// (Native, Protected)

void AKSGameState_RoundGame::OnRep_RoundResult()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_RoundGame.OnRep_RoundResult");

	AKSGameState_RoundGame_OnRep_RoundResult_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_RoundGame.OnRep_RoundInitState
// (Native, Protected)

void AKSGameState_RoundGame::OnRep_RoundInitState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_RoundGame.OnRep_RoundInitState");

	AKSGameState_RoundGame_OnRep_RoundInitState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_RoundGame.OnRep_RoundInfo
// (Native, Protected)

void AKSGameState_RoundGame::OnRep_RoundInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_RoundGame.OnRep_RoundInfo");

	AKSGameState_RoundGame_OnRep_RoundInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_RoundGame.IsTieBreakerRound
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSGameState_RoundGame::IsTieBreakerRound()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_RoundGame.IsTieBreakerRound");

	AKSGameState_RoundGame_IsTieBreakerRound_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameState_RoundGame.IsTeamAtMatchPoint
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AKSTeamState**           Team                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSGameState_RoundGame::IsTeamAtMatchPoint(class AKSTeamState** Team)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_RoundGame.IsTeamAtMatchPoint");

	AKSGameState_RoundGame_IsTeamAtMatchPoint_Params params;
	params.Team = Team;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameState_RoundGame.IsRoundInProgress
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSGameState_RoundGame::IsRoundInProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_RoundGame.IsRoundInProgress");

	AKSGameState_RoundGame_IsRoundInProgress_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameState_RoundGame.HasTriggeredRoundStart
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSGameState_RoundGame::HasTriggeredRoundStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_RoundGame.HasTriggeredRoundStart");

	AKSGameState_RoundGame_HasTriggeredRoundStart_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameState_RoundGame.HasTriggeredRoundSetup
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSGameState_RoundGame::HasTriggeredRoundSetup()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_RoundGame.HasTriggeredRoundSetup");

	AKSGameState_RoundGame_HasTriggeredRoundSetup_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameState_RoundGame.HasTriggeredRoundOver
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSGameState_RoundGame::HasTriggeredRoundOver()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_RoundGame.HasTriggeredRoundOver");

	AKSGameState_RoundGame_HasTriggeredRoundOver_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameState_RoundGame.GetRoundWinner
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AKSTeamState*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AKSTeamState* AKSGameState_RoundGame::GetRoundWinner()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_RoundGame.GetRoundWinner");

	AKSGameState_RoundGame_GetRoundWinner_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameState_RoundGame.GetRoundTimerState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EPGame_ReplicateTimerState     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EPGame_ReplicateTimerState AKSGameState_RoundGame::GetRoundTimerState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_RoundGame.GetRoundTimerState");

	AKSGameState_RoundGame_GetRoundTimerState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameState_RoundGame.GetRoundTimer
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          OutRoundTimeRemaining          (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// float                          OutTotalRoundTime              (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void AKSGameState_RoundGame::GetRoundTimer(float* OutRoundTimeRemaining, float* OutTotalRoundTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_RoundGame.GetRoundTimer");

	AKSGameState_RoundGame_GetRoundTimer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutRoundTimeRemaining != nullptr)
		*OutRoundTimeRemaining = params.OutRoundTimeRemaining;
	if (OutTotalRoundTime != nullptr)
		*OutTotalRoundTime = params.OutTotalRoundTime;
}


// Function Killstreak.KSGameState_RoundGame.GetRoundStartTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSGameState_RoundGame::GetRoundStartTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_RoundGame.GetRoundStartTime");

	AKSGameState_RoundGame_GetRoundStartTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameState_RoundGame.GetRoundNumber
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// unsigned char                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

unsigned char AKSGameState_RoundGame::GetRoundNumber()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_RoundGame.GetRoundNumber");

	AKSGameState_RoundGame_GetRoundNumber_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameState_RoundGame.GetAllRoundResults
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FRoundResult>    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FRoundResult> AKSGameState_RoundGame::GetAllRoundResults()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_RoundGame.GetAllRoundResults");

	AKSGameState_RoundGame_GetAllRoundResults_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameState_Control.GetAllControlPoints
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AKSControlPoint*> OutControlPoints               (Parm, OutParm, ZeroConstructor)

void AKSGameState_Control::GetAllControlPoints(TArray<class AKSControlPoint*>* OutControlPoints)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_Control.GetAllControlPoints");

	AKSGameState_Control_GetAllControlPoints_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutControlPoints != nullptr)
		*OutControlPoints = params.OutControlPoints;
}


// Function Killstreak.KSGameState_NeutralBomb.OnRep_BombStateTimer
// (Final, Native, Protected)

void AKSGameState_NeutralBomb::OnRep_BombStateTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_NeutralBomb.OnRep_BombStateTimer");

	AKSGameState_NeutralBomb_OnRep_BombStateTimer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_NeutralBomb.OnRep_BombState
// (Final, Native, Protected)

void AKSGameState_NeutralBomb::OnRep_BombState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_NeutralBomb.OnRep_BombState");

	AKSGameState_NeutralBomb_OnRep_BombState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_NeutralBomb.GetBombState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FKSNeutralBombState     ReturnValue                    (Parm, OutParm, ReturnParm)

struct FKSNeutralBombState AKSGameState_NeutralBomb::GetBombState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_NeutralBomb.GetBombState");

	AKSGameState_NeutralBomb_GetBombState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameState_NeutralBomb.BombStateTimerTick
// (Final, Native, Protected)
// Parameters:
// float*                         Seconds                        (Parm, ZeroConstructor, IsPlainOldData)

void AKSGameState_NeutralBomb::BombStateTimerTick(float* Seconds)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_NeutralBomb.BombStateTimerTick");

	AKSGameState_NeutralBomb_BombStateTimerTick_Params params;
	params.Seconds = Seconds;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_NeutralBomb.BombStateTimerComplete
// (Final, Native, Protected)

void AKSGameState_NeutralBomb::BombStateTimerComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_NeutralBomb.BombStateTimerComplete");

	AKSGameState_NeutralBomb_BombStateTimerComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_NeutralBomb.BombStateTimerActive
// (Final, Native, Protected)
// Parameters:
// bool*                          bActive                        (Parm, ZeroConstructor, IsPlainOldData)

void AKSGameState_NeutralBomb::BombStateTimerActive(bool* bActive)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_NeutralBomb.BombStateTimerActive");

	AKSGameState_NeutralBomb_BombStateTimerActive_Params params;
	params.bActive = bActive;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_Demolition.OnRep_AttackingTeam
// (Final, Native, Protected)

void AKSGameState_Demolition::OnRep_AttackingTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_Demolition.OnRep_AttackingTeam");

	AKSGameState_Demolition_OnRep_AttackingTeam_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_Extraction.OnRep_HackingObjectiveState
// (Native, Protected)

void AKSGameState_Extraction::OnRep_HackingObjectiveState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_Extraction.OnRep_HackingObjectiveState");

	AKSGameState_Extraction_OnRep_HackingObjectiveState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_Extraction.OnRep_AttackingTeam
// (Native, Protected)

void AKSGameState_Extraction::OnRep_AttackingTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_Extraction.OnRep_AttackingTeam");

	AKSGameState_Extraction_OnRep_AttackingTeam_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_Extraction.IsAComputerHacked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSGameState_Extraction::IsAComputerHacked()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_Extraction.IsAComputerHacked");

	AKSGameState_Extraction_IsAComputerHacked_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameState_Extraction.GetComputers
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AKSExtractionComputer*> OutComputers                   (Parm, OutParm, ZeroConstructor)

void AKSGameState_Extraction::GetComputers(TArray<class AKSExtractionComputer*>* OutComputers)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_Extraction.GetComputers");

	AKSGameState_Extraction_GetComputers_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutComputers != nullptr)
		*OutComputers = params.OutComputers;
}


// Function Killstreak.KSGameState_Extraction.CreditHacker
// (Net, Native, Event, NetMulticast, Public)
// Parameters:
// class AKSPlayerState**         Hacker                         (Parm, ZeroConstructor, IsPlainOldData)

void AKSGameState_Extraction::CreditHacker(class AKSPlayerState** Hacker)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_Extraction.CreditHacker");

	AKSGameState_Extraction_CreditHacker_Params params;
	params.Hacker = Hacker;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_Extraction.CreditDehacker
// (Net, Native, Event, NetMulticast, Public)
// Parameters:
// class AKSPlayerState**         Dehacker                       (Parm, ZeroConstructor, IsPlainOldData)

void AKSGameState_Extraction::CreditDehacker(class AKSPlayerState** Dehacker)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_Extraction.CreditDehacker");

	AKSGameState_Extraction_CreditDehacker_Params params;
	params.Dehacker = Dehacker;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_Extraction.ComputersUnlocked
// (Final, Native, Public)

void AKSGameState_Extraction::ComputersUnlocked()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_Extraction.ComputersUnlocked");

	AKSGameState_Extraction_ComputersUnlocked_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_ExtractionCoop.OnRep_AlarmState
// (Final, Native, Protected)

void AKSGameState_ExtractionCoop::OnRep_AlarmState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_ExtractionCoop.OnRep_AlarmState");

	AKSGameState_ExtractionCoop_OnRep_AlarmState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_ExtractionCoop.BroadcastPhaseTimeout
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// struct FName*                  PhaseName                      (Parm, ZeroConstructor, IsPlainOldData)

void AKSGameState_ExtractionCoop::BroadcastPhaseTimeout(struct FName* PhaseName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_ExtractionCoop.BroadcastPhaseTimeout");

	AKSGameState_ExtractionCoop_BroadcastPhaseTimeout_Params params;
	params.PhaseName = PhaseName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_ExtractionCoop.BroadcastExtractionPickupChanged
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// class AKSObjectiveBase**       InObjective                    (Parm, ZeroConstructor, IsPlainOldData)
// int*                           PickupsUsed                    (Parm, ZeroConstructor, IsPlainOldData)
// int*                           PickupsLeft                    (Parm, ZeroConstructor, IsPlainOldData)

void AKSGameState_ExtractionCoop::BroadcastExtractionPickupChanged(class AKSObjectiveBase** InObjective, int* PickupsUsed, int* PickupsLeft)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_ExtractionCoop.BroadcastExtractionPickupChanged");

	AKSGameState_ExtractionCoop_BroadcastExtractionPickupChanged_Params params;
	params.InObjective = InObjective;
	params.PickupsUsed = PickupsUsed;
	params.PickupsLeft = PickupsLeft;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_ExtractionCoop.BroadcastEscapePointChanged
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// TArray<class AKSPlayerState*>* ContainedPlayers               (ConstParm, Parm, ZeroConstructor, ReferenceParm)

void AKSGameState_ExtractionCoop::BroadcastEscapePointChanged(TArray<class AKSPlayerState*>* ContainedPlayers)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_ExtractionCoop.BroadcastEscapePointChanged");

	AKSGameState_ExtractionCoop_BroadcastEscapePointChanged_Params params;
	params.ContainedPlayers = ContainedPlayers;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_RoyaleBase.ZoneWaitStart
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// float*                         TimeUntilShrink                (Parm, ZeroConstructor, IsPlainOldData)

void AKSGameState_RoyaleBase::ZoneWaitStart(float* TimeUntilShrink)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_RoyaleBase.ZoneWaitStart");

	AKSGameState_RoyaleBase_ZoneWaitStart_Params params;
	params.TimeUntilShrink = TimeUntilShrink;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_RoyaleBase.ZoneShrinkStart
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// float*                         TimeToShrink                   (Parm, ZeroConstructor, IsPlainOldData)

void AKSGameState_RoyaleBase::ZoneShrinkStart(float* TimeToShrink)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_RoyaleBase.ZoneShrinkStart");

	AKSGameState_RoyaleBase_ZoneShrinkStart_Params params;
	params.TimeToShrink = TimeToShrink;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_ExtractionRoyale.OnRep_HackingObjectiveState
// (Native, Protected)

void AKSGameState_ExtractionRoyale::OnRep_HackingObjectiveState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_ExtractionRoyale.OnRep_HackingObjectiveState");

	AKSGameState_ExtractionRoyale_OnRep_HackingObjectiveState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_ExtractionRoyale.OnRep_AttackingTeam
// (Native, Protected)

void AKSGameState_ExtractionRoyale::OnRep_AttackingTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_ExtractionRoyale.OnRep_AttackingTeam");

	AKSGameState_ExtractionRoyale_OnRep_AttackingTeam_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_ExtractionRoyale.IsAComputerHacked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSGameState_ExtractionRoyale::IsAComputerHacked()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_ExtractionRoyale.IsAComputerHacked");

	AKSGameState_ExtractionRoyale_IsAComputerHacked_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameState_ExtractionRoyale.GetComputers
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AKSExtractionComputer*> OutComputers                   (Parm, OutParm, ZeroConstructor)

void AKSGameState_ExtractionRoyale::GetComputers(TArray<class AKSExtractionComputer*>* OutComputers)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_ExtractionRoyale.GetComputers");

	AKSGameState_ExtractionRoyale_GetComputers_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutComputers != nullptr)
		*OutComputers = params.OutComputers;
}


// Function Killstreak.KSGameState_ExtractionRoyale.CreditHacker
// (Net, Native, Event, NetMulticast, Public)
// Parameters:
// class AKSPlayerState**         Hacker                         (Parm, ZeroConstructor, IsPlainOldData)

void AKSGameState_ExtractionRoyale::CreditHacker(class AKSPlayerState** Hacker)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_ExtractionRoyale.CreditHacker");

	AKSGameState_ExtractionRoyale_CreditHacker_Params params;
	params.Hacker = Hacker;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_ExtractionRoyale.CreditDehacker
// (Net, Native, Event, NetMulticast, Public)
// Parameters:
// class AKSPlayerState**         Dehacker                       (Parm, ZeroConstructor, IsPlainOldData)

void AKSGameState_ExtractionRoyale::CreditDehacker(class AKSPlayerState** Dehacker)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_ExtractionRoyale.CreditDehacker");

	AKSGameState_ExtractionRoyale_CreditDehacker_Params params;
	params.Dehacker = Dehacker;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_ExtractionRoyale.ComputersUnlocked
// (Final, Native, Public)

void AKSGameState_ExtractionRoyale::ComputersUnlocked()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_ExtractionRoyale.ComputersUnlocked");

	AKSGameState_ExtractionRoyale_ComputersUnlocked_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_Heist.OnRep_TeamCash
// (Final, Native, Protected)

void AKSGameState_Heist::OnRep_TeamCash()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_Heist.OnRep_TeamCash");

	AKSGameState_Heist_OnRep_TeamCash_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_Heist.OnRep_Refreshes
// (Final, Native, Protected)

void AKSGameState_Heist::OnRep_Refreshes()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_Heist.OnRep_Refreshes");

	AKSGameState_Heist_OnRep_Refreshes_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_Heist.GetTeamCash
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int*                           teamNum                        (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AKSGameState_Heist::GetTeamCash(int* teamNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_Heist.GetTeamCash");

	AKSGameState_Heist_GetTeamCash_Params params;
	params.teamNum = teamNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameState_Heist.GetRefreshes
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AKSGameState_Heist::GetRefreshes()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_Heist.GetRefreshes");

	AKSGameState_Heist_GetRefreshes_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameUserSettings.GetTextChatEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSGameUserSettings::GetTextChatEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameUserSettings.GetTextChatEnabled");

	UKSGameUserSettings_GetTextChatEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGameUserSettings.GetSafeFrameScale
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSGameUserSettings::GetSafeFrameScale()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameUserSettings.GetSafeFrameScale");

	UKSGameUserSettings_GetSafeFrameScale_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGlobalShotListener.ShotNotify
// (Native, Public)
// Parameters:
// struct FKSGlobalShotInfo*      ShotInfo                       (Parm)

void AKSGlobalShotListener::ShotNotify(struct FKSGlobalShotInfo* ShotInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGlobalShotListener.ShotNotify");

	AKSGlobalShotListener_ShotNotify_Params params;
	params.ShotInfo = ShotInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGrenadeTargetingModule.ShouldShowPathGivenState
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSGrenadeTargetingModule::ShouldShowPathGivenState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGrenadeTargetingModule.ShouldShowPathGivenState");

	UKSGrenadeTargetingModule_ShouldShowPathGivenState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGrenadeTargetingModule.GetWeaponAsset_WithProjectile
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UKSWeaponAsset_WithProjectile* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UKSWeaponAsset_WithProjectile* UKSGrenadeTargetingModule::GetWeaponAsset_WithProjectile()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGrenadeTargetingModule.GetWeaponAsset_WithProjectile");

	UKSGrenadeTargetingModule_GetWeaponAsset_WithProjectile_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGrenadeTargetingModule.GetWeaponAsset_Grenade
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UKSWeaponAsset_Grenade*  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UKSWeaponAsset_Grenade* UKSGrenadeTargetingModule::GetWeaponAsset_Grenade()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGrenadeTargetingModule.GetWeaponAsset_Grenade");

	UKSGrenadeTargetingModule_GetWeaponAsset_Grenade_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGrenadeTargetingModule.GetTraceStartLocation
// (Native, Event, Protected, HasDefaults, BlueprintEvent, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector UKSGrenadeTargetingModule::GetTraceStartLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGrenadeTargetingModule.GetTraceStartLocation");

	UKSGrenadeTargetingModule_GetTraceStartLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSGroupedActivityEventTracker.OnChildActivityFinished
// (Final, Native, Public)
// Parameters:
// class UKSActivityInstance**    Activity                       (Parm, ZeroConstructor, IsPlainOldData)

void UKSGroupedActivityEventTracker::OnChildActivityFinished(class UKSActivityInstance** Activity)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGroupedActivityEventTracker.OnChildActivityFinished");

	UKSGroupedActivityEventTracker_OnChildActivityFinished_Params params;
	params.Activity = Activity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSHeadShotTracker.HandleTrackerAccolade
// (Final, Native, Public)
// Parameters:
// class AKSPlayerState**         PlayerState                    (Parm, ZeroConstructor, IsPlainOldData)

void UKSHeadShotTracker::HandleTrackerAccolade(class AKSPlayerState** PlayerState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSHeadShotTracker.HandleTrackerAccolade");

	UKSHeadShotTracker_HandleTrackerAccolade_Params params;
	params.PlayerState = PlayerState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSHUDAnnouncementComponent.GetPlayerController
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AKSPlayerController*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AKSPlayerController* UKSHUDAnnouncementComponent::GetPlayerController()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSHUDAnnouncementComponent.GetPlayerController");

	UKSHUDAnnouncementComponent_GetPlayerController_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSHUDInterface.SetHUDVisible
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                          bVisible                       (Parm, ZeroConstructor, IsPlainOldData)

void UKSHUDInterface::SetHUDVisible(bool* bVisible)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSHUDInterface.SetHUDVisible");

	UKSHUDInterface_SetHUDVisible_Params params;
	params.bVisible = bVisible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSHUDInterface.OnToggleHUD
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UKSHUDInterface::OnToggleHUD()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSHUDInterface.OnToggleHUD");

	UKSHUDInterface_OnToggleHUD_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSHUDInterface.OnLoadRoute
// (Native, Public)
// Parameters:
// struct FName*                  Route                          (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          ForceTransition                (Parm, ZeroConstructor, IsPlainOldData)

void UKSHUDInterface::OnLoadRoute(struct FName* Route, bool* ForceTransition)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSHUDInterface.OnLoadRoute");

	UKSHUDInterface_OnLoadRoute_Params params;
	params.Route = Route;
	params.ForceTransition = ForceTransition;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSHUDInterface.HandleOpenTextChat
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                          BeginChatCommand               (Parm, ZeroConstructor, IsPlainOldData)

void UKSHUDInterface::HandleOpenTextChat(bool* BeginChatCommand)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSHUDInterface.HandleOpenTextChat");

	UKSHUDInterface_HandleOpenTextChat_Params params;
	params.BeginChatCommand = BeginChatCommand;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSHUDInterface.CreateGameRuleWidget
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKSWidgetInfoParams*    WidgetInfoParams               (Parm)

void UKSHUDInterface::CreateGameRuleWidget(struct FKSWidgetInfoParams* WidgetInfoParams)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSHUDInterface.CreateGameRuleWidget");

	UKSHUDInterface_CreateGameRuleWidget_Params params;
	params.WidgetInfoParams = WidgetInfoParams;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSHUDInterface.BroadcastWidgetMessage
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FName*                  Message                        (Parm, ZeroConstructor, IsPlainOldData)

void UKSHUDInterface::BroadcastWidgetMessage(struct FName* Message)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSHUDInterface.BroadcastWidgetMessage");

	UKSHUDInterface_BroadcastWidgetMessage_Params params;
	params.Message = Message;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSHUDInterface.BindEventToWidgetMessages
// (Event, Public, HasOutParms, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FScriptDelegate*        Callback                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UKSHUDInterface::BindEventToWidgetMessages(struct FScriptDelegate* Callback)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSHUDInterface.BindEventToWidgetMessages");

	UKSHUDInterface_BindEventToWidgetMessages_Params params;
	params.Callback = Callback;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSInMatchStore.ServerRequestPurchase
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// struct FInMatchPurchaseInfo*   request                        (Parm)

void UKSInMatchStore::ServerRequestPurchase(struct FInMatchPurchaseInfo* request)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInMatchStore.ServerRequestPurchase");

	UKSInMatchStore_ServerRequestPurchase_Params params;
	params.request = request;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSInMatchStore.RequestPurchase
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FInMatchPurchaseInfo    request                        (Parm, OutParm, ReferenceParm)

void UKSInMatchStore::RequestPurchase(struct FInMatchPurchaseInfo* request)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInMatchStore.RequestPurchase");

	UKSInMatchStore_RequestPurchase_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (request != nullptr)
		*request = params.request;
}


// Function Killstreak.KSInMatchStore.GetStorePages
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int*                           ItemsPerPage                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FInMatchStoreFilterInfo* Filter                         (Parm)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UKSInMatchStore::GetStorePages(int* ItemsPerPage, struct FInMatchStoreFilterInfo* Filter)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInMatchStore.GetStorePages");

	UKSInMatchStore_GetStorePages_Params params;
	params.ItemsPerPage = ItemsPerPage;
	params.Filter = Filter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSInMatchStore.GetStoreInventory
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<struct FInMatchStoreItem> Items                          (Parm, OutParm, ZeroConstructor)
// int*                           PageIndex                      (Parm, ZeroConstructor, IsPlainOldData)
// int*                           ItemsPerPage                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FInMatchStoreFilterInfo* Filter                         (Parm)

void UKSInMatchStore::GetStoreInventory(int* PageIndex, int* ItemsPerPage, struct FInMatchStoreFilterInfo* Filter, TArray<struct FInMatchStoreItem>* Items)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInMatchStore.GetStoreInventory");

	UKSInMatchStore_GetStoreInventory_Params params;
	params.PageIndex = PageIndex;
	params.ItemsPerPage = ItemsPerPage;
	params.Filter = Filter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Items != nullptr)
		*Items = params.Items;
}


// Function Killstreak.KSInMatchStore.GetStockInCategory
// (Event, Protected, HasOutParms, BlueprintEvent)
// Parameters:
// struct FName*                  CategoryName                   (Parm, ZeroConstructor, IsPlainOldData)

void UKSInMatchStore::GetStockInCategory(struct FName* CategoryName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInMatchStore.GetStockInCategory");

	UKSInMatchStore_GetStockInCategory_Params params;
	params.CategoryName = CategoryName;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSInMatchStore.ClientPurchaseSuccess
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// struct FInMatchPurchaseInfo*   Purchase                       (Parm)

void UKSInMatchStore::ClientPurchaseSuccess(struct FInMatchPurchaseInfo* Purchase)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInMatchStore.ClientPurchaseSuccess");

	UKSInMatchStore_ClientPurchaseSuccess_Params params;
	params.Purchase = Purchase;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSInMatchStore.ClientPurchaseError
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// EInMatchStoreError*            ErrorId                        (Parm, ZeroConstructor, IsPlainOldData)

void UKSInMatchStore::ClientPurchaseError(EInMatchStoreError* ErrorId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInMatchStore.ClientPurchaseError");

	UKSInMatchStore_ClientPurchaseError_Params params;
	params.ErrorId = ErrorId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSInputFunctionLibrary.GetGamepadIconSet
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EKSGamepadIcons                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EKSGamepadIcons UKSInputFunctionLibrary::STATIC_GetGamepadIconSet()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInputFunctionLibrary.GetGamepadIconSet");

	UKSInputFunctionLibrary_GetGamepadIconSet_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSInteractable.UsePickupRangeForInteraction
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSInteractable::UsePickupRangeForInteraction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractable.UsePickupRangeForInteraction");

	UKSInteractable_UsePickupRangeForInteraction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSInteractable.ShouldDisplayProgress
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AKSCharacter**           Character                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSInteractable::ShouldDisplayProgress(class AKSCharacter** Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractable.ShouldDisplayProgress");

	UKSInteractable_ShouldDisplayProgress_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSInteractable.IsInteracting
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AKSCharacter**           QueriedChar                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSInteractable::IsInteracting(class AKSCharacter** QueriedChar)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractable.IsInteracting");

	UKSInteractable_IsInteracting_Params params;
	params.QueriedChar = QueriedChar;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSInteractable.IsAutomaticInteraction
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AKSCharacter**           QueriedChar                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSInteractable::IsAutomaticInteraction(class AKSCharacter** QueriedChar)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractable.IsAutomaticInteraction");

	UKSInteractable_IsAutomaticInteraction_Params params;
	params.QueriedChar = QueriedChar;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSInteractable.GetRelativeHeight
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AKSCharacter**           InteractingChar                (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSInteractable::GetRelativeHeight(class AKSCharacter** InteractingChar)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractable.GetRelativeHeight");

	UKSInteractable_GetRelativeHeight_Params params;
	params.InteractingChar = InteractingChar;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSInteractable.GetInteractionType
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* UKSInteractable::GetInteractionType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractable.GetInteractionType");

	UKSInteractable_GetInteractionType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSInteractable.GetInteractionPromptText
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AKSCharacter**           Character                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UKSInteractable::GetInteractionPromptText(class AKSCharacter** Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractable.GetInteractionPromptText");

	UKSInteractable_GetInteractionPromptText_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSInteractable.GetInteractionProgressText
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AKSCharacter**           Character                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UKSInteractable::GetInteractionProgressText(class AKSCharacter** Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractable.GetInteractionProgressText");

	UKSInteractable_GetInteractionProgressText_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSInteractable.GetInteractionPriority
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UKSInteractable::GetInteractionPriority()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractable.GetInteractionPriority");

	UKSInteractable_GetInteractionPriority_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSInteractable.GetInteractionMode
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AKSCharacter**           Character                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FName                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FName UKSInteractable::GetInteractionMode(class AKSCharacter** Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractable.GetInteractionMode");

	UKSInteractable_GetInteractionMode_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSInteractable.GetCurrentInteractors
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AKSCharacter*>    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class AKSCharacter*> UKSInteractable::GetCurrentInteractors()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractable.GetCurrentInteractors");

	UKSInteractable_GetCurrentInteractors_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSInteractable.GetCurrentInteractNum
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UKSInteractable::GetCurrentInteractNum()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractable.GetCurrentInteractNum");

	UKSInteractable_GetCurrentInteractNum_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSInteractable.GetCameraTransition
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FKSInteractableCameraTransition ReturnValue                    (Parm, OutParm, ReturnParm)

struct FKSInteractableCameraTransition UKSInteractable::GetCameraTransition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractable.GetCameraTransition");

	UKSInteractable_GetCameraTransition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSInteractable.GetBestInteractionPoint
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor**                 Interactor                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector UKSInteractable::GetBestInteractionPoint(class AActor** Interactor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractable.GetBestInteractionPoint");

	UKSInteractable_GetBestInteractionPoint_Params params;
	params.Interactor = Interactor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSInteractable.FacesInteractable
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSInteractable::FacesInteractable()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractable.FacesInteractable");

	UKSInteractable_FacesInteractable_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSInteractable.ConstructPrompt
// (Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AKSCharacter**           Character                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FText                   Prefix                         (Parm, OutParm)
// struct FText                   Suffix                         (Parm, OutParm)

void UKSInteractable::ConstructPrompt(class AKSCharacter** Character, struct FText* Prefix, struct FText* Suffix)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractable.ConstructPrompt");

	UKSInteractable_ConstructPrompt_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Prefix != nullptr)
		*Prefix = params.Prefix;
	if (Suffix != nullptr)
		*Suffix = params.Suffix;
}


// Function Killstreak.KSInteractable.CanInteractWhileSkydiving
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSInteractable::CanInteractWhileSkydiving()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractable.CanInteractWhileSkydiving");

	UKSInteractable_CanInteractWhileSkydiving_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSInteractable.CanInteractWhileMoving
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AKSCharacter**           QueriedCharacter               (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSInteractable::CanInteractWhileMoving(class AKSCharacter** QueriedCharacter)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractable.CanInteractWhileMoving");

	UKSInteractable_CanInteractWhileMoving_Params params;
	params.QueriedCharacter = QueriedCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSInteractable.CanInteractWhileDown
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AKSCharacter**           QueriedChar                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSInteractable::CanInteractWhileDown(class AKSCharacter** QueriedChar)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractable.CanInteractWhileDown");

	UKSInteractable_CanInteractWhileDown_Params params;
	params.QueriedChar = QueriedChar;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSInteractable.CanInteractFromBehind
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSInteractable::CanInteractFromBehind()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractable.CanInteractFromBehind");

	UKSInteractable_CanInteractFromBehind_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSInteractable.CanInteract
// (Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AKSCharacter**           QueriedChar                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bPress                         (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           bHold                          (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSInteractable::CanInteract(class AKSCharacter** QueriedChar, bool* bPress, bool* bHold)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractable.CanInteract");

	UKSInteractable_CanInteract_Params params;
	params.QueriedChar = QueriedChar;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (bPress != nullptr)
		*bPress = params.bPress;
	if (bHold != nullptr)
		*bHold = params.bHold;

	return params.ReturnValue;
}


// Function Killstreak.KSInteractable.AllowsMultipleInteraction
// (Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSInteractable::AllowsMultipleInteraction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractable.AllowsMultipleInteraction");

	UKSInteractable_AllowsMultipleInteraction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSLootSiteBase.WeightedSiteShuffle
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<class AKSLootSiteBase*> SiteArray                      (Parm, OutParm, ZeroConstructor, ReferenceParm)

void AKSLootSiteBase::STATIC_WeightedSiteShuffle(TArray<class AKSLootSiteBase*>* SiteArray)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLootSiteBase.WeightedSiteShuffle");

	AKSLootSiteBase_WeightedSiteShuffle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (SiteArray != nullptr)
		*SiteArray = params.SiteArray;
}


// Function Killstreak.KSLootSiteBase.SpawnSpecificLoot
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FLootSiteDropInfo*      Loot                           (ConstParm, Parm, OutParm, ReferenceParm)

void AKSLootSiteBase::SpawnSpecificLoot(struct FLootSiteDropInfo* Loot)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLootSiteBase.SpawnSpecificLoot");

	AKSLootSiteBase_SpawnSpecificLoot_Params params;
	params.Loot = Loot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLootSiteBase.SpawnSpecificItemDrop
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UKSItem**                ItemAsset                      (Parm, ZeroConstructor, IsPlainOldData)

void AKSLootSiteBase::SpawnSpecificItemDrop(class UKSItem** ItemAsset)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLootSiteBase.SpawnSpecificItemDrop");

	AKSLootSiteBase_SpawnSpecificItemDrop_Params params;
	params.ItemAsset = ItemAsset;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLootSiteBase.SpawnItemDropInternal
// (Final, Native, Private)

void AKSLootSiteBase::SpawnItemDropInternal()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLootSiteBase.SpawnItemDropInternal");

	AKSLootSiteBase_SpawnItemDropInternal_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLootSiteBase.SpawnItemDrop
// (Final, Native, Public, BlueprintCallable)

void AKSLootSiteBase::SpawnItemDrop()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLootSiteBase.SpawnItemDrop");

	AKSLootSiteBase_SpawnItemDrop_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLootSiteBase.SpawnedDropDestroyed
// (Final, Native, Private)
// Parameters:
// class AActor**                 DestroyedActor                 (Parm, ZeroConstructor, IsPlainOldData)

void AKSLootSiteBase::SpawnedDropDestroyed(class AActor** DestroyedActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLootSiteBase.SpawnedDropDestroyed");

	AKSLootSiteBase_SpawnedDropDestroyed_Params params;
	params.DestroyedActor = DestroyedActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLootSiteBase.SetSiteActive
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool*                          Active                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSLootSiteBase::SetSiteActive(bool* Active)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLootSiteBase.SetSiteActive");

	AKSLootSiteBase_SetSiteActive_Params params;
	params.Active = Active;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSLootSiteBase.Reset
// (Final, Native, Public, BlueprintCallable)

void AKSLootSiteBase::Reset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLootSiteBase.Reset");

	AKSLootSiteBase_Reset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLootSiteBase.OnRep_RarityTag
// (Final, Native, Protected)

void AKSLootSiteBase::OnRep_RarityTag()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLootSiteBase.OnRep_RarityTag");

	AKSLootSiteBase_OnRep_RarityTag_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLootSiteBase.OnRep_LootSiteState
// (Final, Native, Private)

void AKSLootSiteBase::OnRep_LootSiteState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLootSiteBase.OnRep_LootSiteState");

	AKSLootSiteBase_OnRep_LootSiteState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLootSiteBase.OnRep_CosmeticVisible
// (Final, Native, Private)

void AKSLootSiteBase::OnRep_CosmeticVisible()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLootSiteBase.OnRep_CosmeticVisible");

	AKSLootSiteBase_OnRep_CosmeticVisible_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLootSiteBase.OnCosmeticVisibilityChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool*                          Visible                        (Parm, ZeroConstructor, IsPlainOldData)

void AKSLootSiteBase::OnCosmeticVisibilityChanged(bool* Visible)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLootSiteBase.OnCosmeticVisibilityChanged");

	AKSLootSiteBase_OnCosmeticVisibilityChanged_Params params;
	params.Visible = Visible;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLootSiteBase.IsLooted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSLootSiteBase::IsLooted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLootSiteBase.IsLooted");

	AKSLootSiteBase_IsLooted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSLootSiteBase.IsActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSLootSiteBase::IsActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLootSiteBase.IsActive");

	AKSLootSiteBase_IsActive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSLootSiteBase.GetLootSiteState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FLootSiteState          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FLootSiteState AKSLootSiteBase::GetLootSiteState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLootSiteBase.GetLootSiteState");

	AKSLootSiteBase_GetLootSiteState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSLootSiteBase.FindBestDropLocation
// (Final, Native, Private, HasDefaults)
// Parameters:
// class AKSItemDrop**            InDrop                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector AKSLootSiteBase::FindBestDropLocation(class AKSItemDrop** InDrop)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLootSiteBase.FindBestDropLocation");

	AKSLootSiteBase_FindBestDropLocation_Params params;
	params.InDrop = InDrop;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSLootSiteBase.ChoostLoot
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// struct FLootSiteDropInfo       ReturnValue                    (Parm, OutParm, ReturnParm)

struct FLootSiteDropInfo AKSLootSiteBase::ChoostLoot()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLootSiteBase.ChoostLoot");

	AKSLootSiteBase_ChoostLoot_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSLootSiteBase.ChooseRandomLoot
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FLootSiteDropInfo>* InLoot                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// class UObject**                WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FLootSiteDropInfo       ReturnValue                    (Parm, OutParm, ReturnParm)

struct FLootSiteDropInfo AKSLootSiteBase::STATIC_ChooseRandomLoot(TArray<struct FLootSiteDropInfo>* InLoot, class UObject** WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLootSiteBase.ChooseRandomLoot");

	AKSLootSiteBase_ChooseRandomLoot_Params params;
	params.InLoot = InLoot;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSLootSiteBase.ChooseItemAsset
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UKSItem*                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UKSItem* AKSLootSiteBase::ChooseItemAsset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLootSiteBase.ChooseItemAsset");

	AKSLootSiteBase_ChooseItemAsset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSInteractableLootSite.PickLoot
// (Final, Native, Public, BlueprintCallable)

void AKSInteractableLootSite::PickLoot()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractableLootSite.PickLoot");

	AKSInteractableLootSite_PickLoot_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSInteractableLootSite.OnSuccessfulInteraction
// (Event, Protected, BlueprintEvent)

void AKSInteractableLootSite::OnSuccessfulInteraction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractableLootSite.OnSuccessfulInteraction");

	AKSInteractableLootSite_OnSuccessfulInteraction_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSInteractableLootSite.OnRep_ChosenLoot
// (Native, Protected)

void AKSInteractableLootSite::OnRep_ChosenLoot()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractableLootSite.OnRep_ChosenLoot");

	AKSInteractableLootSite_OnRep_ChosenLoot_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSInteractableLootSite.OnRep_bLooted
// (Native, Protected)

void AKSInteractableLootSite::OnRep_bLooted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractableLootSite.OnRep_bLooted");

	AKSInteractableLootSite_OnRep_bLooted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSInteractableLootSite.GetInteractionTime
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// class AKSCharacter**           InteractingChar                (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSInteractableLootSite::GetInteractionTime(class AKSCharacter** InteractingChar)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractableLootSite.GetInteractionTime");

	AKSInteractableLootSite_GetInteractionTime_Params params;
	params.InteractingChar = InteractingChar;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSInteractableLootSite.ClientBroadcastSpawned
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AKSPlayerController**    Controller                     (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          Removed                        (Parm, ZeroConstructor, IsPlainOldData)

void AKSInteractableLootSite::ClientBroadcastSpawned(class AKSPlayerController** Controller, bool* Removed)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractableLootSite.ClientBroadcastSpawned");

	AKSInteractableLootSite_ClientBroadcastSpawned_Params params;
	params.Controller = Controller;
	params.Removed = Removed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSInteractionManager.ServerTap
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void UKSInteractionManager::ServerTap()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractionManager.ServerTap");

	UKSInteractionManager_ServerTap_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSInteractionManager.ServerStartNew
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// int*                           InInteractionId                (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 InInteractable                 (Parm, ZeroConstructor, IsPlainOldData)
// class AKSCharacter**           InUser                         (Parm, ZeroConstructor, IsPlainOldData)

void UKSInteractionManager::ServerStartNew(int* InInteractionId, class AActor** InInteractable, class AKSCharacter** InUser)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractionManager.ServerStartNew");

	UKSInteractionManager_ServerStartNew_Params params;
	params.InInteractionId = InInteractionId;
	params.InInteractable = InInteractable;
	params.InUser = InUser;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSInteractionManager.ServerHoldRelease
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void UKSInteractionManager::ServerHoldRelease()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractionManager.ServerHoldRelease");

	UKSInteractionManager_ServerHoldRelease_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSInteractionManager.ServerHold
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void UKSInteractionManager::ServerHold()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractionManager.ServerHold");

	UKSInteractionManager_ServerHold_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSInteractionManager.ServerCancel
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void UKSInteractionManager::ServerCancel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractionManager.ServerCancel");

	UKSInteractionManager_ServerCancel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSInteractionManager.ClientInteractionStopped
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// int*                           InInteractionId                (Parm, ZeroConstructor, IsPlainOldData)
// EKSInteractionResult*          Result                         (Parm, ZeroConstructor, IsPlainOldData)

void UKSInteractionManager::ClientInteractionStopped(int* InInteractionId, EKSInteractionResult* Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractionManager.ClientInteractionStopped");

	UKSInteractionManager_ClientInteractionStopped_Params params;
	params.InInteractionId = InInteractionId;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSInteractionManager.ClientInteractionStarted
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// int*                           InInteractionId                (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Duration                       (Parm, ZeroConstructor, IsPlainOldData)

void UKSInteractionManager::ClientInteractionStarted(int* InInteractionId, float* Duration)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractionManager.ClientInteractionStarted");

	UKSInteractionManager_ClientInteractionStarted_Params params;
	params.InInteractionId = InInteractionId;
	params.Duration = Duration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSInteractionType.MakeInteractableEffect
// (Native, Event, Protected, HasDefaults, BlueprintEvent, Const)
// Parameters:
// bool*                          bIsStart                       (Parm, ZeroConstructor, IsPlainOldData)
// class AKSCharacter**           Character                      (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 Interactable                   (Parm, ZeroConstructor, IsPlainOldData)
// EKSInteractionResult*          Result                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                InteractableLocation           (Parm, ZeroConstructor, IsPlainOldData)
// class UParticleSystemComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UParticleSystemComponent* UKSInteractionType::MakeInteractableEffect(bool* bIsStart, class AKSCharacter** Character, class AActor** Interactable, EKSInteractionResult* Result, struct FVector* InteractableLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractionType.MakeInteractableEffect");

	UKSInteractionType_MakeInteractableEffect_Params params;
	params.bIsStart = bIsStart;
	params.Character = Character;
	params.Interactable = Interactable;
	params.Result = Result;
	params.InteractableLocation = InteractableLocation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSInteractionType.MakeCharacterEffect
// (Native, Event, Protected, HasDefaults, BlueprintEvent, Const)
// Parameters:
// bool*                          bIsStart                       (Parm, ZeroConstructor, IsPlainOldData)
// class AKSCharacter**           Character                      (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 Interactable                   (Parm, ZeroConstructor, IsPlainOldData)
// EKSInteractionResult*          Result                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                InteractableLocation           (Parm, ZeroConstructor, IsPlainOldData)
// class UParticleSystemComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UParticleSystemComponent* UKSInteractionType::MakeCharacterEffect(bool* bIsStart, class AKSCharacter** Character, class AActor** Interactable, EKSInteractionResult* Result, struct FVector* InteractableLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractionType.MakeCharacterEffect");

	UKSInteractionType_MakeCharacterEffect_Params params;
	params.bIsStart = bIsStart;
	params.Character = Character;
	params.Interactable = Interactable;
	params.Result = Result;
	params.InteractableLocation = InteractableLocation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSInteractionType.GetInteractableEffect
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool*                          bIsStart                       (Parm, ZeroConstructor, IsPlainOldData)
// EKSInteractionResult*          Result                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FKSParticleSystemAttachment ReturnValue                    (Parm, OutParm, ReturnParm)

struct FKSParticleSystemAttachment UKSInteractionType::GetInteractableEffect(bool* bIsStart, EKSInteractionResult* Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractionType.GetInteractableEffect");

	UKSInteractionType_GetInteractableEffect_Params params;
	params.bIsStart = bIsStart;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSInteractionType.GetCharacterEffect
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool*                          bIsStart                       (Parm, ZeroConstructor, IsPlainOldData)
// EKSInteractionResult*          Result                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FKSParticleSystemAttachment ReturnValue                    (Parm, OutParm, ReturnParm)

struct FKSParticleSystemAttachment UKSInteractionType::GetCharacterEffect(bool* bIsStart, EKSInteractionResult* Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractionType.GetCharacterEffect");

	UKSInteractionType_GetCharacterEffect_Params params;
	params.bIsStart = bIsStart;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSItem_Gender.GetGender
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EKSCharacterGender             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EKSCharacterGender UKSItem_Gender::GetGender()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItem_Gender.GetGender");

	UKSItem_Gender_GetGender_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSItemBundle.GetSortedBundledItems
// (Final, Native, Public, HasOutParms, BlueprintCallable)

void UKSItemBundle::GetSortedBundledItems()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItemBundle.GetSortedBundledItems");

	UKSItemBundle_GetSortedBundledItems_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.ItemDropWidgetInterface.ShowLabel
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UItemDropWidgetInterface::ShowLabel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.ItemDropWidgetInterface.ShowLabel");

	UItemDropWidgetInterface_ShowLabel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.ItemDropWidgetInterface.SetOwningWidgetComponent
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UActorComponent**        WidgetComp                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UItemDropWidgetInterface::SetOwningWidgetComponent(class UActorComponent** WidgetComp)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.ItemDropWidgetInterface.SetOwningWidgetComponent");

	UItemDropWidgetInterface_SetOwningWidgetComponent_Params params;
	params.WidgetComp = WidgetComp;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.ItemDropWidgetInterface.SetLabel
// (Event, Public, HasOutParms, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FText*                  LabelText                      (ConstParm, Parm, OutParm, ReferenceParm)

void UItemDropWidgetInterface::SetLabel(struct FText* LabelText)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.ItemDropWidgetInterface.SetLabel");

	UItemDropWidgetInterface_SetLabel_Params params;
	params.LabelText = LabelText;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.ItemDropWidgetInterface.HideLabel
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UItemDropWidgetInterface::HideLabel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.ItemDropWidgetInterface.HideLabel");

	UItemDropWidgetInterface_HideLabel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobItem.IsValidJobItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UKSItem**                KSItem                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSJobItem::IsValidJobItem(class UKSItem** KSItem)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobItem.IsValidJobItem");

	UKSJobItem_IsValidJobItem_Params params;
	params.KSItem = KSItem;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSJobItem.GetSoftSmallJobIcon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)

void UKSJobItem::GetSoftSmallJobIcon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobItem.GetSoftSmallJobIcon");

	UKSJobItem_GetSoftSmallJobIcon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobItem.GetSmallJobIcon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTexture2D*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTexture2D* UKSJobItem::GetSmallJobIcon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobItem.GetSmallJobIcon");

	UKSJobItem_GetSmallJobIcon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSJobItem.GetQuickMeleeWeapon
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSJobItem::GetQuickMeleeWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobItem.GetQuickMeleeWeapon");

	UKSJobItem_GetQuickMeleeWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSJobItem.GetMeleeWeapon
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSJobItem::GetMeleeWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobItem.GetMeleeWeapon");

	UKSJobItem_GetMeleeWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSJobItem.GetJobRole
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UKSJobRole*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UKSJobRole* UKSJobItem::GetJobRole()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobItem.GetJobRole");

	UKSJobItem_GetJobRole_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSJobItem.GetDefaultSkin
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UKSSkinBundle*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UKSSkinBundle* UKSJobItem::GetDefaultSkin()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobItem.GetDefaultSkin");

	UKSJobItem_GetDefaultSkin_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSJobItem.GetDefaultSecondaryWeapon
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSJobItem::GetDefaultSecondaryWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobItem.GetDefaultSecondaryWeapon");

	UKSJobItem_GetDefaultSecondaryWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSJobItem.GetDefaultPrimaryWeapon
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSJobItem::GetDefaultPrimaryWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobItem.GetDefaultPrimaryWeapon");

	UKSJobItem_GetDefaultPrimaryWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSJobItem.GetDefaultPerks
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSJobItem::GetDefaultPerks()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobItem.GetDefaultPerks");

	UKSJobItem_GetDefaultPerks_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSJobItem.GetDefaultGadget
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSJobItem::GetDefaultGadget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobItem.GetDefaultGadget");

	UKSJobItem_GetDefaultGadget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSJobItem.GetAlternativeSecondaryWeapon
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSJobItem::GetAlternativeSecondaryWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobItem.GetAlternativeSecondaryWeapon");

	UKSJobItem_GetAlternativeSecondaryWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSJobItem.GetAlternativePrimaryWeapon
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSJobItem::GetAlternativePrimaryWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobItem.GetAlternativePrimaryWeapon");

	UKSJobItem_GetAlternativePrimaryWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSJobItem.GetAlternativeGadget
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSJobItem::GetAlternativeGadget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobItem.GetAlternativeGadget");

	UKSJobItem_GetAlternativeGadget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.JobLoadout.ValidateAttachmentForWeapon
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UKSItem**                AttachmentToCheck              (Parm, ZeroConstructor, IsPlainOldData)
// class UKSItem**                Weapon                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UJobLoadout::ValidateAttachmentForWeapon(class UKSItem** AttachmentToCheck, class UKSItem** Weapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.JobLoadout.ValidateAttachmentForWeapon");

	UJobLoadout_ValidateAttachmentForWeapon_Params params;
	params.AttachmentToCheck = AttachmentToCheck;
	params.Weapon = Weapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.JobLoadout.SetToJobDefaults
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UKSJobItem**             InJobItem                      (Parm, ZeroConstructor, IsPlainOldData)

void UJobLoadout::SetToJobDefaults(class UKSJobItem** InJobItem)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.JobLoadout.SetToJobDefaults");

	UJobLoadout_SetToJobDefaults_Params params;
	params.InJobItem = InJobItem;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.JobLoadout.SetSlot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EJobLoadoutSlot*               JobSlot                        (Parm, ZeroConstructor, IsPlainOldData)
// class UKSItem**                KSItem                         (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          IgnoreJobItem                  (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UJobLoadout::SetSlot(EJobLoadoutSlot* JobSlot, class UKSItem** KSItem, bool* IgnoreJobItem)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.JobLoadout.SetSlot");

	UJobLoadout_SetSlot_Params params;
	params.JobSlot = JobSlot;
	params.KSItem = KSItem;
	params.IgnoreJobItem = IgnoreJobItem;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.JobLoadout.GetSlot
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// EJobLoadoutSlot*               JobSlot                        (Parm, ZeroConstructor, IsPlainOldData)
// class UKSItem*                 OutKSItem                      (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UJobLoadout::GetSlot(EJobLoadoutSlot* JobSlot, class UKSItem** OutKSItem)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.JobLoadout.GetSlot");

	UJobLoadout_GetSlot_Params params;
	params.JobSlot = JobSlot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutKSItem != nullptr)
		*OutKSItem = params.OutKSItem;

	return params.ReturnValue;
}


// Function Killstreak.JobLoadout.GetAsMap
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// TMap<EJobLoadoutSlot, class UKSItem*> OutMap                         (Parm, OutParm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UJobLoadout::GetAsMap(TMap<EJobLoadoutSlot, class UKSItem*>* OutMap)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.JobLoadout.GetAsMap");

	UJobLoadout_GetAsMap_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutMap != nullptr)
		*OutMap = params.OutMap;

	return params.ReturnValue;
}


// Function Killstreak.JobLoadout.CleanJobLoadoutItems
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<EJobLoadoutSlot>        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<EJobLoadoutSlot> UJobLoadout::CleanJobLoadoutItems()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.JobLoadout.CleanJobLoadoutItems");

	UJobLoadout_CleanJobLoadoutItems_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSJobSelectionComponent.OnRep_EntryCount
// (Final, Native, Protected)

void UKSJobSelectionComponent::OnRep_EntryCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobSelectionComponent.OnRep_EntryCount");

	UKSJobSelectionComponent_OnRep_EntryCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobSelectionComponent.OnPhaseChange
// (Final, Native, Protected, HasOutParms)
// Parameters:
// struct FName*                  NewPhase                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void UKSJobSelectionComponent::OnPhaseChange(struct FName* NewPhase)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobSelectionComponent.OnPhaseChange");

	UKSJobSelectionComponent_OnPhaseChange_Params params;
	params.NewPhase = NewPhase;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobSelectionComponent.NewPlayerStarting
// (Final, Native, Protected)
// Parameters:
// class APlayerController**      NewPlayer                      (Parm, ZeroConstructor, IsPlainOldData)

void UKSJobSelectionComponent::NewPlayerStarting(class APlayerController** NewPlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobSelectionComponent.NewPlayerStarting");

	UKSJobSelectionComponent_NewPlayerStarting_Params params;
	params.NewPlayer = NewPlayer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobSelectionComponent.NewBotStarting
// (Final, Native, Protected)
// Parameters:
// class AKSAIController**        NewBot                         (Parm, ZeroConstructor, IsPlainOldData)

void UKSJobSelectionComponent::NewBotStarting(class AKSAIController** NewBot)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobSelectionComponent.NewBotStarting");

	UKSJobSelectionComponent_NewBotStarting_Params params;
	params.NewBot = NewBot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobSelectionComponent.IsReady
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSJobSelectionComponent::IsReady()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobSelectionComponent.IsReady");

	UKSJobSelectionComponent_IsReady_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSJobSelectionComponent.InitializeJobSelectionList
// (Final, Native, Protected)

void UKSJobSelectionComponent::InitializeJobSelectionList()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobSelectionComponent.InitializeJobSelectionList");

	UKSJobSelectionComponent_InitializeJobSelectionList_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobSelectionComponent.GetJobSelectionEntries
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FJobSelectionEntry> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FJobSelectionEntry> UKSJobSelectionComponent::GetJobSelectionEntries()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobSelectionComponent.GetJobSelectionEntries");

	UKSJobSelectionComponent_GetJobSelectionEntries_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSJobSelectionManager.ServerRequestSelectionState
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// int*                           ItemId                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// EJobSelectionState*            State                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UKSJobSelectionManager::ServerRequestSelectionState(int* ItemId, EJobSelectionState* State)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobSelectionManager.ServerRequestSelectionState");

	UKSJobSelectionManager_ServerRequestSelectionState_Params params;
	params.ItemId = ItemId;
	params.State = State;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobSelectionManager.RequestSelectionState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int*                           ItemId                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// EJobSelectionState*            State                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSJobSelectionManager::RequestSelectionState(int* ItemId, EJobSelectionState* State)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobSelectionManager.RequestSelectionState");

	UKSJobSelectionManager_RequestSelectionState_Params params;
	params.ItemId = ItemId;
	params.State = State;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSJobSelectionManager.PlayerTeamSet
// (Final, Native, Protected)
// Parameters:
// class AKSPlayerState**         PlayerState                    (Parm, ZeroConstructor, IsPlainOldData)

void UKSJobSelectionManager::PlayerTeamSet(class AKSPlayerState** PlayerState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobSelectionManager.PlayerTeamSet");

	UKSJobSelectionManager_PlayerTeamSet_Params params;
	params.PlayerState = PlayerState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobSelectionManager.PlayerStateSet
// (Final, Native, Protected)
// Parameters:
// class AKSPlayerState**         PlayerState                    (Parm, ZeroConstructor, IsPlainOldData)

void UKSJobSelectionManager::PlayerStateSet(class AKSPlayerState** PlayerState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobSelectionManager.PlayerStateSet");

	UKSJobSelectionManager_PlayerStateSet_Params params;
	params.PlayerState = PlayerState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobSelectionManager.JobSelectionComponentReady
// (Final, Native, Protected)
// Parameters:
// class UKSJobSelectionComponent** InSelectionComponent           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UKSJobSelectionManager::JobSelectionComponentReady(class UKSJobSelectionComponent** InSelectionComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobSelectionManager.JobSelectionComponentReady");

	UKSJobSelectionManager_JobSelectionComponentReady_Params params;
	params.InSelectionComponent = InSelectionComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobSelectionManager.IsReady
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSJobSelectionManager::IsReady()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobSelectionManager.IsReady");

	UKSJobSelectionManager_IsReady_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSJobSelectionManager.GetJobSelectionComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UKSJobSelectionComponent* ReturnValue                    (ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UKSJobSelectionComponent* UKSJobSelectionManager::GetJobSelectionComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobSelectionManager.GetJobSelectionComponent");

	UKSJobSelectionManager_GetJobSelectionComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSJobSelectionManager.ClientAcknowledgeStateSelection
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// int*                           ItemId                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bSuccess                       (Parm, ZeroConstructor, IsPlainOldData)
// EJobSelectionState*            RequestState                   (Parm, ZeroConstructor, IsPlainOldData)

void UKSJobSelectionManager::ClientAcknowledgeStateSelection(int* ItemId, bool* bSuccess, EJobSelectionState* RequestState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobSelectionManager.ClientAcknowledgeStateSelection");

	UKSJobSelectionManager_ClientAcknowledgeStateSelection_Params params;
	params.ItemId = ItemId;
	params.bSuccess = bSuccess;
	params.RequestState = RequestState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobSelectPreviewActor.SetModelViewerDelay
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float*                         Timer                          (Parm, ZeroConstructor, IsPlainOldData)

void AKSJobSelectPreviewActor::SetModelViewerDelay(float* Timer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobSelectPreviewActor.SetModelViewerDelay");

	AKSJobSelectPreviewActor_SetModelViewerDelay_Params params;
	params.Timer = Timer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobSelectPreviewActor.SetJobToQueuedId
// (Final, Native, Public, BlueprintCallable)

void AKSJobSelectPreviewActor::SetJobToQueuedId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobSelectPreviewActor.SetJobToQueuedId");

	AKSJobSelectPreviewActor_SetJobToQueuedId_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobSelectPreviewActor.SetJob
// (Final, Native, Public, HasOutParms, BlueprintCallable)

void AKSJobSelectPreviewActor::SetJob()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobSelectPreviewActor.SetJob");

	AKSJobSelectPreviewActor_SetJob_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobSelectPreviewActor.SetHoveredJob
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int*                           JobId                          (Parm, ZeroConstructor, IsPlainOldData)

void AKSJobSelectPreviewActor::SetHoveredJob(int* JobId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobSelectPreviewActor.SetHoveredJob");

	AKSJobSelectPreviewActor_SetHoveredJob_Params params;
	params.JobId = JobId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobSelectPreviewActor.PreLobbyCharacterDestroy
// (Event, Protected, BlueprintEvent)

void AKSJobSelectPreviewActor::PreLobbyCharacterDestroy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobSelectPreviewActor.PreLobbyCharacterDestroy");

	AKSJobSelectPreviewActor_PreLobbyCharacterDestroy_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobSelectPreviewActor.PostLobbyCharacterSpawned
// (Event, Protected, BlueprintEvent)

void AKSJobSelectPreviewActor::PostLobbyCharacterSpawned()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobSelectPreviewActor.PostLobbyCharacterSpawned");

	AKSJobSelectPreviewActor_PostLobbyCharacterSpawned_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobSelectPreviewActor.GetPreviewLoadState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EKSJobSelectPreviewLoadState   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EKSJobSelectPreviewLoadState AKSJobSelectPreviewActor::GetPreviewLoadState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobSelectPreviewActor.GetPreviewLoadState");

	AKSJobSelectPreviewActor_GetPreviewLoadState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSJobSelectPreviewActor.GetPositionIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AKSJobSelectPreviewActor::GetPositionIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobSelectPreviewActor.GetPositionIndex");

	AKSJobSelectPreviewActor_GetPositionIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSJobSelectPreviewActor.GetLobbyCharacter
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AKSLobbyCharacter*       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AKSLobbyCharacter* AKSJobSelectPreviewActor::GetLobbyCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobSelectPreviewActor.GetLobbyCharacter");

	AKSJobSelectPreviewActor_GetLobbyCharacter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSJobSelectPreviewActor.GetCharacterName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText AKSJobSelectPreviewActor::GetCharacterName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobSelectPreviewActor.GetCharacterName");

	AKSJobSelectPreviewActor_GetCharacterName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSJobSelectPreviewActor.BlueprintStateChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// EKSJobSelectPreviewLoadState*  PreviousState                  (Parm, ZeroConstructor, IsPlainOldData)

void AKSJobSelectPreviewActor::BlueprintStateChanged(EKSJobSelectPreviewLoadState* PreviousState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobSelectPreviewActor.BlueprintStateChanged");

	AKSJobSelectPreviewActor_BlueprintStateChanged_Params params;
	params.PreviousState = PreviousState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSKillCam.KillCamStop
// (Final, Native, Public)

void UKSKillCam::KillCamStop()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSKillCam.KillCamStop");

	UKSKillCam_KillCamStop_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSKillCam.DestroySpectatorController
// (Final, Native, Public)

void UKSKillCam::DestroySpectatorController()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSKillCam.DestroySpectatorController");

	UKSKillCam_DestroySpectatorController_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.ViewedPawnTakeDamage
// (Native, Public)
// Parameters:
// class AActor**                 InActor                        (Parm, ZeroConstructor, IsPlainOldData)
// float*                         DamageAmount                   (Parm, ZeroConstructor, IsPlainOldData)
// class UDamageType**            DamageTypeCDO                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AController**            EventInstigator                (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)

void AKSPlayerController::ViewedPawnTakeDamage(class AActor** InActor, float* DamageAmount, class UDamageType** DamageTypeCDO, class AController** EventInstigator, class AActor** DamageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.ViewedPawnTakeDamage");

	AKSPlayerController_ViewedPawnTakeDamage_Params params;
	params.InActor = InActor;
	params.DamageAmount = DamageAmount;
	params.DamageTypeCDO = DamageTypeCDO;
	params.EventInstigator = EventInstigator;
	params.DamageCauser = DamageCauser;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.ViewedPawnTakeArmorDamage
// (Native, Public)
// Parameters:
// class AActor**                 InActor                        (Parm, ZeroConstructor, IsPlainOldData)
// float*                         DamageAmount                   (Parm, ZeroConstructor, IsPlainOldData)
// class UDamageType**            DamageTypeCDO                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AController**            EventInstigator                (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)

void AKSPlayerController::ViewedPawnTakeArmorDamage(class AActor** InActor, float* DamageAmount, class UDamageType** DamageTypeCDO, class AController** EventInstigator, class AActor** DamageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.ViewedPawnTakeArmorDamage");

	AKSPlayerController_ViewedPawnTakeArmorDamage_Params params;
	params.InActor = InActor;
	params.DamageAmount = DamageAmount;
	params.DamageTypeCDO = DamageTypeCDO;
	params.EventInstigator = EventInstigator;
	params.DamageCauser = DamageCauser;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.ViewedPawnInstigatedDamageNotify
// (Native, Public, HasOutParms)
// Parameters:
// class AKSCharacterBase**       InPawn                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FCombatEventInfo*       DamageInfo                     (ConstParm, Parm, OutParm, ReferenceParm)

void AKSPlayerController::ViewedPawnInstigatedDamageNotify(class AKSCharacterBase** InPawn, struct FCombatEventInfo* DamageInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.ViewedPawnInstigatedDamageNotify");

	AKSPlayerController_ViewedPawnInstigatedDamageNotify_Params params;
	params.InPawn = InPawn;
	params.DamageInfo = DamageInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.ViewedPawnInstigatedDamage
// (Native, Public)
// Parameters:
// class AKSCharacterBase**       InPawn                         (Parm, ZeroConstructor, IsPlainOldData)
// float*                         DamageAmount                   (Parm, ZeroConstructor, IsPlainOldData)
// class UDamageType**            DamageTypeCDO                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 Target                         (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)

void AKSPlayerController::ViewedPawnInstigatedDamage(class AKSCharacterBase** InPawn, float* DamageAmount, class UDamageType** DamageTypeCDO, class AActor** Target, class AActor** DamageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.ViewedPawnInstigatedDamage");

	AKSPlayerController_ViewedPawnInstigatedDamage_Params params;
	params.InPawn = InPawn;
	params.DamageAmount = DamageAmount;
	params.DamageTypeCDO = DamageTypeCDO;
	params.Target = Target;
	params.DamageCauser = DamageCauser;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.TriggerInputAction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FName*                  ActionName                     (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EInputEvent>*      InputEvent                     (Parm, ZeroConstructor, IsPlainOldData)

void AKSPlayerController::TriggerInputAction(struct FName* ActionName, TEnumAsByte<EInputEvent>* InputEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.TriggerInputAction");

	AKSPlayerController_TriggerInputAction_Params params;
	params.ActionName = ActionName;
	params.InputEvent = InputEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.ToggleTouch
// (Final, Exec, Native, Public)

void AKSPlayerController::ToggleTouch()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.ToggleTouch");

	AKSPlayerController_ToggleTouch_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.SetGamepadTurnRateScale
// (Final, Exec, Native, Public)
// Parameters:
// float*                         NewScale                       (Parm, ZeroConstructor, IsPlainOldData)

void AKSPlayerController::SetGamepadTurnRateScale(float* NewScale)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.SetGamepadTurnRateScale");

	AKSPlayerController_SetGamepadTurnRateScale_Params params;
	params.NewScale = NewScale;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.SetGamepadLookUpRateScale
// (Final, Exec, Native, Public)
// Parameters:
// float*                         NewScale                       (Parm, ZeroConstructor, IsPlainOldData)

void AKSPlayerController::SetGamepadLookUpRateScale(float* NewScale)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.SetGamepadLookUpRateScale");

	AKSPlayerController_SetGamepadLookUpRateScale_Params params;
	params.NewScale = NewScale;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.ServerUpdatePing
// (Net, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// float*                         ExactPing                      (Parm, ZeroConstructor, IsPlainOldData)

void AKSPlayerController::ServerUpdatePing(float* ExactPing)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.ServerUpdatePing");

	AKSPlayerController_ServerUpdatePing_Params params;
	params.ExactPing = ExactPing;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.ServerPushFrameRateData
// (Net, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FClientStatistics*      PushedRender                   (ConstParm, Parm, ReferenceParm)
// struct FClientStatistics*      PushedGame                     (ConstParm, Parm, ReferenceParm)
// struct FClientStatistics*      PushedGPU                      (ConstParm, Parm, ReferenceParm)
// struct FClientStatistics*      PushedFrame                    (ConstParm, Parm, ReferenceParm)
// struct FClientStatistics*      PushedRHI                      (ConstParm, Parm, ReferenceParm)

void AKSPlayerController::ServerPushFrameRateData(struct FClientStatistics* PushedRender, struct FClientStatistics* PushedGame, struct FClientStatistics* PushedGPU, struct FClientStatistics* PushedFrame, struct FClientStatistics* PushedRHI)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.ServerPushFrameRateData");

	AKSPlayerController_ServerPushFrameRateData_Params params;
	params.PushedRender = PushedRender;
	params.PushedGame = PushedGame;
	params.PushedGPU = PushedGPU;
	params.PushedFrame = PushedFrame;
	params.PushedRHI = PushedRHI;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.ServerPushClientSpec
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FClientSpec*            PushedClientSpec               (ConstParm, Parm, ReferenceParm)

void AKSPlayerController::ServerPushClientSpec(struct FClientSpec* PushedClientSpec)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.ServerPushClientSpec");

	AKSPlayerController_ServerPushClientSpec_Params params;
	params.PushedClientSpec = PushedClientSpec;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.ServerNotifyClientSimpleSimulation
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// bool*                          UseSimple                      (Parm, ZeroConstructor, IsPlainOldData)

void AKSPlayerController::ServerNotifyClientSimpleSimulation(bool* UseSimple)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.ServerNotifyClientSimpleSimulation");

	AKSPlayerController_ServerNotifyClientSimpleSimulation_Params params;
	params.UseSimple = UseSimple;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.ServerLagCompensationVisualization
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool*                          bEnable                        (Parm, ZeroConstructor, IsPlainOldData)

void AKSPlayerController::ServerLagCompensationVisualization(bool* bEnable)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.ServerLagCompensationVisualization");

	AKSPlayerController_ServerLagCompensationVisualization_Params params;
	params.bEnable = bEnable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.ServerChangeSpectateTarget
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool*                          bForward                       (Parm, ZeroConstructor, IsPlainOldData)

void AKSPlayerController::ServerChangeSpectateTarget(bool* bForward)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.ServerChangeSpectateTarget");

	AKSPlayerController_ServerChangeSpectateTarget_Params params;
	params.bForward = bForward;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.ServerBouncePing
// (Net, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// float*                         Timestamp                      (Parm, ZeroConstructor, IsPlainOldData)

void AKSPlayerController::ServerBouncePing(float* Timestamp)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.ServerBouncePing");

	AKSPlayerController_ServerBouncePing_Params params;
	params.Timestamp = Timestamp;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.ReportWeaponsEquipped
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void AKSPlayerController::ReportWeaponsEquipped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.ReportWeaponsEquipped");

	AKSPlayerController_ReportWeaponsEquipped_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.ReportTimeRevealedCharacter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AKSCharacterBase**       RevealedChar                   (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Duration                       (Parm, ZeroConstructor, IsPlainOldData)

void AKSPlayerController::ReportTimeRevealedCharacter(class AKSCharacterBase** RevealedChar, float* Duration)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.ReportTimeRevealedCharacter");

	AKSPlayerController_ReportTimeRevealedCharacter_Params params;
	params.RevealedChar = RevealedChar;
	params.Duration = Duration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.ReportSetRevealCharacter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AKSCharacterBase**       TargetChar                     (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          Revealed                       (Parm, ZeroConstructor, IsPlainOldData)

void AKSPlayerController::ReportSetRevealCharacter(class AKSCharacterBase** TargetChar, bool* Revealed)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.ReportSetRevealCharacter");

	AKSPlayerController_ReportSetRevealCharacter_Params params;
	params.TargetChar = TargetChar;
	params.Revealed = Revealed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.ReportKillcamWorldReady
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void AKSPlayerController::ReportKillcamWorldReady()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.ReportKillcamWorldReady");

	AKSPlayerController_ReportKillcamWorldReady_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.ReportApparelApplied
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void AKSPlayerController::ReportApparelApplied()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.ReportApparelApplied");

	AKSPlayerController_ReportApparelApplied_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.ReportAllReadyConditionsMet
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void AKSPlayerController::ReportAllReadyConditionsMet()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.ReportAllReadyConditionsMet");

	AKSPlayerController_ReportAllReadyConditionsMet_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.PlayEmoteByEquipPoint
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FGameplayTag*           InEquipPoint                   (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSPlayerController::PlayEmoteByEquipPoint(struct FGameplayTag* InEquipPoint)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.PlayEmoteByEquipPoint");

	AKSPlayerController_PlayEmoteByEquipPoint_Params params;
	params.InEquipPoint = InEquipPoint;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerController.OnSpectateViewTargetDestroyed
// (Native, Protected)
// Parameters:
// class AActor**                 InViewTarget                   (Parm, ZeroConstructor, IsPlainOldData)

void AKSPlayerController::OnSpectateViewTargetDestroyed(class AActor** InViewTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.OnSpectateViewTargetDestroyed");

	AKSPlayerController_OnSpectateViewTargetDestroyed_Params params;
	params.InViewTarget = InViewTarget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.OnSpectateControllerDestroyed
// (Native, Protected)
// Parameters:
// class AActor**                 InActor                        (Parm, ZeroConstructor, IsPlainOldData)

void AKSPlayerController::OnSpectateControllerDestroyed(class AActor** InActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.OnSpectateControllerDestroyed");

	AKSPlayerController_OnSpectateControllerDestroyed_Params params;
	params.InActor = InActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.OnRep_CombatLogComponent
// (Final, Native, Private)

void AKSPlayerController::OnRep_CombatLogComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.OnRep_CombatLogComponent");

	AKSPlayerController_OnRep_CombatLogComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.OnPrimaryPawnDestroyed
// (Final, Native, Protected)
// Parameters:
// class AActor**                 InPrimaryPawn                  (Parm, ZeroConstructor, IsPlainOldData)

void AKSPlayerController::OnPrimaryPawnDestroyed(class AActor** InPrimaryPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.OnPrimaryPawnDestroyed");

	AKSPlayerController_OnPrimaryPawnDestroyed_Params params;
	params.InPrimaryPawn = InPrimaryPawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.OnKillcamWorldReady
// (Final, Native, Public)

void AKSPlayerController::OnKillcamWorldReady()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.OnKillcamWorldReady");

	AKSPlayerController_OnKillcamWorldReady_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.OnCurrentSpectateTargetDestroyed
// (Final, Native, Protected)
// Parameters:
// class AActor**                 DestroyedActor                 (Parm, ZeroConstructor, IsPlainOldData)

void AKSPlayerController::OnCurrentSpectateTargetDestroyed(class AActor** DestroyedActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.OnCurrentSpectateTargetDestroyed");

	AKSPlayerController_OnCurrentSpectateTargetDestroyed_Params params;
	params.DestroyedActor = DestroyedActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.OnCharacterWeaponsEquipped
// (Final, Native, Public)

void AKSPlayerController::OnCharacterWeaponsEquipped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.OnCharacterWeaponsEquipped");

	AKSPlayerController_OnCharacterWeaponsEquipped_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.OnCharacterApparelApplied
// (Final, Native, Public)

void AKSPlayerController::OnCharacterApparelApplied()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.OnCharacterApparelApplied");

	AKSPlayerController_OnCharacterApparelApplied_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.LocalStopAimDownSights
// (Native, Event, Public, BlueprintEvent)

void AKSPlayerController::LocalStopAimDownSights()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.LocalStopAimDownSights");

	AKSPlayerController_LocalStopAimDownSights_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.LocalStartAimDownSights
// (Native, Event, Public, BlueprintEvent)

void AKSPlayerController::LocalStartAimDownSights()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.LocalStartAimDownSights");

	AKSPlayerController_LocalStartAimDownSights_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.IsInShownWorld
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSPlayerController::IsInShownWorld()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.IsInShownWorld");

	AKSPlayerController_IsInShownWorld_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerController.GetValidSpectateTargetCount
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AKSPlayerController::GetValidSpectateTargetCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.GetValidSpectateTargetCount");

	AKSPlayerController_GetValidSpectateTargetCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerController.GetUIPawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APawn*                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class APawn* AKSPlayerController::GetUIPawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.GetUIPawn");

	AKSPlayerController_GetUIPawn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerController.GetUIKSCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AKSCharacter*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AKSCharacter* AKSPlayerController::GetUIKSCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.GetUIKSCharacter");

	AKSPlayerController_GetUIKSCharacter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerController.GetShotListener
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UKSPlayerShotListener*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UKSPlayerShotListener* AKSPlayerController::GetShotListener()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.GetShotListener");

	AKSPlayerController_GetShotListener_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerController.GetPrimaryPawn
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AKSCharacterBase*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AKSCharacterBase* AKSPlayerController::GetPrimaryPawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.GetPrimaryPawn");

	AKSPlayerController_GetPrimaryPawn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerController.GetPingManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UKSPingManager*          ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UKSPingManager* AKSPlayerController::GetPingManager()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.GetPingManager");

	AKSPlayerController_GetPingManager_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerController.GetJobSelectionManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UKSJobSelectionManager*  ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UKSJobSelectionManager* AKSPlayerController::GetJobSelectionManager()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.GetJobSelectionManager");

	AKSPlayerController_GetJobSelectionManager_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerController.GetHUDAnnouncmentComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UKSHUDAnnouncementComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UKSHUDAnnouncementComponent* AKSPlayerController::GetHUDAnnouncmentComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.GetHUDAnnouncmentComponent");

	AKSPlayerController_GetHUDAnnouncmentComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerController.GetGamepadLookSpeedManager
// (Final, Native, Public, Const)
// Parameters:
// class UKSGamepadLookSpeedManager* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UKSGamepadLookSpeedManager* AKSPlayerController::GetGamepadLookSpeedManager()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.GetGamepadLookSpeedManager");

	AKSPlayerController_GetGamepadLookSpeedManager_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerController.GetEquipmentManagerComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UKSEquipmentManagerComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UKSEquipmentManagerComponent* AKSPlayerController::GetEquipmentManagerComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.GetEquipmentManagerComponent");

	AKSPlayerController_GetEquipmentManagerComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerController.GetAimAssistComponent
// (Final, Native, Public, Const)
// Parameters:
// class UKSAimAssistComponent*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UKSAimAssistComponent* AKSPlayerController::GetAimAssistComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.GetAimAssistComponent");

	AKSPlayerController_GetAimAssistComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerController.FillInClientSpec
// (Final, Native, Public)

void AKSPlayerController::FillInClientSpec()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.FillInClientSpec");

	AKSPlayerController_FillInClientSpec_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.EventViewedPawnTakeDamage
// (BlueprintCosmetic, Event, Protected, HasDefaults, BlueprintEvent)
// Parameters:
// float*                         DamageAmount                   (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 DamageTypeClass                (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                DamageOrigin                   (Parm, ZeroConstructor, IsPlainOldData)

void AKSPlayerController::EventViewedPawnTakeDamage(float* DamageAmount, class UClass** DamageTypeClass, class AActor** DamageCauser, struct FVector* DamageOrigin)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.EventViewedPawnTakeDamage");

	AKSPlayerController_EventViewedPawnTakeDamage_Params params;
	params.DamageAmount = DamageAmount;
	params.DamageTypeClass = DamageTypeClass;
	params.DamageCauser = DamageCauser;
	params.DamageOrigin = DamageOrigin;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.EventViewedPawnTakeArmorDamage
// (BlueprintCosmetic, Event, Protected, HasDefaults, BlueprintEvent)
// Parameters:
// float*                         DamageAmount                   (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 DamageTypeClass                (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                DamageOrigin                   (Parm, ZeroConstructor, IsPlainOldData)

void AKSPlayerController::EventViewedPawnTakeArmorDamage(float* DamageAmount, class UClass** DamageTypeClass, class AActor** DamageCauser, struct FVector* DamageOrigin)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.EventViewedPawnTakeArmorDamage");

	AKSPlayerController_EventViewedPawnTakeArmorDamage_Params params;
	params.DamageAmount = DamageAmount;
	params.DamageTypeClass = DamageTypeClass;
	params.DamageCauser = DamageCauser;
	params.DamageOrigin = DamageOrigin;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.EventViewedPawnInstigatedDamageNotify
// (BlueprintCosmetic, Event, Protected, HasOutParms, BlueprintEvent)
// Parameters:
// struct FCombatEventInfo*       DamageInfo                     (ConstParm, Parm, OutParm, ReferenceParm)

void AKSPlayerController::EventViewedPawnInstigatedDamageNotify(struct FCombatEventInfo* DamageInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.EventViewedPawnInstigatedDamageNotify");

	AKSPlayerController_EventViewedPawnInstigatedDamageNotify_Params params;
	params.DamageInfo = DamageInfo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.EventViewedPawnInstigatedDamage
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// float*                         DamageAmount                   (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 DamageTypeClass                (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 Target                         (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)

void AKSPlayerController::EventViewedPawnInstigatedDamage(float* DamageAmount, class UClass** DamageTypeClass, class AActor** Target, class AActor** DamageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.EventViewedPawnInstigatedDamage");

	AKSPlayerController_EventViewedPawnInstigatedDamage_Params params;
	params.DamageAmount = DamageAmount;
	params.DamageTypeClass = DamageTypeClass;
	params.Target = Target;
	params.DamageCauser = DamageCauser;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.ControllerChangedForPickupLabeling
// (Final, Native, Protected)
// Parameters:
// class AKSPlayerController**    NewController                  (Parm, ZeroConstructor, IsPlainOldData)

void AKSPlayerController::ControllerChangedForPickupLabeling(class AKSPlayerController** NewController)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.ControllerChangedForPickupLabeling");

	AKSPlayerController_ControllerChangedForPickupLabeling_Params params;
	params.NewController = NewController;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.CompVis
// (Final, Exec, Native, Public)
// Parameters:
// bool*                          bEnable                        (Parm, ZeroConstructor, IsPlainOldData)

void AKSPlayerController::CompVis(bool* bEnable)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.CompVis");

	AKSPlayerController_CompVis_Params params;
	params.bEnable = bEnable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.ClientViewedPawnTakeDamage
// (Net, NetReliable, Native, Event, Protected, HasDefaults, NetClient)
// Parameters:
// float*                         DamageAmount                   (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 DamageTypeClass                (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                DamageOrigin                   (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bPrimaryPawn                   (Parm, ZeroConstructor, IsPlainOldData)

void AKSPlayerController::ClientViewedPawnTakeDamage(float* DamageAmount, class UClass** DamageTypeClass, class AActor** DamageCauser, struct FVector* DamageOrigin, bool* bPrimaryPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.ClientViewedPawnTakeDamage");

	AKSPlayerController_ClientViewedPawnTakeDamage_Params params;
	params.DamageAmount = DamageAmount;
	params.DamageTypeClass = DamageTypeClass;
	params.DamageCauser = DamageCauser;
	params.DamageOrigin = DamageOrigin;
	params.bPrimaryPawn = bPrimaryPawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.ClientViewedPawnTakeArmorDamage
// (Net, NetReliable, Native, Event, Protected, HasDefaults, NetClient)
// Parameters:
// float*                         DamageAmount                   (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 DamageTypeClass                (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                DamageOrigin                   (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bPrimaryPawn                   (Parm, ZeroConstructor, IsPlainOldData)

void AKSPlayerController::ClientViewedPawnTakeArmorDamage(float* DamageAmount, class UClass** DamageTypeClass, class AActor** DamageCauser, struct FVector* DamageOrigin, bool* bPrimaryPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.ClientViewedPawnTakeArmorDamage");

	AKSPlayerController_ClientViewedPawnTakeArmorDamage_Params params;
	params.DamageAmount = DamageAmount;
	params.DamageTypeClass = DamageTypeClass;
	params.DamageCauser = DamageCauser;
	params.DamageOrigin = DamageOrigin;
	params.bPrimaryPawn = bPrimaryPawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.ClientViewedPawnInstigatedDamageNotify
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// struct FCombatEventInfo*       DamageInfo                     (Parm)
// bool*                          bPrimaryPawn                   (Parm, ZeroConstructor, IsPlainOldData)

void AKSPlayerController::ClientViewedPawnInstigatedDamageNotify(struct FCombatEventInfo* DamageInfo, bool* bPrimaryPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.ClientViewedPawnInstigatedDamageNotify");

	AKSPlayerController_ClientViewedPawnInstigatedDamageNotify_Params params;
	params.DamageInfo = DamageInfo;
	params.bPrimaryPawn = bPrimaryPawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.ClientViewedPawnInstigatedDamage
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// float*                         DamageAmount                   (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 DamageTypeClass                (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 Target                         (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bPrimaryPawn                   (Parm, ZeroConstructor, IsPlainOldData)

void AKSPlayerController::ClientViewedPawnInstigatedDamage(float* DamageAmount, class UClass** DamageTypeClass, class AActor** Target, class AActor** DamageCauser, bool* bPrimaryPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.ClientViewedPawnInstigatedDamage");

	AKSPlayerController_ClientViewedPawnInstigatedDamage_Params params;
	params.DamageAmount = DamageAmount;
	params.DamageTypeClass = DamageTypeClass;
	params.Target = Target;
	params.DamageCauser = DamageCauser;
	params.bPrimaryPawn = bPrimaryPawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.ClientSpectateTeam
// (Net, NetReliable, Native, Event, Public, NetClient)

void AKSPlayerController::ClientSpectateTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.ClientSpectateTeam");

	AKSPlayerController_ClientSpectateTeam_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.ClientSignalEndOfMatch
// (Net, NetReliable, Native, Event, Public, NetClient)

void AKSPlayerController::ClientSignalEndOfMatch()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.ClientSignalEndOfMatch");

	AKSPlayerController_ClientSignalEndOfMatch_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.ClientReturnPing
// (Net, Native, Event, Public, NetClient)
// Parameters:
// float*                         Timestamp                      (Parm, ZeroConstructor, IsPlainOldData)

void AKSPlayerController::ClientReturnPing(float* Timestamp)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.ClientReturnPing");

	AKSPlayerController_ClientReturnPing_Params params;
	params.Timestamp = Timestamp;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.ClientPlayInstantReplay
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// float*                         TimeToRewind                   (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Duration                       (Parm, ZeroConstructor, IsPlainOldData)
// float*                         DilationStart                  (Parm, ZeroConstructor, IsPlainOldData)
// float*                         DilationAmount                 (Parm, ZeroConstructor, IsPlainOldData)

void AKSPlayerController::ClientPlayInstantReplay(float* TimeToRewind, float* Duration, float* DilationStart, float* DilationAmount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.ClientPlayInstantReplay");

	AKSPlayerController_ClientPlayInstantReplay_Params params;
	params.TimeToRewind = TimeToRewind;
	params.Duration = Duration;
	params.DilationStart = DilationStart;
	params.DilationAmount = DilationAmount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.ClientDrawDebugSphere
// (Net, Native, Event, Public, HasDefaults, NetClient, Const)
// Parameters:
// struct FVector*                Center                         (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// float*                         Radius                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FColor*                 Color                          (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// float*                         Duration                       (Parm, ZeroConstructor, IsPlainOldData)

void AKSPlayerController::ClientDrawDebugSphere(struct FVector* Center, float* Radius, struct FColor* Color, float* Duration)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.ClientDrawDebugSphere");

	AKSPlayerController_ClientDrawDebugSphere_Params params;
	params.Center = Center;
	params.Radius = Radius;
	params.Color = Color;
	params.Duration = Duration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.ClientDrawDebugLine
// (Net, Native, Event, Public, HasDefaults, NetClient, Const)
// Parameters:
// struct FVector*                start                          (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FVector*                end                            (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FColor*                 Color                          (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// float*                         Duration                       (Parm, ZeroConstructor, IsPlainOldData)

void AKSPlayerController::ClientDrawDebugLine(struct FVector* start, struct FVector* end, struct FColor* Color, float* Duration)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.ClientDrawDebugLine");

	AKSPlayerController_ClientDrawDebugLine_Params params;
	params.start = start;
	params.end = end;
	params.Color = Color;
	params.Duration = Duration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.ClientDrawDebugCapsule
// (Net, Native, Event, Public, HasDefaults, NetClient, Const)
// Parameters:
// struct FTransform*             Transform                      (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// float*                         Radius                         (Parm, ZeroConstructor, IsPlainOldData)
// float*                         HalfHeight                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FColor*                 Color                          (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// float*                         Duration                       (Parm, ZeroConstructor, IsPlainOldData)

void AKSPlayerController::ClientDrawDebugCapsule(struct FTransform* Transform, float* Radius, float* HalfHeight, struct FColor* Color, float* Duration)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.ClientDrawDebugCapsule");

	AKSPlayerController_ClientDrawDebugCapsule_Params params;
	params.Transform = Transform;
	params.Radius = Radius;
	params.HalfHeight = HalfHeight;
	params.Color = Color;
	params.Duration = Duration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.ClientDrawDebugBox
// (Net, Native, Event, Public, HasDefaults, NetClient, Const)
// Parameters:
// struct FTransform*             Transform                      (ConstParm, Parm, ReferenceParm, IsPlainOldData)
// struct FVector*                Extent                         (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FColor*                 Color                          (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// float*                         Duration                       (Parm, ZeroConstructor, IsPlainOldData)

void AKSPlayerController::ClientDrawDebugBox(struct FTransform* Transform, struct FVector* Extent, struct FColor* Color, float* Duration)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.ClientDrawDebugBox");

	AKSPlayerController_ClientDrawDebugBox_Params params;
	params.Transform = Transform;
	params.Extent = Extent;
	params.Color = Color;
	params.Duration = Duration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.CachePostMatchScoreboard
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// struct FScoreboardStats*       ScoreboardStats                (Parm)

void AKSPlayerController::CachePostMatchScoreboard(struct FScoreboardStats* ScoreboardStats)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.CachePostMatchScoreboard");

	AKSPlayerController_CachePostMatchScoreboard_Params params;
	params.ScoreboardStats = ScoreboardStats;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.CachePostMatchInfo
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// struct FPlayerRewardsSummaryReplicated* RewardsReplicated              (Parm)

void AKSPlayerController::CachePostMatchInfo(struct FPlayerRewardsSummaryReplicated* RewardsReplicated)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.CachePostMatchInfo");

	AKSPlayerController_CachePostMatchInfo_Params params;
	params.RewardsReplicated = RewardsReplicated;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.ApplyKickback
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FInterpCurveVector2D*   KickbackCurve                  (ConstParm, Parm, ZeroConstructor)
// float*                         InKickbackRecoveryDelay        (Parm, ZeroConstructor, IsPlainOldData)
// float*                         InKickbackRecoveryRate         (Parm, ZeroConstructor, IsPlainOldData)
// float*                         InKickbackRecoveryAccel        (Parm, ZeroConstructor, IsPlainOldData)
// float*                         InMaxCumulativeKickbackVerticalAngle (Parm, ZeroConstructor, IsPlainOldData)
// float*                         ScalingFactor                  (Parm, ZeroConstructor, IsPlainOldData)

void AKSPlayerController::ApplyKickback(struct FInterpCurveVector2D* KickbackCurve, float* InKickbackRecoveryDelay, float* InKickbackRecoveryRate, float* InKickbackRecoveryAccel, float* InMaxCumulativeKickbackVerticalAngle, float* ScalingFactor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.ApplyKickback");

	AKSPlayerController_ApplyKickback_Params params;
	params.KickbackCurve = KickbackCurve;
	params.InKickbackRecoveryDelay = InKickbackRecoveryDelay;
	params.InKickbackRecoveryRate = InKickbackRecoveryRate;
	params.InKickbackRecoveryAccel = InKickbackRecoveryAccel;
	params.InMaxCumulativeKickbackVerticalAngle = InMaxCumulativeKickbackVerticalAngle;
	params.ScalingFactor = ScalingFactor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.AimStateChangedForPickupLabeling
// (Final, Native, Public)
// Parameters:
// EKSCharacterAimMode*           AimState                       (Parm, ZeroConstructor, IsPlainOldData)

void AKSPlayerController::AimStateChangedForPickupLabeling(EKSCharacterAimMode* AimState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.AimStateChangedForPickupLabeling");

	AKSPlayerController_AimStateChangedForPickupLabeling_Params params;
	params.AimState = AimState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.AddTimePlayed
// (Final, Native, Public)

void AKSPlayerController::AddTimePlayed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.AddTimePlayed");

	AKSPlayerController_AddTimePlayed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSKillLeaderTracker.ProcessElimEntry
// (Final, Native, Public)
// Parameters:
// class AKSPlayerState**         InstigatorPlayerState          (Parm, ZeroConstructor, IsPlainOldData)

void UKSKillLeaderTracker::ProcessElimEntry(class AKSPlayerState** InstigatorPlayerState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSKillLeaderTracker.ProcessElimEntry");

	UKSKillLeaderTracker_ProcessElimEntry_Params params;
	params.InstigatorPlayerState = InstigatorPlayerState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSKillLeaderTracker.HandleTrackerAccolade
// (Final, Native, Public)
// Parameters:
// class AKSPlayerState**         Player                         (Parm, ZeroConstructor, IsPlainOldData)

void UKSKillLeaderTracker::HandleTrackerAccolade(class AKSPlayerState** Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSKillLeaderTracker.HandleTrackerAccolade");

	UKSKillLeaderTracker_HandleTrackerAccolade_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSKillLeaderTracker.FindPlayerEntry
// (Final, Native, Public, HasOutParms)
// Parameters:
// class AKSPlayerState**         InstigatorPlayerState          (Parm, ZeroConstructor, IsPlainOldData)
// int                            PlayerIndex                    (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSKillLeaderTracker::FindPlayerEntry(class AKSPlayerState** InstigatorPlayerState, int* PlayerIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSKillLeaderTracker.FindPlayerEntry");

	UKSKillLeaderTracker_FindPlayerEntry_Params params;
	params.InstigatorPlayerState = InstigatorPlayerState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (PlayerIndex != nullptr)
		*PlayerIndex = params.PlayerIndex;

	return params.ReturnValue;
}


// Function Killstreak.KSKillLeaderTracker.CheckKillLeader
// (Final, Native, Public)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSKillLeaderTracker::CheckKillLeader()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSKillLeaderTracker.CheckKillLeader");

	UKSKillLeaderTracker_CheckKillLeader_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSLoadoutBundle.GetWeapons
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSLoadoutBundle::GetWeapons()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLoadoutBundle.GetWeapons");

	UKSLoadoutBundle_GetWeapons_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSLoadoutBundle.GetWeaponItemIds
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<int>                    OutWeaponItemIds               (Parm, OutParm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSLoadoutBundle::GetWeaponItemIds(TArray<int>* OutWeaponItemIds)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLoadoutBundle.GetWeaponItemIds");

	UKSLoadoutBundle_GetWeaponItemIds_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutWeaponItemIds != nullptr)
		*OutWeaponItemIds = params.OutWeaponItemIds;

	return params.ReturnValue;
}


// Function Killstreak.KSLoadoutBundle.GetPerks
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSLoadoutBundle::GetPerks()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLoadoutBundle.GetPerks");

	UKSLoadoutBundle_GetPerks_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSLoadoutBundle.GetPerkItemIds
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<int>                    OutPerkItemIds                 (Parm, OutParm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSLoadoutBundle::GetPerkItemIds(TArray<int>* OutPerkItemIds)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLoadoutBundle.GetPerkItemIds");

	UKSLoadoutBundle_GetPerkItemIds_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutPerkItemIds != nullptr)
		*OutPerkItemIds = params.OutPerkItemIds;

	return params.ReturnValue;
}


// Function Killstreak.KSLoadoutBundle.GetBundlePerks
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<class UKSPlayerMod*>    OutPerks                       (Parm, OutParm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSLoadoutBundle::GetBundlePerks(TArray<class UKSPlayerMod*>* OutPerks)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLoadoutBundle.GetBundlePerks");

	UKSLoadoutBundle_GetBundlePerks_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutPerks != nullptr)
		*OutPerks = params.OutPerks;

	return params.ReturnValue;
}


// Function Killstreak.KSLoadoutBundle.GetBundleAbilities
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<class UKSPlayerMod_Activated*> OutAbilities                   (Parm, OutParm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSLoadoutBundle::GetBundleAbilities(TArray<class UKSPlayerMod_Activated*>* OutAbilities)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLoadoutBundle.GetBundleAbilities");

	UKSLoadoutBundle_GetBundleAbilities_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutAbilities != nullptr)
		*OutAbilities = params.OutAbilities;

	return params.ReturnValue;
}


// Function Killstreak.KSLoadoutBundle.GetAttachments
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSLoadoutBundle::GetAttachments()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLoadoutBundle.GetAttachments");

	UKSLoadoutBundle_GetAttachments_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSLoadoutBundle.GetAttachmentItemIds
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<int>                    OutAttachmentItemIds           (Parm, OutParm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSLoadoutBundle::GetAttachmentItemIds(TArray<int>* OutAttachmentItemIds)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLoadoutBundle.GetAttachmentItemIds");

	UKSLoadoutBundle_GetAttachmentItemIds_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutAttachmentItemIds != nullptr)
		*OutAttachmentItemIds = params.OutAttachmentItemIds;

	return params.ReturnValue;
}


// Function Killstreak.KSLoadoutBundle.GetAbilityItemIds
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<int>                    OutAbilityItemIds              (Parm, OutParm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSLoadoutBundle::GetAbilityItemIds(TArray<int>* OutAbilityItemIds)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLoadoutBundle.GetAbilityItemIds");

	UKSLoadoutBundle_GetAbilityItemIds_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutAbilityItemIds != nullptr)
		*OutAbilityItemIds = params.OutAbilityItemIds;

	return params.ReturnValue;
}


// Function Killstreak.KSLoadoutBundle.GetAbilities
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSLoadoutBundle::GetAbilities()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLoadoutBundle.GetAbilities");

	UKSLoadoutBundle_GetAbilities_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSLoadoutClass.GetDynamicPoseImage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool*                          bAllowSyncLoad                 (Parm, ZeroConstructor, IsPlainOldData)
// class UTexture2D*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTexture2D* UKSLoadoutClass::GetDynamicPoseImage(bool* bAllowSyncLoad)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLoadoutClass.GetDynamicPoseImage");

	UKSLoadoutClass_GetDynamicPoseImage_Params params;
	params.bAllowSyncLoad = bAllowSyncLoad;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSLoadoutRuleComponent.AllowItem
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UKSItem**                Item                           (Parm, ZeroConstructor, IsPlainOldData)
// EJobLoadoutSlot*               Slot                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSLoadoutRuleComponent::AllowItem(class UKSItem** Item, EJobLoadoutSlot* Slot)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLoadoutRuleComponent.AllowItem");

	UKSLoadoutRuleComponent_AllowItem_Params params;
	params.Item = Item;
	params.Slot = Slot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSLobbyCharacter.VisibilityChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool*                          IsVisible                      (Parm, ZeroConstructor, IsPlainOldData)

void AKSLobbyCharacter::VisibilityChanged(bool* IsVisible)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLobbyCharacter.VisibilityChanged");

	AKSLobbyCharacter_VisibilityChanged_Params params;
	params.IsVisible = IsVisible;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLobbyCharacter.UpdateHiddenInGame
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSLobbyCharacter::UpdateHiddenInGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLobbyCharacter.UpdateHiddenInGame");

	AKSLobbyCharacter_UpdateHiddenInGame_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSLobbyCharacter.UnsetCharacter
// (Final, Native, Public, BlueprintCallable)

void AKSLobbyCharacter::UnsetCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLobbyCharacter.UnsetCharacter");

	AKSLobbyCharacter_UnsetCharacter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLobbyCharacter.ShowLobbyNameplate
// (Native, Event, Public, BlueprintEvent)

void AKSLobbyCharacter::ShowLobbyNameplate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLobbyCharacter.ShowLobbyNameplate");

	AKSLobbyCharacter_ShowLobbyNameplate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLobbyCharacter.SetupLobbyCharacter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString*                PlayerName                     (Parm, ZeroConstructor)
// class UKSItem**                AvatarItem                     (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          IsLeader                       (Parm, ZeroConstructor, IsPlainOldData)

void AKSLobbyCharacter::SetupLobbyCharacter(struct FString* PlayerName, class UKSItem** AvatarItem, bool* IsLeader)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLobbyCharacter.SetupLobbyCharacter");

	AKSLobbyCharacter_SetupLobbyCharacter_Params params;
	params.PlayerName = PlayerName;
	params.AvatarItem = AvatarItem;
	params.IsLeader = IsLeader;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLobbyCharacter.SetShouldHideInGame
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          ShouldHide                     (Parm, ZeroConstructor, IsPlainOldData)

void AKSLobbyCharacter::SetShouldHideInGame(bool* ShouldHide)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLobbyCharacter.SetShouldHideInGame");

	AKSLobbyCharacter_SetShouldHideInGame_Params params;
	params.ShouldHide = ShouldHide;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLobbyCharacter.SetLobbyNameplate
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// struct FString*                PlayerName                     (Parm, ZeroConstructor)
// class UKSItem**                AvatarItem                     (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          IsLeader                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void AKSLobbyCharacter::SetLobbyNameplate(struct FString* PlayerName, class UKSItem** AvatarItem, bool* IsLeader)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLobbyCharacter.SetLobbyNameplate");

	AKSLobbyCharacter_SetLobbyNameplate_Params params;
	params.PlayerName = PlayerName;
	params.AvatarItem = AvatarItem;
	params.IsLeader = IsLeader;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLobbyCharacter.SetLobbyCharacterAnimState
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// ELobbyCharacterAnimState*      AnimState                      (Parm, ZeroConstructor, IsPlainOldData)

void AKSLobbyCharacter::SetLobbyCharacterAnimState(ELobbyCharacterAnimState* AnimState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLobbyCharacter.SetLobbyCharacterAnimState");

	AKSLobbyCharacter_SetLobbyCharacterAnimState_Params params;
	params.AnimState = AnimState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLobbyCharacter.SetCharacterSkin
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UKSItem**                SkinItem                       (Parm, ZeroConstructor, IsPlainOldData)

void AKSLobbyCharacter::SetCharacterSkin(class UKSItem** SkinItem)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLobbyCharacter.SetCharacterSkin");

	AKSLobbyCharacter_SetCharacterSkin_Params params;
	params.SkinItem = SkinItem;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLobbyCharacter.OnLobbyPresenceStateChange
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// ELobbyPresenceState*           LobbyPresenceState             (Parm, ZeroConstructor, IsPlainOldData)

void AKSLobbyCharacter::OnLobbyPresenceStateChange(ELobbyPresenceState* LobbyPresenceState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLobbyCharacter.OnLobbyPresenceStateChange");

	AKSLobbyCharacter_OnLobbyPresenceStateChange_Params params;
	params.LobbyPresenceState = LobbyPresenceState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLobbyCharacter.IsSet
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSLobbyCharacter::IsSet()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLobbyCharacter.IsSet");

	AKSLobbyCharacter_IsSet_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSLobbyCharacter.IsLobbyCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSLobbyCharacter::IsLobbyCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLobbyCharacter.IsLobbyCharacter");

	AKSLobbyCharacter_IsLobbyCharacter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSLobbyCharacter.HideLobbyNameplate
// (Native, Event, Public, BlueprintEvent)

void AKSLobbyCharacter::HideLobbyNameplate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLobbyCharacter.HideLobbyNameplate");

	AKSLobbyCharacter_HideLobbyNameplate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLobbyCharacter.GetCurrentAnimState
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ELobbyCharacterAnimState       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ELobbyCharacterAnimState AKSLobbyCharacter::GetCurrentAnimState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLobbyCharacter.GetCurrentAnimState");

	AKSLobbyCharacter_GetCurrentAnimState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSLobbyCharacter.GetCharacterIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ELobbyCharacterIndex           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

ELobbyCharacterIndex AKSLobbyCharacter::GetCharacterIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLobbyCharacter.GetCharacterIndex");

	AKSLobbyCharacter_GetCharacterIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSLocalPlayer.IsKillCamReplayActive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSLocalPlayer::IsKillCamReplayActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLocalPlayer.IsKillCamReplayActive");

	UKSLocalPlayer_IsKillCamReplayActive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSLocalPlayer.GetKillCam
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UKSKillCam*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UKSKillCam* UKSLocalPlayer::GetKillCam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLocalPlayer.GetKillCam");

	UKSLocalPlayer_GetKillCam_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSLongShot.HandleTrackerAccolade
// (Final, Native, Public)
// Parameters:
// class AKSPlayerState**         PlayerState                    (Parm, ZeroConstructor, IsPlainOldData)

void UKSLongShot::HandleTrackerAccolade(class AKSPlayerState** PlayerState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLongShot.HandleTrackerAccolade");

	UKSLongShot_HandleTrackerAccolade_Params params;
	params.PlayerState = PlayerState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSMapDifficultyManager.HandleTeamCreated
// (Final, Native, Protected)
// Parameters:
// class AKSTeamState**           TeamState                      (Parm, ZeroConstructor, IsPlainOldData)

void AKSMapDifficultyManager::HandleTeamCreated(class AKSTeamState** TeamState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMapDifficultyManager.HandleTeamCreated");

	AKSMapDifficultyManager_HandleTeamCreated_Params params;
	params.TeamState = TeamState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSMapDifficultyManager.HandleRoundStart
// (Final, Native, Protected, HasOutParms)
// Parameters:
// struct FRoundInitState*        RoundState                     (ConstParm, Parm, OutParm, ReferenceParm)

void AKSMapDifficultyManager::HandleRoundStart(struct FRoundInitState* RoundState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMapDifficultyManager.HandleRoundStart");

	AKSMapDifficultyManager_HandleRoundStart_Params params;
	params.RoundState = RoundState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSMapDifficultyManager.HandleRoundSetup
// (Final, Native, Protected, HasOutParms)
// Parameters:
// struct FRoundInitState*        RoundState                     (ConstParm, Parm, OutParm, ReferenceParm)

void AKSMapDifficultyManager::HandleRoundSetup(struct FRoundInitState* RoundState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMapDifficultyManager.HandleRoundSetup");

	AKSMapDifficultyManager_HandleRoundSetup_Params params;
	params.RoundState = RoundState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSMapDifficultyManager.HandlePhaseChange
// (Final, Native, Protected)
// Parameters:
// struct FName*                  PreviousPhaseName              (Parm, ZeroConstructor, IsPlainOldData)
// struct FName*                  NewPhaseName                   (Parm, ZeroConstructor, IsPlainOldData)

void AKSMapDifficultyManager::HandlePhaseChange(struct FName* PreviousPhaseName, struct FName* NewPhaseName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMapDifficultyManager.HandlePhaseChange");

	AKSMapDifficultyManager_HandlePhaseChange_Params params;
	params.PreviousPhaseName = PreviousPhaseName;
	params.NewPhaseName = NewPhaseName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSMapDifficultyManager.HandleObjectiveClaimed
// (Final, Native, Protected)

void AKSMapDifficultyManager::HandleObjectiveClaimed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMapDifficultyManager.HandleObjectiveClaimed");

	AKSMapDifficultyManager_HandleObjectiveClaimed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSMapDifficultyManager.HandleCharacterOnTeamKilled
// (Final, Native, Protected)
// Parameters:
// class AKSTeamState**           TeamState                      (Parm, ZeroConstructor, IsPlainOldData)

void AKSMapDifficultyManager::HandleCharacterOnTeamKilled(class AKSTeamState** TeamState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMapDifficultyManager.HandleCharacterOnTeamKilled");

	AKSMapDifficultyManager_HandleCharacterOnTeamKilled_Params params;
	params.TeamState = TeamState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSMatchDataRecorder.OnPlayerLogout
// (Final, Native, Public)
// Parameters:
// class AGameModeBase**          GameMode                       (Parm, ZeroConstructor, IsPlainOldData)
// class AController**            Player                         (Parm, ZeroConstructor, IsPlainOldData)

void UKSMatchDataRecorder::OnPlayerLogout(class AGameModeBase** GameMode, class AController** Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMatchDataRecorder.OnPlayerLogout");

	UKSMatchDataRecorder_OnPlayerLogout_Params params;
	params.GameMode = GameMode;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSMatchDataRecorder.OnPlayerLogin
// (Final, Native, Public)
// Parameters:
// class AGameModeBase**          GameMode                       (Parm, ZeroConstructor, IsPlainOldData)
// class APlayerController**      NewPlayer                      (Parm, ZeroConstructor, IsPlainOldData)

void UKSMatchDataRecorder::OnPlayerLogin(class AGameModeBase** GameMode, class APlayerController** NewPlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMatchDataRecorder.OnPlayerLogin");

	UKSMatchDataRecorder_OnPlayerLogin_Params params;
	params.GameMode = GameMode;
	params.NewPlayer = NewPlayer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSMath.ShiftLocationBetweenTransforms
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector*                Location                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FTransform*             SourceTransform                (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FTransform*             TargetTransform                (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector UKSMath::STATIC_ShiftLocationBetweenTransforms(struct FVector* Location, struct FTransform* SourceTransform, struct FTransform* TargetTransform)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMath.ShiftLocationBetweenTransforms");

	UKSMath_ShiftLocationBetweenTransforms_Params params;
	params.Location = Location;
	params.SourceTransform = SourceTransform;
	params.TargetTransform = TargetTransform;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSMath.ScaleInterpCurveVector2D
// (Final, Native, Static, Public, HasOutParms)
// Parameters:
// struct FInterpCurveVector2D*   InCurve                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// float*                         InScale                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FInterpCurveVector2D    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FInterpCurveVector2D UKSMath::STATIC_ScaleInterpCurveVector2D(struct FInterpCurveVector2D* InCurve, float* InScale)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMath.ScaleInterpCurveVector2D");

	UKSMath_ScaleInterpCurveVector2D_Params params;
	params.InCurve = InCurve;
	params.InScale = InScale;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSMath.ScaleInterpCurveFloatInput
// (Final, Native, Static, Public, HasOutParms)
// Parameters:
// struct FInterpCurveFloat*      InCurve                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// float*                         InScale                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FInterpCurveFloat       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FInterpCurveFloat UKSMath::STATIC_ScaleInterpCurveFloatInput(struct FInterpCurveFloat* InCurve, float* InScale)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMath.ScaleInterpCurveFloatInput");

	UKSMath_ScaleInterpCurveFloatInput_Params params;
	params.InCurve = InCurve;
	params.InScale = InScale;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSMath.RInterpConstantToDirectional
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FRotator*               Current                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FRotator*               Target                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// float*                         DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)
// float*                         InterpSpeed                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FRotator                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FRotator UKSMath::STATIC_RInterpConstantToDirectional(struct FRotator* Current, struct FRotator* Target, float* DeltaTime, float* InterpSpeed)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMath.RInterpConstantToDirectional");

	UKSMath_RInterpConstantToDirectional_Params params;
	params.Current = Current;
	params.Target = Target;
	params.DeltaTime = DeltaTime;
	params.InterpSpeed = InterpSpeed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSMath.GetLineSphereIntersectionPoints
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                LinePointA                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FVector*                LinePointB                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FVector*                SphereOrigin                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// float*                         SphereRadius                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 OutPointA                      (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// struct FVector                 OutPointB                      (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UKSMath::STATIC_GetLineSphereIntersectionPoints(struct FVector* LinePointA, struct FVector* LinePointB, struct FVector* SphereOrigin, float* SphereRadius, struct FVector* OutPointA, struct FVector* OutPointB)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMath.GetLineSphereIntersectionPoints");

	UKSMath_GetLineSphereIntersectionPoints_Params params;
	params.LinePointA = LinePointA;
	params.LinePointB = LinePointB;
	params.SphereOrigin = SphereOrigin;
	params.SphereRadius = SphereRadius;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutPointA != nullptr)
		*OutPointA = params.OutPointA;
	if (OutPointB != nullptr)
		*OutPointB = params.OutPointB;

	return params.ReturnValue;
}


// Function Killstreak.KSMath.GetLineRectangleIntersectionPoints
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D*              LinePointA                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector2D*              LinePointB                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector2D*              RectCenter                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector2D*              RectExtent                     (Parm, ZeroConstructor, IsPlainOldData)
// float*                         RectYaw                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector2D               IntPoint1                      (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// struct FVector2D               IntPoint2                      (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSMath::STATIC_GetLineRectangleIntersectionPoints(struct FVector2D* LinePointA, struct FVector2D* LinePointB, struct FVector2D* RectCenter, struct FVector2D* RectExtent, float* RectYaw, struct FVector2D* IntPoint1, struct FVector2D* IntPoint2)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMath.GetLineRectangleIntersectionPoints");

	UKSMath_GetLineRectangleIntersectionPoints_Params params;
	params.LinePointA = LinePointA;
	params.LinePointB = LinePointB;
	params.RectCenter = RectCenter;
	params.RectExtent = RectExtent;
	params.RectYaw = RectYaw;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (IntPoint1 != nullptr)
		*IntPoint1 = params.IntPoint1;
	if (IntPoint2 != nullptr)
		*IntPoint2 = params.IntPoint2;

	return params.ReturnValue;
}


// Function Killstreak.KSMath.GetLineCircleIntersectionPoints
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D*              LinePointA                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector2D*              LinePointB                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector2D*              CircleCenter                   (Parm, ZeroConstructor, IsPlainOldData)
// float*                         CircleRadius                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector2D               IntPoint1                      (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// struct FVector2D               IntPoint2                      (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSMath::STATIC_GetLineCircleIntersectionPoints(struct FVector2D* LinePointA, struct FVector2D* LinePointB, struct FVector2D* CircleCenter, float* CircleRadius, struct FVector2D* IntPoint1, struct FVector2D* IntPoint2)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMath.GetLineCircleIntersectionPoints");

	UKSMath_GetLineCircleIntersectionPoints_Params params;
	params.LinePointA = LinePointA;
	params.LinePointB = LinePointB;
	params.CircleCenter = CircleCenter;
	params.CircleRadius = CircleRadius;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (IntPoint1 != nullptr)
		*IntPoint1 = params.IntPoint1;
	if (IntPoint2 != nullptr)
		*IntPoint2 = params.IntPoint2;

	return params.ReturnValue;
}


// Function Killstreak.KSMath.FloatInterpCurveIntegralTrapezoid
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FInterpCurveFloat*      InCurve                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// float*                         MinTime                        (Parm, ZeroConstructor, IsPlainOldData)
// float*                         MaxTime                        (Parm, ZeroConstructor, IsPlainOldData)
// float*                         DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSMath::STATIC_FloatInterpCurveIntegralTrapezoid(struct FInterpCurveFloat* InCurve, float* MinTime, float* MaxTime, float* DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMath.FloatInterpCurveIntegralTrapezoid");

	UKSMath_FloatInterpCurveIntegralTrapezoid_Params params;
	params.InCurve = InCurve;
	params.MinTime = MinTime;
	params.MaxTime = MaxTime;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSMath.FInterpRadiansTo
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float*                         Current                        (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Target                         (Parm, ZeroConstructor, IsPlainOldData)
// float*                         DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)
// float*                         InterpSpeed                    (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSMath::STATIC_FInterpRadiansTo(float* Current, float* Target, float* DeltaTime, float* InterpSpeed)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMath.FInterpRadiansTo");

	UKSMath_FInterpRadiansTo_Params params;
	params.Current = Current;
	params.Target = Target;
	params.DeltaTime = DeltaTime;
	params.InterpSpeed = InterpSpeed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSMath.FInterpDegreesTo
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float*                         Current                        (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Target                         (Parm, ZeroConstructor, IsPlainOldData)
// float*                         DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)
// float*                         InterpSpeed                    (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSMath::STATIC_FInterpDegreesTo(float* Current, float* Target, float* DeltaTime, float* InterpSpeed)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMath.FInterpDegreesTo");

	UKSMath_FInterpDegreesTo_Params params;
	params.Current = Current;
	params.Target = Target;
	params.DeltaTime = DeltaTime;
	params.InterpSpeed = InterpSpeed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSMath.ClampVector2D
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector2D*              InVector2D                     (Parm, ZeroConstructor, IsPlainOldData)
// float*                         MinSize                        (Parm, ZeroConstructor, IsPlainOldData)
// float*                         MaxSize                        (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector2D               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector2D UKSMath::STATIC_ClampVector2D(struct FVector2D* InVector2D, float* MinSize, float* MaxSize)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMath.ClampVector2D");

	UKSMath_ClampVector2D_Params params;
	params.InVector2D = InVector2D;
	params.MinSize = MinSize;
	params.MaxSize = MaxSize;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSMedPack.GetBuildupTime
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSMedPack::GetBuildupTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMedPack.GetBuildupTime");

	AKSMedPack_GetBuildupTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSMercMasteryManager.GetWinPercentForJob
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UKSJobItem**             JobItem                        (Parm, ZeroConstructor, IsPlainOldData)
// class AKSPlayerController**    Player                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSMercMasteryManager::GetWinPercentForJob(class UKSJobItem** JobItem, class AKSPlayerController** Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMercMasteryManager.GetWinPercentForJob");

	UKSMercMasteryManager_GetWinPercentForJob_Params params;
	params.JobItem = JobItem;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSMercMasteryManager.GetLowestJobForActivityType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EKSMercMasteryActivityType*    Type                           (Parm, ZeroConstructor, IsPlainOldData)
// class AKSPlayerController**    Player                         (Parm, ZeroConstructor, IsPlainOldData)
// class UKSJobItem*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UKSJobItem* UKSMercMasteryManager::GetLowestJobForActivityType(EKSMercMasteryActivityType* Type, class AKSPlayerController** Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMercMasteryManager.GetLowestJobForActivityType");

	UKSMercMasteryManager_GetLowestJobForActivityType_Params params;
	params.Type = Type;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSMercMasteryManager.GetHighestJobForActivityType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EKSMercMasteryActivityType*    Type                           (Parm, ZeroConstructor, IsPlainOldData)
// class AKSPlayerController**    Player                         (Parm, ZeroConstructor, IsPlainOldData)
// class UKSJobItem*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UKSJobItem* UKSMercMasteryManager::GetHighestJobForActivityType(EKSMercMasteryActivityType* Type, class AKSPlayerController** Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMercMasteryManager.GetHighestJobForActivityType");

	UKSMercMasteryManager_GetHighestJobForActivityType_Params params;
	params.Type = Type;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSMercMasteryManager.GetActivityInstancesWithType
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// EKSMercMasteryActivityType*    Type                           (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UKSActivityInstance*> OutActivityInstances           (Parm, OutParm, ZeroConstructor)
// class AKSPlayerController**    Player                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSMercMasteryManager::GetActivityInstancesWithType(EKSMercMasteryActivityType* Type, class AKSPlayerController** Player, TArray<class UKSActivityInstance*>* OutActivityInstances)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMercMasteryManager.GetActivityInstancesWithType");

	UKSMercMasteryManager_GetActivityInstancesWithType_Params params;
	params.Type = Type;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutActivityInstances != nullptr)
		*OutActivityInstances = params.OutActivityInstances;

	return params.ReturnValue;
}


// Function Killstreak.KSMercMasteryManager.GetActivityInstancesWithJob
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UKSJobItem**             Job                            (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UKSActivityInstance*> OutActivityInstances           (Parm, OutParm, ZeroConstructor)
// class AKSPlayerController**    Player                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSMercMasteryManager::GetActivityInstancesWithJob(class UKSJobItem** Job, class AKSPlayerController** Player, TArray<class UKSActivityInstance*>* OutActivityInstances)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMercMasteryManager.GetActivityInstancesWithJob");

	UKSMercMasteryManager_GetActivityInstancesWithJob_Params params;
	params.Job = Job;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutActivityInstances != nullptr)
		*OutActivityInstances = params.OutActivityInstances;

	return params.ReturnValue;
}


// Function Killstreak.KSMercMasteryManager.GetActivityInstanceByJobAndType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UKSJobItem**             JobItem                        (Parm, ZeroConstructor, IsPlainOldData)
// EKSMercMasteryActivityType*    Type                           (Parm, ZeroConstructor, IsPlainOldData)
// class AKSPlayerController**    Player                         (Parm, ZeroConstructor, IsPlainOldData)
// class UKSActivityInstance*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UKSActivityInstance* UKSMercMasteryManager::GetActivityInstanceByJobAndType(class UKSJobItem** JobItem, EKSMercMasteryActivityType* Type, class AKSPlayerController** Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMercMasteryManager.GetActivityInstanceByJobAndType");

	UKSMercMasteryManager_GetActivityInstanceByJobAndType_Params params;
	params.JobItem = JobItem;
	params.Type = Type;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSMercMasteryManager.FindActivityByJobAndType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UKSJobItem**             JobItem                        (Parm, ZeroConstructor, IsPlainOldData)
// EKSMercMasteryActivityType*    Type                           (Parm, ZeroConstructor, IsPlainOldData)
// class UKSMercMasteryActivity*  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UKSMercMasteryActivity* UKSMercMasteryManager::FindActivityByJobAndType(class UKSJobItem** JobItem, EKSMercMasteryActivityType* Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMercMasteryManager.FindActivityByJobAndType");

	UKSMercMasteryManager_FindActivityByJobAndType_Params params;
	params.JobItem = JobItem;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSMiniMapAssistant.GetRelativeMinimapHeightToLocalPlayer
// (Native, Event, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector*                ActorLocation                  (Parm, ZeroConstructor, IsPlainOldData)
// EKSRelativeMinimapHeight       RelativeHeight                 (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void AKSMiniMapAssistant::GetRelativeMinimapHeightToLocalPlayer(struct FVector* ActorLocation, EKSRelativeMinimapHeight* RelativeHeight)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMiniMapAssistant.GetRelativeMinimapHeightToLocalPlayer");

	AKSMiniMapAssistant_GetRelativeMinimapHeightToLocalPlayer_Params params;
	params.ActorLocation = ActorLocation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (RelativeHeight != nullptr)
		*RelativeHeight = params.RelativeHeight;
}


// Function Killstreak.KSMinimapRendererBase.GetMinimapWidth
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSMinimapRendererBase::GetMinimapWidth()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMinimapRendererBase.GetMinimapWidth");

	AKSMinimapRendererBase_GetMinimapWidth_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerModInstance.StopAnimationFromEvent
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FName*                  AnimEventName                  (Parm, ZeroConstructor, IsPlainOldData)
// class UKSCharacterAnimInst**   CharAnimInstance               (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSPlayerModInstance::StopAnimationFromEvent(struct FName* AnimEventName, class UKSCharacterAnimInst** CharAnimInstance)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerModInstance.StopAnimationFromEvent");

	UKSPlayerModInstance_StopAnimationFromEvent_Params params;
	params.AnimEventName = AnimEventName;
	params.CharAnimInstance = CharAnimInstance;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerModInstance.ReactsToAnimationEvent
// (Native, Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// struct FName*                  AnimEventName                  (Parm, ZeroConstructor, IsPlainOldData)
// int                            Priority                       (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSPlayerModInstance::ReactsToAnimationEvent(struct FName* AnimEventName, int* Priority)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerModInstance.ReactsToAnimationEvent");

	UKSPlayerModInstance_ReactsToAnimationEvent_Params params;
	params.AnimEventName = AnimEventName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Priority != nullptr)
		*Priority = params.Priority;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerModInstance.PlayAnimationFromEvent
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FName*                  AnimEventName                  (Parm, ZeroConstructor, IsPlainOldData)
// class UKSCharacterAnimInst**   CharAnimInstance               (Parm, ZeroConstructor, IsPlainOldData)

void UKSPlayerModInstance::PlayAnimationFromEvent(struct FName* AnimEventName, class UKSCharacterAnimInst** CharAnimInstance)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerModInstance.PlayAnimationFromEvent");

	UKSPlayerModInstance_PlayAnimationFromEvent_Params params;
	params.AnimEventName = AnimEventName;
	params.CharAnimInstance = CharAnimInstance;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerModInstance.OwnerIsLocal
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSPlayerModInstance::OwnerIsLocal()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerModInstance.OwnerIsLocal");

	UKSPlayerModInstance_OwnerIsLocal_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerModInstance.OwnerHasAuthority
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSPlayerModInstance::OwnerHasAuthority()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerModInstance.OwnerHasAuthority");

	UKSPlayerModInstance_OwnerHasAuthority_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerModInstance.OverrideInteraction
// (Native, Event, Public, HasOutParms, BlueprintEvent, Const)
// Parameters:
// TScriptInterface<class UKSInteractable>* Interactable                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// float                          Duration                       (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// class UClass*                  Type                           (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSPlayerModInstance::OverrideInteraction(TScriptInterface<class UKSInteractable>* Interactable, float* Duration, class UClass** Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerModInstance.OverrideInteraction");

	UKSPlayerModInstance_OverrideInteraction_Params params;
	params.Interactable = Interactable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Duration != nullptr)
		*Duration = params.Duration;
	if (Type != nullptr)
		*Type = params.Type;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerModInstance.OnRep_OwnerCharacter
// (Native, Protected)

void UKSPlayerModInstance::OnRep_OwnerCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerModInstance.OnRep_OwnerCharacter");

	UKSPlayerModInstance_OnRep_OwnerCharacter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerModInstance.OnRep_ModAsset
// (Native, Protected)

void UKSPlayerModInstance::OnRep_ModAsset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerModInstance.OnRep_ModAsset");

	UKSPlayerModInstance_OnRep_ModAsset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerModInstance.OnRep_InstanceCount
// (Native, Protected)

void UKSPlayerModInstance::OnRep_InstanceCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerModInstance.OnRep_InstanceCount");

	UKSPlayerModInstance_OnRep_InstanceCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerModInstance.OnOwnerDied
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class AKSCharacterBase**       KillerCharacter                (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UKSPlayerModInstance::OnOwnerDied(class AKSCharacterBase** KillerCharacter)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerModInstance.OnOwnerDied");

	UKSPlayerModInstance_OnOwnerDied_Params params;
	params.KillerCharacter = KillerCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerModInstance.OnNewCharacter
// (Native, Event, Public, BlueprintEvent)

void UKSPlayerModInstance::OnNewCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerModInstance.OnNewCharacter");

	UKSPlayerModInstance_OnNewCharacter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerModInstance.OnModInitialized
// (Event, Protected, BlueprintEvent)

void UKSPlayerModInstance::OnModInitialized()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerModInstance.OnModInitialized");

	UKSPlayerModInstance_OnModInitialized_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerModInstance.OnCharacterOwnerDeath
// (Final, Native, Public)
// Parameters:
// class AKSCharacterBase**       Killer                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UKSPlayerModInstance::OnCharacterOwnerDeath(class AKSCharacterBase** Killer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerModInstance.OnCharacterOwnerDeath");

	UKSPlayerModInstance_OnCharacterOwnerDeath_Params params;
	params.Killer = Killer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerModInstance.ModifyDamageDealt
// (Native, Event, Public, HasOutParms, BlueprintEvent, Const)
// Parameters:
// float*                         DamageAmount                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FDamageEvent*           DamageEvent                    (ConstParm, Parm, OutParm, ReferenceParm)
// class AController**            EventInstigator                (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 DamagedActor                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSPlayerModInstance::ModifyDamageDealt(float* DamageAmount, struct FDamageEvent* DamageEvent, class AController** EventInstigator, class AActor** DamageCauser, class AActor** DamagedActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerModInstance.ModifyDamageDealt");

	UKSPlayerModInstance_ModifyDamageDealt_Params params;
	params.DamageAmount = DamageAmount;
	params.DamageEvent = DamageEvent;
	params.EventInstigator = EventInstigator;
	params.DamageCauser = DamageCauser;
	params.DamagedActor = DamagedActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerModInstance.ModEventReceived
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// struct FName*                  ModEvent                       (Parm, ZeroConstructor, IsPlainOldData)

void UKSPlayerModInstance::ModEventReceived(struct FName* ModEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerModInstance.ModEventReceived");

	UKSPlayerModInstance_ModEventReceived_Params params;
	params.ModEvent = ModEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerModInstance.InitializeMod
// (Native, Protected)

void UKSPlayerModInstance::InitializeMod()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerModInstance.InitializeMod");

	UKSPlayerModInstance_InitializeMod_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerModInstance.GetPlayerStateOwner
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AKSPlayerState*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AKSPlayerState* UKSPlayerModInstance::GetPlayerStateOwner()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerModInstance.GetPlayerStateOwner");

	UKSPlayerModInstance_GetPlayerStateOwner_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerModInstance.GetModType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EPlayerModType                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EPlayerModType UKSPlayerModInstance::GetModType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerModInstance.GetModType");

	UKSPlayerModInstance_GetModType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerModInstance.GetModInstigator
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AKSPlayerState*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AKSPlayerState* UKSPlayerModInstance::GetModInstigator()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerModInstance.GetModInstigator");

	UKSPlayerModInstance_GetModInstigator_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerModInstance.GetModAsset
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UKSPlayerMod*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UKSPlayerMod* UKSPlayerModInstance::GetModAsset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerModInstance.GetModAsset");

	UKSPlayerModInstance_GetModAsset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerModInstance.GetInstanceCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UKSPlayerModInstance::GetInstanceCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerModInstance.GetInstanceCount");

	UKSPlayerModInstance_GetInstanceCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerModInstance.GetDuration
// (Native, Event, Public, HasOutParms, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                          Duration                       (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// float                          RemainingTime                  (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           UsesDuration                   (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void UKSPlayerModInstance::GetDuration(float* Duration, float* RemainingTime, bool* UsesDuration)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerModInstance.GetDuration");

	UKSPlayerModInstance_GetDuration_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Duration != nullptr)
		*Duration = params.Duration;
	if (RemainingTime != nullptr)
		*RemainingTime = params.RemainingTime;
	if (UsesDuration != nullptr)
		*UsesDuration = params.UsesDuration;
}


// Function Killstreak.KSPlayerModInstance.GetCharacterOwner
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AKSCharacter*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AKSCharacter* UKSPlayerModInstance::GetCharacterOwner()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerModInstance.GetCharacterOwner");

	UKSPlayerModInstance_GetCharacterOwner_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerModInstance.BroadcastModTriggeredInternal
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)

void UKSPlayerModInstance::BroadcastModTriggeredInternal()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerModInstance.BroadcastModTriggeredInternal");

	UKSPlayerModInstance_BroadcastModTriggeredInternal_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerModInstance.BroadcastModTriggered
// (Final, Native, Protected, BlueprintCallable)

void UKSPlayerModInstance::BroadcastModTriggered()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerModInstance.BroadcastModTriggered");

	UKSPlayerModInstance_BroadcastModTriggered_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.UpdateChargeDirect
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float*                         DeltaCharge                    (Parm, ZeroConstructor, IsPlainOldData)

void UKSModInst_Activated::UpdateChargeDirect(float* DeltaCharge)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.UpdateChargeDirect");

	UKSModInst_Activated_UpdateChargeDirect_Params params;
	params.DeltaCharge = DeltaCharge;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.UpdateCharge
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int*                           Delta                          (Parm, ZeroConstructor, IsPlainOldData)

void UKSModInst_Activated::UpdateCharge(int* Delta)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.UpdateCharge");

	UKSModInst_Activated_UpdateCharge_Params params;
	params.Delta = Delta;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.TryToCancel
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSModInst_Activated::TryToCancel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.TryToCancel");

	UKSModInst_Activated_TryToCancel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSModInst_Activated.TryToActivate
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSModInst_Activated::TryToActivate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.TryToActivate");

	UKSModInst_Activated_TryToActivate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSModInst_Activated.SetAbilityMovementMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TEnumAsByte<EMovementMode>*    InMovementMode                 (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<EKSGame_CustomMovement>* InCustomMovementMode           (Parm, ZeroConstructor, IsPlainOldData)

void UKSModInst_Activated::SetAbilityMovementMode(TEnumAsByte<EMovementMode>* InMovementMode, TEnumAsByte<EKSGame_CustomMovement>* InCustomMovementMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.SetAbilityMovementMode");

	UKSModInst_Activated_SetAbilityMovementMode_Params params;
	params.InMovementMode = InMovementMode;
	params.InCustomMovementMode = InCustomMovementMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.SetAbilityMovementDisabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          bDisable                       (Parm, ZeroConstructor, IsPlainOldData)

void UKSModInst_Activated::SetAbilityMovementDisabled(bool* bDisable)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.SetAbilityMovementDisabled");

	UKSModInst_Activated_SetAbilityMovementDisabled_Params params;
	params.bDisable = bDisable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.RefundCharge
// (Final, Native, Public, BlueprintCallable)

void UKSModInst_Activated::RefundCharge()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.RefundCharge");

	UKSModInst_Activated_RefundCharge_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.OnSetup
// (Native, Event, Protected, BlueprintEvent)

void UKSModInst_Activated::OnSetup()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.OnSetup");

	UKSModInst_Activated_OnSetup_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.OnRep_LockoutTimer
// (Final, Native, Protected)

void UKSModInst_Activated::OnRep_LockoutTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.OnRep_LockoutTimer");

	UKSModInst_Activated_OnRep_LockoutTimer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.OnRep_Locked
// (Final, Native, Private)

void UKSModInst_Activated::OnRep_Locked()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.OnRep_Locked");

	UKSModInst_Activated_OnRep_Locked_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.OnRep_CurrentCharge
// (Native, Protected)

void UKSModInst_Activated::OnRep_CurrentCharge()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.OnRep_CurrentCharge");

	UKSModInst_Activated_OnRep_CurrentCharge_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.OnOwnerDownStateChanged
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class AKSPlayerState**         DownedPlayer                   (Parm, ZeroConstructor, IsPlainOldData)

void UKSModInst_Activated::OnOwnerDownStateChanged(class AKSPlayerState** DownedPlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.OnOwnerDownStateChanged");

	UKSModInst_Activated_OnOwnerDownStateChanged_Params params;
	params.DownedPlayer = DownedPlayer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.OnLockoutTimerTick
// (Final, Native, Public)
// Parameters:
// float*                         Seconds                        (Parm, ZeroConstructor, IsPlainOldData)

void UKSModInst_Activated::OnLockoutTimerTick(float* Seconds)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.OnLockoutTimerTick");

	UKSModInst_Activated_OnLockoutTimerTick_Params params;
	params.Seconds = Seconds;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.OnLockoutTimerActive
// (Final, Native, Public)
// Parameters:
// bool*                          bIsTimerActive                 (Parm, ZeroConstructor, IsPlainOldData)

void UKSModInst_Activated::OnLockoutTimerActive(bool* bIsTimerActive)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.OnLockoutTimerActive");

	UKSModInst_Activated_OnLockoutTimerActive_Params params;
	params.bIsTimerActive = bIsTimerActive;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.OnFullyCharged
// (Native, Event, Protected, BlueprintEvent)

void UKSModInst_Activated::OnFullyCharged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.OnFullyCharged");

	UKSModInst_Activated_OnFullyCharged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.OnEndRecovery
// (Event, Protected, BlueprintEvent)

void UKSModInst_Activated::OnEndRecovery()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.OnEndRecovery");

	UKSModInst_Activated_OnEndRecovery_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.OnEndActivationWarning
// (Event, Protected, BlueprintEvent)

void UKSModInst_Activated::OnEndActivationWarning()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.OnEndActivationWarning");

	UKSModInst_Activated_OnEndActivationWarning_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.OnEndActivation
// (Native, Event, Protected, BlueprintEvent)

void UKSModInst_Activated::OnEndActivation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.OnEndActivation");

	UKSModInst_Activated_OnEndActivation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.OnActivation
// (Native, Event, Protected, BlueprintEvent)

void UKSModInst_Activated::OnActivation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.OnActivation");

	UKSModInst_Activated_OnActivation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.OnAbilityReleased
// (Native, Event, Public, BlueprintEvent)

void UKSModInst_Activated::OnAbilityReleased()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.OnAbilityReleased");

	UKSModInst_Activated_OnAbilityReleased_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.IsLocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSModInst_Activated::IsLocked()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.IsLocked");

	UKSModInst_Activated_IsLocked_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSModInst_Activated.IsActivated
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSModInst_Activated::IsActivated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.IsActivated");

	UKSModInst_Activated_IsActivated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSModInst_Activated.IsAbilityMovementDisabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSModInst_Activated::IsAbilityMovementDisabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.IsAbilityMovementDisabled");

	UKSModInst_Activated_IsAbilityMovementDisabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSModInst_Activated.GetSetupActionRestrictor
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FKSActionRestrictor     ReturnValue                    (Parm, OutParm, ReturnParm)

struct FKSActionRestrictor UKSModInst_Activated::GetSetupActionRestrictor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.GetSetupActionRestrictor");

	UKSModInst_Activated_GetSetupActionRestrictor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSModInst_Activated.GetRequiredCharge
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UKSModInst_Activated::GetRequiredCharge()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.GetRequiredCharge");

	UKSModInst_Activated_GetRequiredCharge_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSModInst_Activated.GetRecoveryActionRestrictor
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FKSActionRestrictor     ReturnValue                    (Parm, OutParm, ReturnParm)

struct FKSActionRestrictor UKSModInst_Activated::GetRecoveryActionRestrictor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.GetRecoveryActionRestrictor");

	UKSModInst_Activated_GetRecoveryActionRestrictor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSModInst_Activated.GetMaximumCharge
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UKSModInst_Activated::GetMaximumCharge()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.GetMaximumCharge");

	UKSModInst_Activated_GetMaximumCharge_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSModInst_Activated.GetLockoutTimeRemaining
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSModInst_Activated::GetLockoutTimeRemaining()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.GetLockoutTimeRemaining");

	UKSModInst_Activated_GetLockoutTimeRemaining_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSModInst_Activated.GetDefaultCharge
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UKSModInst_Activated::GetDefaultCharge()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.GetDefaultCharge");

	UKSModInst_Activated_GetDefaultCharge_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSModInst_Activated.GetCurrentCharge
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UKSModInst_Activated::GetCurrentCharge()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.GetCurrentCharge");

	UKSModInst_Activated_GetCurrentCharge_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSModInst_Activated.GetActivatedModAsset
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UKSPlayerMod_Activated*  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UKSPlayerMod_Activated* UKSModInst_Activated::GetActivatedModAsset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.GetActivatedModAsset");

	UKSModInst_Activated_GetActivatedModAsset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSModInst_Activated.GetAbilitySetupDuration
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSModInst_Activated::GetAbilitySetupDuration()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.GetAbilitySetupDuration");

	UKSModInst_Activated_GetAbilitySetupDuration_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSModInst_Activated.GetAbilityRecoveryDuration
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSModInst_Activated::GetAbilityRecoveryDuration()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.GetAbilityRecoveryDuration");

	UKSModInst_Activated_GetAbilityRecoveryDuration_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSModInst_Activated.GetAbilityDuration
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSModInst_Activated::GetAbilityDuration()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.GetAbilityDuration");

	UKSModInst_Activated_GetAbilityDuration_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSModInst_Activated.EndActivation
// (Native, Protected, BlueprintCallable)

void UKSModInst_Activated::EndActivation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.EndActivation");

	UKSModInst_Activated_EndActivation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.ConsumeChargeAmount
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float*                         Amount                         (Parm, ZeroConstructor, IsPlainOldData)

void UKSModInst_Activated::ConsumeChargeAmount(float* Amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.ConsumeChargeAmount");

	UKSModInst_Activated_ConsumeChargeAmount_Params params;
	params.Amount = Amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.ConsumeCharge
// (Final, Native, Protected, BlueprintCallable)

void UKSModInst_Activated::ConsumeCharge()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.ConsumeCharge");

	UKSModInst_Activated_ConsumeCharge_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.ClientModFailedToActivate
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// EKSAbilityUsageFailureType*    AbilityFailureType             (Parm, ZeroConstructor, IsPlainOldData)

void UKSModInst_Activated::ClientModFailedToActivate(EKSAbilityUsageFailureType* AbilityFailureType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.ClientModFailedToActivate");

	UKSModInst_Activated_ClientModFailedToActivate_Params params;
	params.AbilityFailureType = AbilityFailureType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.CanActivateWhileDowned
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSModInst_Activated::CanActivateWhileDowned()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.CanActivateWhileDowned");

	UKSModInst_Activated_CanActivateWhileDowned_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSModInst_Activated.CanActivateNow
// (Native, Event, Public, HasOutParms, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// EKSAbilityUsageFailureType     OutAbilityFailureType          (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSModInst_Activated::CanActivateNow(EKSAbilityUsageFailureType* OutAbilityFailureType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.CanActivateNow");

	UKSModInst_Activated_CanActivateNow_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutAbilityFailureType != nullptr)
		*OutAbilityFailureType = params.OutAbilityFailureType;

	return params.ReturnValue;
}


// Function Killstreak.KSModInst_Activated.BroadcastModSetup
// (Net, NetReliable, Native, Event, NetMulticast, Protected, BlueprintCallable)

void UKSModInst_Activated::BroadcastModSetup()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.BroadcastModSetup");

	UKSModInst_Activated_BroadcastModSetup_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.BroadcastModActivated
// (Net, NetReliable, Native, Event, NetMulticast, Protected, BlueprintCallable)
// Parameters:
// bool*                          bActive                        (Parm, ZeroConstructor, IsPlainOldData)

void UKSModInst_Activated::BroadcastModActivated(bool* bActive)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.BroadcastModActivated");

	UKSModInst_Activated_BroadcastModActivated_Params params;
	params.bActive = bActive;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.BroadcastEndRecovery
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)

void UKSModInst_Activated::BroadcastEndRecovery()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.BroadcastEndRecovery");

	UKSModInst_Activated_BroadcastEndRecovery_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.BroadcastEndActivationWarning
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)

void UKSModInst_Activated::BroadcastEndActivationWarning()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.BroadcastEndActivationWarning");

	UKSModInst_Activated_BroadcastEndActivationWarning_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.BeginSetup
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void UKSModInst_Activated::BeginSetup()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.BeginSetup");

	UKSModInst_Activated_BeginSetup_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.BeginActivation
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void UKSModInst_Activated::BeginActivation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.BeginActivation");

	UKSModInst_Activated_BeginActivation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.AbilityActivationRequestTimeout
// (Final, Native, Protected)

void UKSModInst_Activated::AbilityActivationRequestTimeout()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.AbilityActivationRequestTimeout");

	UKSModInst_Activated_AbilityActivationRequestTimeout_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_ActivatedTarget.GetCachedTarget
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AKSCharacter*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AKSCharacter* UKSModInst_ActivatedTarget::GetCachedTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_ActivatedTarget.GetCachedTarget");

	UKSModInst_ActivatedTarget_GetCachedTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSModInst_ActivatedTarget.BroadcastTarget
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// class AKSCharacter**           InTarget                       (Parm, ZeroConstructor, IsPlainOldData)

void UKSModInst_ActivatedTarget::BroadcastTarget(class AKSCharacter** InTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_ActivatedTarget.BroadcastTarget");

	UKSModInst_ActivatedTarget_BroadcastTarget_Params params;
	params.InTarget = InTarget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_ActivatedTarget.AssignTarget
// (Event, Protected, HasOutParms, BlueprintEvent)
// Parameters:
// class AKSCharacter*            OutTarget                      (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void UKSModInst_ActivatedTarget::AssignTarget(class AKSCharacter** OutTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_ActivatedTarget.AssignTarget");

	UKSModInst_ActivatedTarget_AssignTarget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutTarget != nullptr)
		*OutTarget = params.OutTarget;
}


// Function Killstreak.KSModInst_OnDamageOther.OnMatchingDamageDealt
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class AActor**                 DamagedActor                   (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Damage                         (Parm, ZeroConstructor, IsPlainOldData)

void UKSModInst_OnDamageOther::OnMatchingDamageDealt(class AActor** DamagedActor, float* Damage)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_OnDamageOther.OnMatchingDamageDealt");

	UKSModInst_OnDamageOther_OnMatchingDamageDealt_Params params;
	params.DamagedActor = DamagedActor;
	params.Damage = Damage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_OnDamageOther.OnInstigatedDamage
// (Final, Native, Protected)
// Parameters:
// class AKSCharacterBase**       Damager                        (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Damage                         (Parm, ZeroConstructor, IsPlainOldData)
// class UDamageType**            DamageType                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 DamagedActor                   (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)

void UKSModInst_OnDamageOther::OnInstigatedDamage(class AKSCharacterBase** Damager, float* Damage, class UDamageType** DamageType, class AActor** DamagedActor, class AActor** DamageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_OnDamageOther.OnInstigatedDamage");

	UKSModInst_OnDamageOther_OnInstigatedDamage_Params params;
	params.Damager = Damager;
	params.Damage = Damage;
	params.DamageType = DamageType;
	params.DamagedActor = DamagedActor;
	params.DamageCauser = DamageCauser;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_OnDamageOther.DoesDamageMatch
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// class AKSCharacterBase**       Damager                        (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Damage                         (Parm, ZeroConstructor, IsPlainOldData)
// class UKSDamageTypeBase**      DamageType                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 DamagedActor                   (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSModInst_OnDamageOther::DoesDamageMatch(class AKSCharacterBase** Damager, float* Damage, class UKSDamageTypeBase** DamageType, class AActor** DamagedActor, class AActor** DamageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_OnDamageOther.DoesDamageMatch");

	UKSModInst_OnDamageOther_DoesDamageMatch_Params params;
	params.Damager = Damager;
	params.Damage = Damage;
	params.DamageType = DamageType;
	params.DamagedActor = DamagedActor;
	params.DamageCauser = DamageCauser;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSModInst_ApplyDebuffOnDamage.DebuffTimeExpired
// (Final, Native, Protected)
// Parameters:
// class AKSCharacter**           DebuffedCharacter              (Parm, ZeroConstructor, IsPlainOldData)

void UKSModInst_ApplyDebuffOnDamage::DebuffTimeExpired(class AKSCharacter** DebuffedCharacter)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_ApplyDebuffOnDamage.DebuffTimeExpired");

	UKSModInst_ApplyDebuffOnDamage_DebuffTimeExpired_Params params;
	params.DebuffedCharacter = DebuffedCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_OverTimeEffect.OnRep_EffectTimer
// (Final, Native, Protected)

void UKSModInst_OverTimeEffect::OnRep_EffectTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_OverTimeEffect.OnRep_EffectTimer");

	UKSModInst_OverTimeEffect_OnRep_EffectTimer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_OverTimeEffect.GetEffectTickPeriod
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSModInst_OverTimeEffect::GetEffectTickPeriod()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_OverTimeEffect.GetEffectTickPeriod");

	UKSModInst_OverTimeEffect_GetEffectTickPeriod_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSModInst_OverTimeEffect.EffectTick
// (Native, Event, Protected, BlueprintEvent)

void UKSModInst_OverTimeEffect::EffectTick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_OverTimeEffect.EffectTick");

	UKSModInst_OverTimeEffect_EffectTick_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_DetectEnemy.OnRep_EnemyDetected
// (Final, Native, Private)

void UKSModInst_DetectEnemy::OnRep_EnemyDetected()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_DetectEnemy.OnRep_EnemyDetected");

	UKSModInst_DetectEnemy_OnRep_EnemyDetected_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_DetectEnemy.IsDetectingEnemy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSModInst_DetectEnemy::IsDetectingEnemy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_DetectEnemy.IsDetectingEnemy");

	UKSModInst_DetectEnemy_IsDetectingEnemy_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSModInst_DetectEnemy.GetWidgetClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)

void UKSModInst_DetectEnemy::GetWidgetClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_DetectEnemy.GetWidgetClass");

	UKSModInst_DetectEnemy_GetWidgetClass_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_DetectEnemy.DetectEnemy
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          bDetectEnemy                   (Parm, ZeroConstructor, IsPlainOldData)

void UKSModInst_DetectEnemy::DetectEnemy(bool* bDetectEnemy)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_DetectEnemy.DetectEnemy");

	UKSModInst_DetectEnemy_DetectEnemy_Params params;
	params.bDetectEnemy = bDetectEnemy;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_GiveItemOnActivation.TryToRemoveItem
// (Final, Native, Protected, BlueprintCallable)

void UKSModInst_GiveItemOnActivation::TryToRemoveItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_GiveItemOnActivation.TryToRemoveItem");

	UKSModInst_GiveItemOnActivation_TryToRemoveItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_GiveItemOnActivation.OnRep_GivenItem
// (Final, Native, Protected)

void UKSModInst_GiveItemOnActivation::OnRep_GivenItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_GiveItemOnActivation.OnRep_GivenItem");

	UKSModInst_GiveItemOnActivation_OnRep_GivenItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_GiveItemOnActivation.OnNewGivenItem
// (Native, Event, Protected, BlueprintEvent)

void UKSModInst_GiveItemOnActivation::OnNewGivenItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_GiveItemOnActivation.OnNewGivenItem");

	UKSModInst_GiveItemOnActivation_OnNewGivenItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_GiveItemOnActivation.OnItemRemoved
// (Event, Protected, BlueprintEvent)

void UKSModInst_GiveItemOnActivation::OnItemRemoved()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_GiveItemOnActivation.OnItemRemoved");

	UKSModInst_GiveItemOnActivation_OnItemRemoved_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_GiveItemOnActivation.AsyncItemGiveComplete
// (Final, Native, Protected)
// Parameters:
// class UKSItem**                Item                           (Parm, ZeroConstructor, IsPlainOldData)
// class UObject**                GivenObject                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FGiveItemParameters*    InGiveItemParameters           (Parm)
// bool*                          bSuccess                       (Parm, ZeroConstructor, IsPlainOldData)

void UKSModInst_GiveItemOnActivation::AsyncItemGiveComplete(class UKSItem** Item, class UObject** GivenObject, struct FGiveItemParameters* InGiveItemParameters, bool* bSuccess)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_GiveItemOnActivation.AsyncItemGiveComplete");

	UKSModInst_GiveItemOnActivation_AsyncItemGiveComplete_Params params;
	params.Item = Item;
	params.GivenObject = GivenObject;
	params.InGiveItemParameters = InGiveItemParameters;
	params.bSuccess = bSuccess;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_GiveWeaponOnActivation.TryToSwapBackToWeapon
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSModInst_GiveWeaponOnActivation::TryToSwapBackToWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_GiveWeaponOnActivation.TryToSwapBackToWeapon");

	UKSModInst_GiveWeaponOnActivation_TryToSwapBackToWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSModInst_GiveWeaponOnActivation.SwapFromRetry
// (Final, Native, Protected)

void UKSModInst_GiveWeaponOnActivation::SwapFromRetry()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_GiveWeaponOnActivation.SwapFromRetry");

	UKSModInst_GiveWeaponOnActivation_SwapFromRetry_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_GiveWeaponOnActivation.OnWeaponStateChanged
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class AKSWeapon**              Weapon                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// EWeaponStateNew*               OldState                       (Parm, ZeroConstructor, IsPlainOldData)
// EWeaponStateNew*               NewState                       (Parm, ZeroConstructor, IsPlainOldData)

void UKSModInst_GiveWeaponOnActivation::OnWeaponStateChanged(class AKSWeapon** Weapon, EWeaponStateNew* OldState, EWeaponStateNew* NewState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_GiveWeaponOnActivation.OnWeaponStateChanged");

	UKSModInst_GiveWeaponOnActivation_OnWeaponStateChanged_Params params;
	params.Weapon = Weapon;
	params.OldState = OldState;
	params.NewState = NewState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_GiveWeaponOnActivation.OnGivenWeaponInstigatedDamage
// (Final, Native, Private, HasOutParms)
// Parameters:
// class AKSCharacterBase**       InPawn                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FCombatEventInfo*       DamageInfo                     (ConstParm, Parm, OutParm, ReferenceParm)

void UKSModInst_GiveWeaponOnActivation::OnGivenWeaponInstigatedDamage(class AKSCharacterBase** InPawn, struct FCombatEventInfo* DamageInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_GiveWeaponOnActivation.OnGivenWeaponInstigatedDamage");

	UKSModInst_GiveWeaponOnActivation_OnGivenWeaponInstigatedDamage_Params params;
	params.InPawn = InPawn;
	params.DamageInfo = DamageInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_GiveWeaponOnActivation.HandleWeaponExhausted
// (Final, Native, Protected)
// Parameters:
// class AKSWeapon**              Weapon                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UKSModInst_GiveWeaponOnActivation::HandleWeaponExhausted(class AKSWeapon** Weapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_GiveWeaponOnActivation.HandleWeaponExhausted");

	UKSModInst_GiveWeaponOnActivation_HandleWeaponExhausted_Params params;
	params.Weapon = Weapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_GiveWeaponOnActivation.GivenWeaponInstigatedDamage
// (Native, Event, Protected, HasOutParms, BlueprintEvent)
// Parameters:
// class AKSCharacterBase**       InPawn                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FCombatEventInfo*       DamageInfo                     (ConstParm, Parm, OutParm, ReferenceParm)

void UKSModInst_GiveWeaponOnActivation::GivenWeaponInstigatedDamage(class AKSCharacterBase** InPawn, struct FCombatEventInfo* DamageInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_GiveWeaponOnActivation.GivenWeaponInstigatedDamage");

	UKSModInst_GiveWeaponOnActivation_GivenWeaponInstigatedDamage_Params params;
	params.InPawn = InPawn;
	params.DamageInfo = DamageInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_GiveWeaponOnActivation.EndsActivationOnHolster
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSModInst_GiveWeaponOnActivation::EndsActivationOnHolster()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_GiveWeaponOnActivation.EndsActivationOnHolster");

	UKSModInst_GiveWeaponOnActivation_EndsActivationOnHolster_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSModInst_GiveWeaponOnActivation.EndsActivationOnEmptyClip
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSModInst_GiveWeaponOnActivation::EndsActivationOnEmptyClip()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_GiveWeaponOnActivation.EndsActivationOnEmptyClip");

	UKSModInst_GiveWeaponOnActivation_EndsActivationOnEmptyClip_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSModInst_GiveWeaponOnActivation.BroadcastGivenWeaponInstigatedDamage
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// class AKSCharacterBase**       InPawn                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FCombatEventInfo*       DamageInfo                     (ConstParm, Parm, ReferenceParm)

void UKSModInst_GiveWeaponOnActivation::BroadcastGivenWeaponInstigatedDamage(class AKSCharacterBase** InPawn, struct FCombatEventInfo* DamageInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_GiveWeaponOnActivation.BroadcastGivenWeaponInstigatedDamage");

	UKSModInst_GiveWeaponOnActivation_BroadcastGivenWeaponInstigatedDamage_Params params;
	params.InPawn = InPawn;
	params.DamageInfo = DamageInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_FireWeaponOnActivation.HandleIdle
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class AKSWeapon**              Weapon                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// EWeaponStateNew*               OldState                       (Parm, ZeroConstructor, IsPlainOldData)

void UKSModInst_FireWeaponOnActivation::HandleIdle(class AKSWeapon** Weapon, EWeaponStateNew* OldState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_FireWeaponOnActivation.HandleIdle");

	UKSModInst_FireWeaponOnActivation_HandleIdle_Params params;
	params.Weapon = Weapon;
	params.OldState = OldState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_FireWeaponOnActivation.HandleCooldown
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class AKSWeapon**              Weapon                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// EWeaponStateNew*               OldState                       (Parm, ZeroConstructor, IsPlainOldData)

void UKSModInst_FireWeaponOnActivation::HandleCooldown(class AKSWeapon** Weapon, EWeaponStateNew* OldState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_FireWeaponOnActivation.HandleCooldown");

	UKSModInst_FireWeaponOnActivation_HandleCooldown_Params params;
	params.Weapon = Weapon;
	params.OldState = OldState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_FireWeaponOnActivation.HandleBuildup
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class AKSWeapon**              Weapon                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// EWeaponStateNew*               OldState                       (Parm, ZeroConstructor, IsPlainOldData)

void UKSModInst_FireWeaponOnActivation::HandleBuildup(class AKSWeapon** Weapon, EWeaponStateNew* OldState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_FireWeaponOnActivation.HandleBuildup");

	UKSModInst_FireWeaponOnActivation_HandleBuildup_Params params;
	params.Weapon = Weapon;
	params.OldState = OldState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_FireWeaponOnActivation.ClientFire
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// class AKSWeapon**              Weapon                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)

void UKSModInst_FireWeaponOnActivation::ClientFire(class AKSWeapon** Weapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_FireWeaponOnActivation.ClientFire");

	UKSModInst_FireWeaponOnActivation_ClientFire_Params params;
	params.Weapon = Weapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_DirectTargetWeapon.GetCurrentTarget
// (Final, Native, Public, Const)
// Parameters:
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AActor* UKSModInst_DirectTargetWeapon::GetCurrentTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_DirectTargetWeapon.GetCurrentTarget");

	UKSModInst_DirectTargetWeapon_GetCurrentTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSModInst_GiveBuildOnActivation.BuildSucceeded
// (Final, Native, Protected)

void UKSModInst_GiveBuildOnActivation::BuildSucceeded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_GiveBuildOnActivation.BuildSucceeded");

	UKSModInst_GiveBuildOnActivation_BuildSucceeded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_GiveBuildOnActivation.BuildSpawned
// (Final, Native, Protected)
// Parameters:
// class AKSBuild**               SpawnedBuild                   (Parm, ZeroConstructor, IsPlainOldData)

void UKSModInst_GiveBuildOnActivation::BuildSpawned(class AKSBuild** SpawnedBuild)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_GiveBuildOnActivation.BuildSpawned");

	UKSModInst_GiveBuildOnActivation_BuildSpawned_Params params;
	params.SpawnedBuild = SpawnedBuild;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_GiveBuildOnActivation.BuildReclaimed
// (Final, Native, Protected)
// Parameters:
// class AKSBuild**               Reclaimed                      (Parm, ZeroConstructor, IsPlainOldData)

void UKSModInst_GiveBuildOnActivation::BuildReclaimed(class AKSBuild** Reclaimed)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_GiveBuildOnActivation.BuildReclaimed");

	UKSModInst_GiveBuildOnActivation_BuildReclaimed_Params params;
	params.Reclaimed = Reclaimed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_GiveBuildOnActivation.BuildFailed
// (Final, Native, Protected)

void UKSModInst_GiveBuildOnActivation::BuildFailed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_GiveBuildOnActivation.BuildFailed");

	UKSModInst_GiveBuildOnActivation_BuildFailed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_MartialArtist.GetThrowDistance
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSModInst_MartialArtist::GetThrowDistance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_MartialArtist.GetThrowDistance");

	UKSModInst_MartialArtist_GetThrowDistance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSModInst_MartialArtist.GetThrowDirection
// (Final, Native, Protected, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector*                ToDirection                    (Parm, ZeroConstructor, IsPlainOldData)
// EThrowDirection*               ThrowDirection                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector UKSModInst_MartialArtist::GetThrowDirection(struct FVector* ToDirection, EThrowDirection* ThrowDirection)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_MartialArtist.GetThrowDirection");

	UKSModInst_MartialArtist_GetThrowDirection_Params params;
	params.ToDirection = ToDirection;
	params.ThrowDirection = ThrowDirection;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSModInst_MartialArtist.GetCardinalThrowDirection
// (Event, Protected, HasOutParms, BlueprintEvent)
// Parameters:
// EThrowDirection                OutThrowDirection              (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void UKSModInst_MartialArtist::GetCardinalThrowDirection(EThrowDirection* OutThrowDirection)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_MartialArtist.GetCardinalThrowDirection");

	UKSModInst_MartialArtist_GetCardinalThrowDirection_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutThrowDirection != nullptr)
		*OutThrowDirection = params.OutThrowDirection;
}


// Function Killstreak.KSModInst_MartialArtist.BroadcastTargetInfo
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// EThrowDirection*               Direction                      (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FVector>*        Path                           (ConstParm, Parm, ZeroConstructor, ReferenceParm)
// float*                         PathDistance                   (Parm, ZeroConstructor, IsPlainOldData)

void UKSModInst_MartialArtist::BroadcastTargetInfo(EThrowDirection* Direction, TArray<struct FVector>* Path, float* PathDistance)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_MartialArtist.BroadcastTargetInfo");

	UKSModInst_MartialArtist_BroadcastTargetInfo_Params params;
	params.Direction = Direction;
	params.Path = Path;
	params.PathDistance = PathDistance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_MovementAbility.GetDistance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSModInst_MovementAbility::GetDistance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_MovementAbility.GetDistance");

	UKSModInst_MovementAbility_GetDistance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSModInst_OnDodgeRoll.Triggered
// (Final, Native, Protected)
// Parameters:
// float*                         RollDuration                   (Parm, ZeroConstructor, IsPlainOldData)

void UKSModInst_OnDodgeRoll::Triggered(float* RollDuration)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_OnDodgeRoll.Triggered");

	UKSModInst_OnDodgeRoll_Triggered_Params params;
	params.RollDuration = RollDuration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_OnDodgeRoll.OnDodgeRoll
// (Event, Public, BlueprintEvent)
// Parameters:
// float*                         RollDuration                   (Parm, ZeroConstructor, IsPlainOldData)

void UKSModInst_OnDodgeRoll::OnDodgeRoll(float* RollDuration)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_OnDodgeRoll.OnDodgeRoll");

	UKSModInst_OnDodgeRoll_OnDodgeRoll_Params params;
	params.RollDuration = RollDuration;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_OnDownOrRevive.OnReviveComplete
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AKSCharacter**           Reviver                        (Parm, ZeroConstructor, IsPlainOldData)
// class AKSCharacter**           Revivee                        (Parm, ZeroConstructor, IsPlainOldData)

void UKSModInst_OnDownOrRevive::OnReviveComplete(class AKSCharacter** Reviver, class AKSCharacter** Revivee)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_OnDownOrRevive.OnReviveComplete");

	UKSModInst_OnDownOrRevive_OnReviveComplete_Params params;
	params.Reviver = Reviver;
	params.Revivee = Revivee;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_OnDownOther.OnDownOther
// (Event, Public, BlueprintEvent)
// Parameters:
// class AKSCharacter**           Other                          (Parm, ZeroConstructor, IsPlainOldData)

void UKSModInst_OnDownOther::OnDownOther(class AKSCharacter** Other)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_OnDownOther.OnDownOther");

	UKSModInst_OnDownOther_OnDownOther_Params params;
	params.Other = Other;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_OnDownOther.DownTriggered
// (Final, Native, Protected)
// Parameters:
// class AKSCharacter**           Other                          (Parm, ZeroConstructor, IsPlainOldData)

void UKSModInst_OnDownOther::DownTriggered(class AKSCharacter** Other)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_OnDownOther.DownTriggered");

	UKSModInst_OnDownOther_DownTriggered_Params params;
	params.Other = Other;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_OnPickupItem.OnItemPickedUp
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AKSCharacter**           Character                      (Parm, ZeroConstructor, IsPlainOldData)
// class AKSItemDrop**            ItemDrop                       (Parm, ZeroConstructor, IsPlainOldData)

void UKSModInst_OnPickupItem::OnItemPickedUp(class AKSCharacter** Character, class AKSItemDrop** ItemDrop)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_OnPickupItem.OnItemPickedUp");

	UKSModInst_OnPickupItem_OnItemPickedUp_Params params;
	params.Character = Character;
	params.ItemDrop = ItemDrop;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_OnPickupItem.ItemPickedUp
// (Final, Native, Protected)
// Parameters:
// class AKSCharacter**           Character                      (Parm, ZeroConstructor, IsPlainOldData)
// class AKSItemDrop**            ItemDrop                       (Parm, ZeroConstructor, IsPlainOldData)

void UKSModInst_OnPickupItem::ItemPickedUp(class AKSCharacter** Character, class AKSItemDrop** ItemDrop)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_OnPickupItem.ItemPickedUp");

	UKSModInst_OnPickupItem_ItemPickedUp_Params params;
	params.Character = Character;
	params.ItemDrop = ItemDrop;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_OnReviveOther.Triggered
// (Final, Native, Protected)
// Parameters:
// class AKSCharacter**           Reviver                        (Parm, ZeroConstructor, IsPlainOldData)
// class AKSCharacter**           Revivee                        (Parm, ZeroConstructor, IsPlainOldData)

void UKSModInst_OnReviveOther::Triggered(class AKSCharacter** Reviver, class AKSCharacter** Revivee)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_OnReviveOther.Triggered");

	UKSModInst_OnReviveOther_Triggered_Params params;
	params.Reviver = Reviver;
	params.Revivee = Revivee;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_OnReviveOther.OnReviveOther
// (Event, Public, BlueprintEvent)
// Parameters:
// class AKSCharacter**           Reviver                        (Parm, ZeroConstructor, IsPlainOldData)
// class AKSCharacter**           Revivee                        (Parm, ZeroConstructor, IsPlainOldData)

void UKSModInst_OnReviveOther::OnReviveOther(class AKSCharacter** Reviver, class AKSCharacter** Revivee)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_OnReviveOther.OnReviveOther");

	UKSModInst_OnReviveOther_OnReviveOther_Params params;
	params.Reviver = Reviver;
	params.Revivee = Revivee;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_OnTakeDamage.TakeDamageTimerComplete
// (Native, Event, Protected, BlueprintEvent)

void UKSModInst_OnTakeDamage::TakeDamageTimerComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_OnTakeDamage.TakeDamageTimerComplete");

	UKSModInst_OnTakeDamage_TakeDamageTimerComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_OnTakeDamage.StopTakeDamageTimer
// (Final, Native, Protected, BlueprintCallable)

void UKSModInst_OnTakeDamage::StopTakeDamageTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_OnTakeDamage.StopTakeDamageTimer");

	UKSModInst_OnTakeDamage_StopTakeDamageTimer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_OnTakeDamage.StartTakeDamageTimer
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float*                         Duration                       (Parm, ZeroConstructor, IsPlainOldData)

void UKSModInst_OnTakeDamage::StartTakeDamageTimer(float* Duration)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_OnTakeDamage.StartTakeDamageTimer");

	UKSModInst_OnTakeDamage_StartTakeDamageTimer_Params params;
	params.Duration = Duration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_OnTakeDamage.ReviveCompleted
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AKSCharacter**           Reviver                        (Parm, ZeroConstructor, IsPlainOldData)
// class AKSCharacter**           Revivee                        (Parm, ZeroConstructor, IsPlainOldData)

void UKSModInst_OnTakeDamage::ReviveCompleted(class AKSCharacter** Reviver, class AKSCharacter** Revivee)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_OnTakeDamage.ReviveCompleted");

	UKSModInst_OnTakeDamage_ReviveCompleted_Params params;
	params.Reviver = Reviver;
	params.Revivee = Revivee;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_OnTakeDamage.OnTakeDamage
// (Final, Native, Protected)
// Parameters:
// class AActor**                 InActor                        (Parm, ZeroConstructor, IsPlainOldData)
// float*                         DamageAmount                   (Parm, ZeroConstructor, IsPlainOldData)
// class UDamageType**            DamageTypeCDO                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AController**            EventInstigator                (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)

void UKSModInst_OnTakeDamage::OnTakeDamage(class AActor** InActor, float* DamageAmount, class UDamageType** DamageTypeCDO, class AController** EventInstigator, class AActor** DamageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_OnTakeDamage.OnTakeDamage");

	UKSModInst_OnTakeDamage_OnTakeDamage_Params params;
	params.InActor = InActor;
	params.DamageAmount = DamageAmount;
	params.DamageTypeCDO = DamageTypeCDO;
	params.EventInstigator = EventInstigator;
	params.DamageCauser = DamageCauser;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_OnTakeDamage.OnReviveCompleted
// (Final, Native, Protected)
// Parameters:
// class AKSCharacter**           Reviver                        (Parm, ZeroConstructor, IsPlainOldData)
// class AKSCharacter**           Revivee                        (Parm, ZeroConstructor, IsPlainOldData)

void UKSModInst_OnTakeDamage::OnReviveCompleted(class AKSCharacter** Reviver, class AKSCharacter** Revivee)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_OnTakeDamage.OnReviveCompleted");

	UKSModInst_OnTakeDamage_OnReviveCompleted_Params params;
	params.Reviver = Reviver;
	params.Revivee = Revivee;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_OnTakeDamage.OnRep_TakeDamageTimer
// (Final, Native, Protected)

void UKSModInst_OnTakeDamage::OnRep_TakeDamageTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_OnTakeDamage.OnRep_TakeDamageTimer");

	UKSModInst_OnTakeDamage_OnRep_TakeDamageTimer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_OnTakeDamage.MatchingDamageTaken
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AActor**                 InActor                        (Parm, ZeroConstructor, IsPlainOldData)
// float*                         DamageAmount                   (Parm, ZeroConstructor, IsPlainOldData)
// class UDamageType**            DamageTypeCDO                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class AController**            EventInstigator                (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)

void UKSModInst_OnTakeDamage::MatchingDamageTaken(class AActor** InActor, float* DamageAmount, class UDamageType** DamageTypeCDO, class AController** EventInstigator, class AActor** DamageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_OnTakeDamage.MatchingDamageTaken");

	UKSModInst_OnTakeDamage_MatchingDamageTaken_Params params;
	params.InActor = InActor;
	params.DamageAmount = DamageAmount;
	params.DamageTypeCDO = DamageTypeCDO;
	params.EventInstigator = EventInstigator;
	params.DamageCauser = DamageCauser;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_PingOnOtherDowned.PingFromDownedEnemy
// (Native, Public)
// Parameters:
// class AKSPlayerState**         DownedEnemy                    (Parm, ZeroConstructor, IsPlainOldData)

void UKSModInst_PingOnOtherDowned::PingFromDownedEnemy(class AKSPlayerState** DownedEnemy)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_PingOnOtherDowned.PingFromDownedEnemy");

	UKSModInst_PingOnOtherDowned_PingFromDownedEnemy_Params params;
	params.DownedEnemy = DownedEnemy;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_PingOnOtherDowned.OnPlayerDowned
// (Final, Native, Public)
// Parameters:
// struct FCombatEventInfo*       EventInfo                      (Parm)
// int*                           XpBonus                        (Parm, ZeroConstructor, IsPlainOldData)

void UKSModInst_PingOnOtherDowned::OnPlayerDowned(struct FCombatEventInfo* EventInfo, int* XpBonus)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_PingOnOtherDowned.OnPlayerDowned");

	UKSModInst_PingOnOtherDowned_OnPlayerDowned_Params params;
	params.EventInfo = EventInfo;
	params.XpBonus = XpBonus;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_PingOnOtherDowned.OnCharacterPinged
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AKSCharacter**           PingedCharacter                (Parm, ZeroConstructor, IsPlainOldData)

void UKSModInst_PingOnOtherDowned::OnCharacterPinged(class AKSCharacter** PingedCharacter)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_PingOnOtherDowned.OnCharacterPinged");

	UKSModInst_PingOnOtherDowned_OnCharacterPinged_Params params;
	params.PingedCharacter = PingedCharacter;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_PingOnOtherDowned.BroadcastSpawnPingEmitter
// (Net, Native, Event, NetMulticast, Protected, HasDefaults)
// Parameters:
// class UParticleSystem**        EmitterTemplate                (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                Location                       (Parm, ZeroConstructor, IsPlainOldData)

void UKSModInst_PingOnOtherDowned::BroadcastSpawnPingEmitter(class UParticleSystem** EmitterTemplate, struct FVector* Location)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_PingOnOtherDowned.BroadcastSpawnPingEmitter");

	UKSModInst_PingOnOtherDowned_BroadcastSpawnPingEmitter_Params params;
	params.EmitterTemplate = EmitterTemplate;
	params.Location = Location;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_PingOnOtherDowned.BroadcastPingedCharacter
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// class AKSCharacter**           PingedCharacter                (Parm, ZeroConstructor, IsPlainOldData)

void UKSModInst_PingOnOtherDowned::BroadcastPingedCharacter(class AKSCharacter** PingedCharacter)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_PingOnOtherDowned.BroadcastPingedCharacter");

	UKSModInst_PingOnOtherDowned_BroadcastPingedCharacter_Params params;
	params.PingedCharacter = PingedCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_RevealOnMinimap.GeneratePing
// (Final, Native, Protected)

void UKSModInst_RevealOnMinimap::GeneratePing()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_RevealOnMinimap.GeneratePing");

	UKSModInst_RevealOnMinimap_GeneratePing_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_StartingEquipment.GiveEquipment
// (Final, Native, Protected, BlueprintCallable)

void UKSModInst_StartingEquipment::GiveEquipment()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_StartingEquipment.GiveEquipment");

	UKSModInst_StartingEquipment_GiveEquipment_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_WeaponSkinOverride.OnActiveWeaponChanged
// (Final, Native, Protected)
// Parameters:
// class AKSCharacter**           Character                      (Parm, ZeroConstructor, IsPlainOldData)

void UKSModInst_WeaponSkinOverride::OnActiveWeaponChanged(class AKSCharacter** Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_WeaponSkinOverride.OnActiveWeaponChanged");

	UKSModInst_WeaponSkinOverride_OnActiveWeaponChanged_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSMultiDownsTracker.RemoveTrackerByPlayerState
// (Final, Native, Public)
// Parameters:
// class AKSPlayerState**         CurrentPlayerState             (Parm, ZeroConstructor, IsPlainOldData)

void UKSMultiDownsTracker::RemoveTrackerByPlayerState(class AKSPlayerState** CurrentPlayerState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMultiDownsTracker.RemoveTrackerByPlayerState");

	UKSMultiDownsTracker_RemoveTrackerByPlayerState_Params params;
	params.CurrentPlayerState = CurrentPlayerState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSMultiDownsTracker.RemoveTracker
// (Final, Native, Public)
// Parameters:
// struct FAccoladePlayerTrackers* CurrentTrackPlayer             (Parm)

void UKSMultiDownsTracker::RemoveTracker(struct FAccoladePlayerTrackers* CurrentTrackPlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMultiDownsTracker.RemoveTracker");

	UKSMultiDownsTracker_RemoveTracker_Params params;
	params.CurrentTrackPlayer = CurrentTrackPlayer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSMultiDownsTracker.HandleTrackerAccolade
// (Final, Native, Public)
// Parameters:
// struct FAccoladePlayerTrackers* CurrentTrackPlayer             (Parm)

void UKSMultiDownsTracker::HandleTrackerAccolade(struct FAccoladePlayerTrackers* CurrentTrackPlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMultiDownsTracker.HandleTrackerAccolade");

	UKSMultiDownsTracker_HandleTrackerAccolade_Params params;
	params.CurrentTrackPlayer = CurrentTrackPlayer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSMultiDownsTracker.GetTrackPlayer
// (Final, Native, Protected, HasOutParms)
// Parameters:
// int*                           PlayerId                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FAccoladePlayerTrackers OutTracker                     (Parm, OutParm)
// int                            TrackerIndex                   (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSMultiDownsTracker::GetTrackPlayer(int* PlayerId, struct FAccoladePlayerTrackers* OutTracker, int* TrackerIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMultiDownsTracker.GetTrackPlayer");

	UKSMultiDownsTracker_GetTrackPlayer_Params params;
	params.PlayerId = PlayerId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutTracker != nullptr)
		*OutTracker = params.OutTracker;
	if (TrackerIndex != nullptr)
		*TrackerIndex = params.TrackerIndex;

	return params.ReturnValue;
}


// Function Killstreak.KSMultiElimTracker.RemoveTrackerByPlayerState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AKSPlayerState**         CurrentPlayerState             (Parm, ZeroConstructor, IsPlainOldData)

void UKSMultiElimTracker::RemoveTrackerByPlayerState(class AKSPlayerState** CurrentPlayerState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMultiElimTracker.RemoveTrackerByPlayerState");

	UKSMultiElimTracker_RemoveTrackerByPlayerState_Params params;
	params.CurrentPlayerState = CurrentPlayerState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSMultiElimTracker.HandleTrackerAccolade
// (Final, Native, Public)
// Parameters:
// struct FAccoladePlayerTrackers* CurrentTrackPlayer             (Parm)

void UKSMultiElimTracker::HandleTrackerAccolade(struct FAccoladePlayerTrackers* CurrentTrackPlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMultiElimTracker.HandleTrackerAccolade");

	UKSMultiElimTracker_HandleTrackerAccolade_Params params;
	params.CurrentTrackPlayer = CurrentTrackPlayer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSMultiElimTracker.GetTrackPlayer
// (Final, Native, Protected, HasOutParms)
// Parameters:
// int*                           PlayerId                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FAccoladePlayerTrackers OutTracker                     (Parm, OutParm)
// int                            TrackerIndex                   (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSMultiElimTracker::GetTrackPlayer(int* PlayerId, struct FAccoladePlayerTrackers* OutTracker, int* TrackerIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMultiElimTracker.GetTrackPlayer");

	UKSMultiElimTracker_GetTrackPlayer_Params params;
	params.PlayerId = PlayerId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutTracker != nullptr)
		*OutTracker = params.OutTracker;
	if (TrackerIndex != nullptr)
		*TrackerIndex = params.TrackerIndex;

	return params.ReturnValue;
}


// Function Killstreak.KSNamedObject.GetKSName
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FText UKSNamedObject::GetKSName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSNamedObject.GetKSName");

	UKSNamedObject_GetKSName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSNavModifierComponent.UpdateNavigationMesh
// (Final, Native, Public, BlueprintCallable)

void UKSNavModifierComponent::UpdateNavigationMesh()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSNavModifierComponent.UpdateNavigationMesh");

	UKSNavModifierComponent_UpdateNavigationMesh_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSNavModifierComponent.UpdateCachedBounds
// (Final, Native, Public, BlueprintCallable)

void UKSNavModifierComponent::UpdateCachedBounds()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSNavModifierComponent.UpdateCachedBounds");

	UKSNavModifierComponent_UpdateCachedBounds_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSNavModifierComponent.SetAreaClassAndCacheBounds
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass**                 NewAreaClass                   (Parm, ZeroConstructor, IsPlainOldData)

void UKSNavModifierComponent::SetAreaClassAndCacheBounds(class UClass** NewAreaClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSNavModifierComponent.SetAreaClassAndCacheBounds");

	UKSNavModifierComponent_SetAreaClassAndCacheBounds_Params params;
	params.NewAreaClass = NewAreaClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSNeutralBombZone.TeamUpdated
// (Event, Protected, BlueprintEvent)

void AKSNeutralBombZone::TeamUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSNeutralBombZone.TeamUpdated");

	AKSNeutralBombZone_TeamUpdated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSNeutralBombZone.OnTeamSidesFlipped
// (Final, Native, Protected)

void AKSNeutralBombZone::OnTeamSidesFlipped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSNeutralBombZone.OnTeamSidesFlipped");

	AKSNeutralBombZone_OnTeamSidesFlipped_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSNeutralBombZone.OnRep_Team
// (Final, Native, Protected)

void AKSNeutralBombZone::OnRep_Team()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSNeutralBombZone.OnRep_Team");

	AKSNeutralBombZone_OnRep_Team_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSNeutralBombZone.OnRep_Activated
// (Final, Native, Protected)

void AKSNeutralBombZone::OnRep_Activated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSNeutralBombZone.OnRep_Activated");

	AKSNeutralBombZone_OnRep_Activated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSNeutralBombZone.Activated
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool*                          bActive                        (Parm, ZeroConstructor, IsPlainOldData)

void AKSNeutralBombZone::Activated(bool* bActive)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSNeutralBombZone.Activated");

	AKSNeutralBombZone_Activated_Params params;
	params.bActive = bActive;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSNoFlyZoneTracker.UpdatePlayerTrackers
// (Final, Native, Public)
// Parameters:
// class AKSPlayerState**         InstigatorPlayerState          (Parm, ZeroConstructor, IsPlainOldData)

void UKSNoFlyZoneTracker::UpdatePlayerTrackers(class AKSPlayerState** InstigatorPlayerState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSNoFlyZoneTracker.UpdatePlayerTrackers");

	UKSNoFlyZoneTracker_UpdatePlayerTrackers_Params params;
	params.InstigatorPlayerState = InstigatorPlayerState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSNoFlyZoneTracker.HandleTrackerAccolade
// (Final, Native, Public)
// Parameters:
// class AKSPlayerState**         Player                         (Parm, ZeroConstructor, IsPlainOldData)

void UKSNoFlyZoneTracker::HandleTrackerAccolade(class AKSPlayerState** Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSNoFlyZoneTracker.HandleTrackerAccolade");

	UKSNoFlyZoneTracker_HandleTrackerAccolade_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSNPETrackManager.GetActivityInstanceByType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EKSNPEActivityType*            Type                           (Parm, ZeroConstructor, IsPlainOldData)
// class AKSPlayerController**    Player                         (Parm, ZeroConstructor, IsPlainOldData)
// class UKSActivityInstance*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UKSActivityInstance* UKSNPETrackManager::GetActivityInstanceByType(EKSNPEActivityType* Type, class AKSPlayerController** Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSNPETrackManager.GetActivityInstanceByType");

	UKSNPETrackManager_GetActivityInstanceByType_Params params;
	params.Type = Type;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSNPETrackManager.FindActivityByType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EKSNPEActivityType*            Type                           (Parm, ZeroConstructor, IsPlainOldData)
// class UKSNPEActivity*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UKSNPEActivity* UKSNPETrackManager::FindActivityByType(EKSNPEActivityType* Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSNPETrackManager.FindActivityByType");

	UKSNPETrackManager_FindActivityByType_Params params;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSOutOfBoundsManager.TickDamage
// (Final, Native, Private)

void UKSOutOfBoundsManager::TickDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSOutOfBoundsManager.TickDamage");

	UKSOutOfBoundsManager_TickDamage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSOutOfBoundsManager.OnOutOfBoundsWarningExpired
// (Final, Native, Private)

void UKSOutOfBoundsManager::OnOutOfBoundsWarningExpired()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSOutOfBoundsManager.OnOutOfBoundsWarningExpired");

	UKSOutOfBoundsManager_OnOutOfBoundsWarningExpired_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSOutOfBoundsManager.OnCharacterOutOfWorld
// (Final, Native, Private)
// Parameters:
// class AKSCharacter**           Character                      (Parm, ZeroConstructor, IsPlainOldData)

void UKSOutOfBoundsManager::OnCharacterOutOfWorld(class AKSCharacter** Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSOutOfBoundsManager.OnCharacterOutOfWorld");

	UKSOutOfBoundsManager_OnCharacterOutOfWorld_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSOutOfBoundsManager.OnActorOverlapZoneEnd
// (Final, Native, Private)
// Parameters:
// class AActor**                 OverlappedActor                (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)

void UKSOutOfBoundsManager::OnActorOverlapZoneEnd(class AActor** OverlappedActor, class AActor** OtherActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSOutOfBoundsManager.OnActorOverlapZoneEnd");

	UKSOutOfBoundsManager_OnActorOverlapZoneEnd_Params params;
	params.OverlappedActor = OverlappedActor;
	params.OtherActor = OtherActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSOutOfBoundsManager.OnActorOverlapZoneBegin
// (Final, Native, Private)
// Parameters:
// class AActor**                 OverlappedActor                (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)

void UKSOutOfBoundsManager::OnActorOverlapZoneBegin(class AActor** OverlappedActor, class AActor** OtherActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSOutOfBoundsManager.OnActorOverlapZoneBegin");

	UKSOutOfBoundsManager_OnActorOverlapZoneBegin_Params params;
	params.OverlappedActor = OverlappedActor;
	params.OtherActor = OtherActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSOutOfBoundsManager.OnActorOverlapVolumeEnd
// (Final, Native, Private)
// Parameters:
// class UPrimitiveComponent**    OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor**                 OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent**    OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int*                           OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)

void UKSOutOfBoundsManager::OnActorOverlapVolumeEnd(class UPrimitiveComponent** OverlappedComponent, class AActor** OtherActor, class UPrimitiveComponent** OtherComp, int* OtherBodyIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSOutOfBoundsManager.OnActorOverlapVolumeEnd");

	UKSOutOfBoundsManager_OnActorOverlapVolumeEnd_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSOutOfBoundsManager.OnActorOverlapVolumeBegin
// (Final, Native, Private, HasOutParms)
// Parameters:
// class UPrimitiveComponent**    OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor**                 OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent**    OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int*                           OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult*             SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UKSOutOfBoundsManager::OnActorOverlapVolumeBegin(class UPrimitiveComponent** OverlappedComponent, class AActor** OtherActor, class UPrimitiveComponent** OtherComp, int* OtherBodyIndex, bool* bFromSweep, struct FHitResult* SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSOutOfBoundsManager.OnActorOverlapVolumeBegin");

	UKSOutOfBoundsManager_OnActorOverlapVolumeBegin_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSOutOfBoundsManager.ExpireTimeSpentGroundedTimer
// (Final, Native, Protected)

void UKSOutOfBoundsManager::ExpireTimeSpentGroundedTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSOutOfBoundsManager.ExpireTimeSpentGroundedTimer");

	UKSOutOfBoundsManager_ExpireTimeSpentGroundedTimer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSOutOfBoundsManager_RoundGame.OnRoundStarted
// (Final, Native, Protected, HasOutParms)
// Parameters:
// struct FRoundInitState*        RoundState                     (ConstParm, Parm, OutParm, ReferenceParm)

void UKSOutOfBoundsManager_RoundGame::OnRoundStarted(struct FRoundInitState* RoundState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSOutOfBoundsManager_RoundGame.OnRoundStarted");

	UKSOutOfBoundsManager_RoundGame_OnRoundStarted_Params params;
	params.RoundState = RoundState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSOutOfBoundsManager_RoundGame.OnFreezeEnd
// (Final, Native, Protected)

void UKSOutOfBoundsManager_RoundGame::OnFreezeEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSOutOfBoundsManager_RoundGame.OnFreezeEnd");

	UKSOutOfBoundsManager_RoundGame_OnFreezeEnd_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSOutOfBoundsZone.TurnOnDropBoundary
// (Event, Protected, BlueprintEvent)

void AKSOutOfBoundsZone::TurnOnDropBoundary()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSOutOfBoundsZone.TurnOnDropBoundary");

	AKSOutOfBoundsZone_TurnOnDropBoundary_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSOutOfBoundsZone.TurnOffDropBoundary
// (Event, Protected, BlueprintEvent)

void AKSOutOfBoundsZone::TurnOffDropBoundary()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSOutOfBoundsZone.TurnOffDropBoundary");

	AKSOutOfBoundsZone_TurnOffDropBoundary_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSOutOfBoundsZone.TurnOffCollision
// (Event, Protected, HasOutParms, BlueprintEvent)
// Parameters:
// class AKSGameState**           GameState                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FRoundResult*           RoundResult                    (ConstParm, Parm, OutParm, ReferenceParm)

void AKSOutOfBoundsZone::TurnOffCollision(class AKSGameState** GameState, struct FRoundResult* RoundResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSOutOfBoundsZone.TurnOffCollision");

	AKSOutOfBoundsZone_TurnOffCollision_Params params;
	params.GameState = GameState;
	params.RoundResult = RoundResult;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSOutOfBoundsVolume.TurnOnCollision
// (Native, Event, Protected, BlueprintEvent)

void AKSOutOfBoundsVolume::TurnOnCollision()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSOutOfBoundsVolume.TurnOnCollision");

	AKSOutOfBoundsVolume_TurnOnCollision_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSOutOfBoundsVolume.TurnOffCollision
// (Native, Event, Protected, HasOutParms, BlueprintEvent)
// Parameters:
// class AKSGameState**           GameState                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FRoundResult*           RoundResult                    (ConstParm, Parm, OutParm, ReferenceParm)

void AKSOutOfBoundsVolume::TurnOffCollision(class AKSGameState** GameState, struct FRoundResult* RoundResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSOutOfBoundsVolume.TurnOffCollision");

	AKSOutOfBoundsVolume_TurnOffCollision_Params params;
	params.GameState = GameState;
	params.RoundResult = RoundResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPawnCommonInterface.PrepareForNextRound
// (Native, Public, HasOutParms)
// Parameters:
// class AActor*                  ActorToDestroy                 (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSPawnCommonInterface::PrepareForNextRound(class AActor** ActorToDestroy)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPawnCommonInterface.PrepareForNextRound");

	UKSPawnCommonInterface_PrepareForNextRound_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (ActorToDestroy != nullptr)
		*ActorToDestroy = params.ActorToDestroy;

	return params.ReturnValue;
}


// Function Killstreak.KSPayBackTracker.IsVictimStored
// (Final, Native, Public, HasOutParms)
// Parameters:
// int*                           VictimPlayerId                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FTrackPlayerElim        PlayerTracker                  (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// int                            TrackerIndex                   (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSPayBackTracker::IsVictimStored(int* VictimPlayerId, struct FTrackPlayerElim* PlayerTracker, int* TrackerIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPayBackTracker.IsVictimStored");

	UKSPayBackTracker_IsVictimStored_Params params;
	params.VictimPlayerId = VictimPlayerId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (PlayerTracker != nullptr)
		*PlayerTracker = params.PlayerTracker;
	if (TrackerIndex != nullptr)
		*TrackerIndex = params.TrackerIndex;

	return params.ReturnValue;
}


// Function Killstreak.KSPayBackTracker.HandleTrackerAccolade
// (Final, Native, Public)
// Parameters:
// class AKSPlayerState**         PlayerState                    (Parm, ZeroConstructor, IsPlainOldData)

void UKSPayBackTracker::HandleTrackerAccolade(class AKSPlayerState** PlayerState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPayBackTracker.HandleTrackerAccolade");

	UKSPayBackTracker_HandleTrackerAccolade_Params params;
	params.PlayerState = PlayerState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPayBackTracker.CheckLastInstigator
// (Final, Native, Public, HasOutParms)
// Parameters:
// int*                           VictimId                       (Parm, ZeroConstructor, IsPlainOldData)
// int*                           CurrentInstigatorId            (Parm, ZeroConstructor, IsPlainOldData)
// struct FTrackPlayerElim        PlayerTracker                  (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// int                            TrackerIndex                   (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSPayBackTracker::CheckLastInstigator(int* VictimId, int* CurrentInstigatorId, struct FTrackPlayerElim* PlayerTracker, int* TrackerIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPayBackTracker.CheckLastInstigator");

	UKSPayBackTracker_CheckLastInstigator_Params params;
	params.VictimId = VictimId;
	params.CurrentInstigatorId = CurrentInstigatorId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (PlayerTracker != nullptr)
		*PlayerTracker = params.PlayerTracker;
	if (TrackerIndex != nullptr)
		*TrackerIndex = params.TrackerIndex;

	return params.ReturnValue;
}


// Function Killstreak.KSPerformanceCaptureCamera.GetNextCamera
// (Event, Public, BlueprintEvent)

void AKSPerformanceCaptureCamera::GetNextCamera()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPerformanceCaptureCamera.GetNextCamera");

	AKSPerformanceCaptureCamera_GetNextCamera_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPhysicsAssetUtilities.AppendPhysicsAsset
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// class USkeletalMeshComponent** Mesh                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UPhysicsAsset**          PhysicsAsset                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FName*                  CollisionProfileName           (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          SimulatePhysics                (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSPhysicsAssetUtilities::STATIC_AppendPhysicsAsset(class USkeletalMeshComponent** Mesh, class UPhysicsAsset** PhysicsAsset, struct FName* CollisionProfileName, bool* SimulatePhysics)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPhysicsAssetUtilities.AppendPhysicsAsset");

	UKSPhysicsAssetUtilities_AppendPhysicsAsset_Params params;
	params.Mesh = Mesh;
	params.PhysicsAsset = PhysicsAsset;
	params.CollisionProfileName = CollisionProfileName;
	params.SimulatePhysics = SimulatePhysics;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPingBeaconBase.PingRemoved
// (Final, Native, Public)
// Parameters:
// int*                           PingId                         (Parm, ZeroConstructor, IsPlainOldData)
// class AKSPlayerState**         OwningPlayer                   (Parm, ZeroConstructor, IsPlainOldData)

void AKSPingBeaconBase::PingRemoved(int* PingId, class AKSPlayerState** OwningPlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPingBeaconBase.PingRemoved");

	AKSPingBeaconBase_PingRemoved_Params params;
	params.PingId = PingId;
	params.OwningPlayer = OwningPlayer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPingManager.UpdateHoveredPing
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int*                           PingId                         (Parm, ZeroConstructor, IsPlainOldData)
// class AKSPlayerState**         PingingPlayer                  (Parm, ZeroConstructor, IsPlainOldData)

void UKSPingManager::UpdateHoveredPing(int* PingId, class AKSPlayerState** PingingPlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPingManager.UpdateHoveredPing");

	UKSPingManager_UpdateHoveredPing_Params params;
	params.PingId = PingId;
	params.PingingPlayer = PingingPlayer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPingManager.ThrottleDetectionPeriodExpired
// (Final, Native, Private)

void UKSPingManager::ThrottleDetectionPeriodExpired()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPingManager.ThrottleDetectionPeriodExpired");

	UKSPingManager_ThrottleDetectionPeriodExpired_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPingManager.ServerRemovePing
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// int*                           PingId                         (Parm, ZeroConstructor, IsPlainOldData)

void UKSPingManager::ServerRemovePing(int* PingId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPingManager.ServerRemovePing");

	UKSPingManager_ServerRemovePing_Params params;
	params.PingId = PingId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPingManager.ServerPingRequest
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// struct FPingInfo*              PingInfo                       (Parm)

void UKSPingManager::ServerPingRequest(struct FPingInfo* PingInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPingManager.ServerPingRequest");

	UKSPingManager_ServerPingRequest_Params params;
	params.PingInfo = PingInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPingManager.RemovePing
// (Final, Native, Public)
// Parameters:
// int*                           PingId                         (Parm, ZeroConstructor, IsPlainOldData)
// class AKSPlayerState**         PingingPlayer                  (Parm, ZeroConstructor, IsPlainOldData)

void UKSPingManager::RemovePing(int* PingId, class AKSPlayerState** PingingPlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPingManager.RemovePing");

	UKSPingManager_RemovePing_Params params;
	params.PingId = PingId;
	params.PingingPlayer = PingingPlayer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPingManager.OnPingExpired
// (Final, Native, Protected)
// Parameters:
// struct FPingInfo*              ExpiringPing                   (Parm)

void UKSPingManager::OnPingExpired(struct FPingInfo* ExpiringPing)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPingManager.OnPingExpired");

	UKSPingManager_OnPingExpired_Params params;
	params.ExpiringPing = ExpiringPing;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPingManager.HoldTimerExpired
// (Final, Native, Protected)

void UKSPingManager::HoldTimerExpired()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPingManager.HoldTimerExpired");

	UKSPingManager_HoldTimerExpired_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPingManager.GetPingLifetimes
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EPingType*                     PingType                       (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSPingManager::GetPingLifetimes(EPingType* PingType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPingManager.GetPingLifetimes");

	UKSPingManager_GetPingLifetimes_Params params;
	params.PingType = PingType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPingManager.GetPingInfoById
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int*                           PingId                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FPingInfo               OutPingInfo                    (Parm, OutParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSPingManager::GetPingInfoById(int* PingId, struct FPingInfo* OutPingInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPingManager.GetPingInfoById");

	UKSPingManager_GetPingInfoById_Params params;
	params.PingId = PingId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutPingInfo != nullptr)
		*OutPingInfo = params.OutPingInfo;

	return params.ReturnValue;
}


// Function Killstreak.KSPingManager.GetPingIdForDisplayId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int*                           DisplayId                      (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UKSPingManager::GetPingIdForDisplayId(int* DisplayId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPingManager.GetPingIdForDisplayId");

	UKSPingManager_GetPingIdForDisplayId_Params params;
	params.DisplayId = DisplayId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPingManager.GameRoundOver
// (Final, Native, Protected, HasOutParms)
// Parameters:
// class AKSGameState**           GameState                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FRoundResult*           RoundResult                    (ConstParm, Parm, OutParm, ReferenceParm)

void UKSPingManager::GameRoundOver(class AKSGameState** GameState, struct FRoundResult* RoundResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPingManager.GameRoundOver");

	UKSPingManager_GameRoundOver_Params params;
	params.GameState = GameState;
	params.RoundResult = RoundResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPingManager.DoubleClickTimerExpired
// (Final, Native, Protected)

void UKSPingManager::DoubleClickTimerExpired()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPingManager.DoubleClickTimerExpired");

	UKSPingManager_DoubleClickTimerExpired_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPingManager.ClientPingRejected
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// EPingFailedType*               Reason                         (Parm, ZeroConstructor, IsPlainOldData)
// int*                           PingId                         (Parm, ZeroConstructor, IsPlainOldData)

void UKSPingManager::ClientPingRejected(EPingFailedType* Reason, int* PingId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPingManager.ClientPingRejected");

	UKSPingManager_ClientPingRejected_Params params;
	params.Reason = Reason;
	params.PingId = PingId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPingManager.ClearPingsOfType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EPingType*                     PingType                       (Parm, ZeroConstructor, IsPlainOldData)

void UKSPingManager::ClearPingsOfType(EPingType* PingType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPingManager.ClearPingsOfType");

	UKSPingManager_ClearPingsOfType_Params params;
	params.PingType = PingType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPingManager.AttemptRemovePing
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int*                           PingId                         (Parm, ZeroConstructor, IsPlainOldData)
// class AKSPlayerState**         PingingPlayer                  (Parm, ZeroConstructor, IsPlainOldData)

void UKSPingManager::AttemptRemovePing(int* PingId, class AKSPlayerState** PingingPlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPingManager.AttemptRemovePing");

	UKSPingManager_AttemptRemovePing_Params params;
	params.PingId = PingId;
	params.PingingPlayer = PingingPlayer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPingManager.AttemptPing2D
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D*              WorldLocation2D                (Parm, ZeroConstructor, IsPlainOldData)

void UKSPingManager::AttemptPing2D(struct FVector2D* WorldLocation2D)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPingManager.AttemptPing2D");

	UKSPingManager_AttemptPing2D_Params params;
	params.WorldLocation2D = WorldLocation2D;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPingManager.AttemptManualPing
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EPingType*                     PingType                       (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 PingedActor                    (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bRemoveOtherPingsOfType        (Parm, ZeroConstructor, IsPlainOldData)

void UKSPingManager::AttemptManualPing(EPingType* PingType, class AActor** PingedActor, bool* bRemoveOtherPingsOfType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPingManager.AttemptManualPing");

	UKSPingManager_AttemptManualPing_Params params;
	params.PingType = PingType;
	params.PingedActor = PingedActor;
	params.bRemoveOtherPingsOfType = bRemoveOtherPingsOfType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPingManager.AddPing
// (Final, Native, Public, HasOutParms)
// Parameters:
// struct FPingInfo*              PingInfo                       (ConstParm, Parm, OutParm, ReferenceParm)

void UKSPingManager::AddPing(struct FPingInfo* PingInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPingManager.AddPing");

	UKSPingManager_AddPing_Params params;
	params.PingInfo = PingInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerInventoryHelper.RemoveAllItemUpdatedCallbacks
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FScriptDelegate*        Callback                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UKSPlayerInventoryHelper::RemoveAllItemUpdatedCallbacks(struct FScriptDelegate* Callback)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerInventoryHelper.RemoveAllItemUpdatedCallbacks");

	UKSPlayerInventoryHelper_RemoveAllItemUpdatedCallbacks_Params params;
	params.Callback = Callback;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerInventoryHelper.RemoveAllItemTypeUpdatedCallbacks
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FScriptDelegate*        Callback                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UKSPlayerInventoryHelper::RemoveAllItemTypeUpdatedCallbacks(struct FScriptDelegate* Callback)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerInventoryHelper.RemoveAllItemTypeUpdatedCallbacks");

	UKSPlayerInventoryHelper_RemoveAllItemTypeUpdatedCallbacks_Params params;
	params.Callback = Callback;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerInventoryHelper.GetCountByType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int*                           ItemTypeId                     (Parm, ZeroConstructor, IsPlainOldData)
// int*                           ItemSubTypeId                  (Parm, ZeroConstructor, IsPlainOldData)
// class AKSPlayerController**    Player                         (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UKSPlayerInventoryHelper::GetCountByType(int* ItemTypeId, int* ItemSubTypeId, class AKSPlayerController** Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerInventoryHelper.GetCountByType");

	UKSPlayerInventoryHelper_GetCountByType_Params params;
	params.ItemTypeId = ItemTypeId;
	params.ItemSubTypeId = ItemSubTypeId;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerInventoryHelper.GetCount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int64_t*                       ItemId                         (Parm, ZeroConstructor, IsPlainOldData)
// class AKSPlayerController**    Player                         (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UKSPlayerInventoryHelper::GetCount(int64_t* ItemId, class AKSPlayerController** Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerInventoryHelper.GetCount");

	UKSPlayerInventoryHelper_GetCount_Params params;
	params.ItemId = ItemId;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerInventoryHelper.GetAcquiredTime
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// int64_t*                       ItemId                         (Parm, ZeroConstructor, IsPlainOldData)
// class AKSPlayerController**    Player                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FDateTime               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

struct FDateTime UKSPlayerInventoryHelper::GetAcquiredTime(int64_t* ItemId, class AKSPlayerController** Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerInventoryHelper.GetAcquiredTime");

	UKSPlayerInventoryHelper_GetAcquiredTime_Params params;
	params.ItemId = ItemId;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerInventoryHelper.AddItemUpdatedCallback
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FScriptDelegate*        Callback                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// int64_t*                       ItemId                         (Parm, ZeroConstructor, IsPlainOldData)
// class AKSPlayerController**    Player                         (Parm, ZeroConstructor, IsPlainOldData)

void UKSPlayerInventoryHelper::AddItemUpdatedCallback(struct FScriptDelegate* Callback, int64_t* ItemId, class AKSPlayerController** Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerInventoryHelper.AddItemUpdatedCallback");

	UKSPlayerInventoryHelper_AddItemUpdatedCallback_Params params;
	params.Callback = Callback;
	params.ItemId = ItemId;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerInventoryHelper.AddItemTypeUpdatedCallback
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FScriptDelegate*        Callback                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// int*                           ItemTypeId                     (Parm, ZeroConstructor, IsPlainOldData)
// int*                           ItemSubTypeId                  (Parm, ZeroConstructor, IsPlainOldData)
// class AKSPlayerController**    Player                         (Parm, ZeroConstructor, IsPlainOldData)

void UKSPlayerInventoryHelper::AddItemTypeUpdatedCallback(struct FScriptDelegate* Callback, int* ItemTypeId, int* ItemSubTypeId, class AKSPlayerController** Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerInventoryHelper.AddItemTypeUpdatedCallback");

	UKSPlayerInventoryHelper_AddItemTypeUpdatedCallback_Params params;
	params.Callback = Callback;
	params.ItemTypeId = ItemTypeId;
	params.ItemSubTypeId = ItemSubTypeId;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerMod.IsSingleInstanceStack
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSPlayerMod::IsSingleInstanceStack()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod.IsSingleInstanceStack");

	UKSPlayerMod_IsSingleInstanceStack_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerMod.IsPerk
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSPlayerMod::IsPerk()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod.IsPerk");

	UKSPlayerMod_IsPerk_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerMod.IsInstanceReplicated
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSPlayerMod::IsInstanceReplicated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod.IsInstanceReplicated");

	UKSPlayerMod_IsInstanceReplicated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerMod.GetTriggerEvents
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FName>           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FName> UKSPlayerMod::GetTriggerEvents()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod.GetTriggerEvents");

	UKSPlayerMod_GetTriggerEvents_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerMod.GetPerkCategory
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UPerkCategory*           FoundPerkCategory              (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSPlayerMod::GetPerkCategory(class UPerkCategory** FoundPerkCategory)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod.GetPerkCategory");

	UKSPlayerMod_GetPerkCategory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (FoundPerkCategory != nullptr)
		*FoundPerkCategory = params.FoundPerkCategory;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerMod.GetModUnlockTier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UKSPlayerMod::GetModUnlockTier()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod.GetModUnlockTier");

	UKSPlayerMod_GetModUnlockTier_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerMod.GetModType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EPlayerModType                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EPlayerModType UKSPlayerMod::GetModType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod.GetModType");

	UKSPlayerMod_GetModType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerMod.GetModInteraction
// (Final, Native, Public)
// Parameters:
// EModInterferenceType           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EModInterferenceType UKSPlayerMod::GetModInteraction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod.GetModInteraction");

	UKSPlayerMod_GetModInteraction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerMod.GetFunctionalClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)

void UKSPlayerMod::GetFunctionalClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod.GetFunctionalClass");

	UKSPlayerMod_GetFunctionalClass_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerMod.GetEffectCategories
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTagContainer   ReturnValue                    (Parm, OutParm, ReturnParm)

struct FGameplayTagContainer UKSPlayerMod::GetEffectCategories()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod.GetEffectCategories");

	UKSPlayerMod_GetEffectCategories_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerMod_Activated.GetRequiredCharge
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UKSPlayerMod_Activated::GetRequiredCharge()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod_Activated.GetRequiredCharge");

	UKSPlayerMod_Activated_GetRequiredCharge_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerMod_Activated.GetRefundFactor
// (Final, Native, Public, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSPlayerMod_Activated::GetRefundFactor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod_Activated.GetRefundFactor");

	UKSPlayerMod_Activated_GetRefundFactor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerMod_Activated.GetMaximumCharge
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UKSPlayerMod_Activated::GetMaximumCharge()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod_Activated.GetMaximumCharge");

	UKSPlayerMod_Activated_GetMaximumCharge_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerMod_Activated.GetDefaultCharge
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UKSPlayerMod_Activated::GetDefaultCharge()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod_Activated.GetDefaultCharge");

	UKSPlayerMod_Activated_GetDefaultCharge_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerMod_Activated.GetBuffs
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)

void UKSPlayerMod_Activated::GetBuffs()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod_Activated.GetBuffs");

	UKSPlayerMod_Activated_GetBuffs_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerMod_Activated.GetAbilitySetupDuration
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSPlayerMod_Activated::GetAbilitySetupDuration()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod_Activated.GetAbilitySetupDuration");

	UKSPlayerMod_Activated_GetAbilitySetupDuration_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerMod_Activated.GetAbilityRecoveryDuration
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSPlayerMod_Activated::GetAbilityRecoveryDuration()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod_Activated.GetAbilityRecoveryDuration");

	UKSPlayerMod_Activated_GetAbilityRecoveryDuration_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerMod_Activated.GetAbilityEndWarningTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSPlayerMod_Activated::GetAbilityEndWarningTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod_Activated.GetAbilityEndWarningTime");

	UKSPlayerMod_Activated_GetAbilityEndWarningTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerMod_Activated.GetAbilityDuration
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSPlayerMod_Activated::GetAbilityDuration()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod_Activated.GetAbilityDuration");

	UKSPlayerMod_Activated_GetAbilityDuration_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerMod_ActivatedTarget.GetTargetBuffs
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)

void UKSPlayerMod_ActivatedTarget::GetTargetBuffs()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod_ActivatedTarget.GetTargetBuffs");

	UKSPlayerMod_ActivatedTarget_GetTargetBuffs_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerMod_AngleConfig.CheckDistanceAndAngleFromEnemies
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AKSCharacter**           InCharacter                    (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bWithinDistance                (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bWithinAngle                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSPlayerMod_AngleConfig::CheckDistanceAndAngleFromEnemies(class AKSCharacter** InCharacter, bool* bWithinDistance, bool* bWithinAngle)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod_AngleConfig.CheckDistanceAndAngleFromEnemies");

	UKSPlayerMod_AngleConfig_CheckDistanceAndAngleFromEnemies_Params params;
	params.InCharacter = InCharacter;
	params.bWithinDistance = bWithinDistance;
	params.bWithinAngle = bWithinAngle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerMod_AngleConfig.CheckDistanceAndAngle
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector*                start                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                end                            (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                DirectionToCheck               (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bWithinDistance                (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bWithinAngle                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSPlayerMod_AngleConfig::CheckDistanceAndAngle(struct FVector* start, struct FVector* end, struct FVector* DirectionToCheck, bool* bWithinDistance, bool* bWithinAngle)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod_AngleConfig.CheckDistanceAndAngle");

	UKSPlayerMod_AngleConfig_CheckDistanceAndAngle_Params params;
	params.start = start;
	params.end = end;
	params.DirectionToCheck = DirectionToCheck;
	params.bWithinDistance = bWithinDistance;
	params.bWithinAngle = bWithinAngle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerMod_AngleConfig.CheckAngle
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector*                Direction1                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                Direction2                     (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bWithinAngle                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSPlayerMod_AngleConfig::CheckAngle(struct FVector* Direction1, struct FVector* Direction2, bool* bWithinAngle)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod_AngleConfig.CheckAngle");

	UKSPlayerMod_AngleConfig_CheckAngle_Params params;
	params.Direction1 = Direction1;
	params.Direction2 = Direction2;
	params.bWithinAngle = bWithinAngle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerMod_ApplyModOnEvent.RemoveMod
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AKSPlayerState**         ModOwner                       (Parm, ZeroConstructor, IsPlainOldData)

void UKSPlayerMod_ApplyModOnEvent::RemoveMod(class AKSPlayerState** ModOwner)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod_ApplyModOnEvent.RemoveMod");

	UKSPlayerMod_ApplyModOnEvent_RemoveMod_Params params;
	params.ModOwner = ModOwner;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerMod_ApplyModOnEvent.GetModDuration
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSPlayerMod_ApplyModOnEvent::GetModDuration()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod_ApplyModOnEvent.GetModDuration");

	UKSPlayerMod_ApplyModOnEvent_GetModDuration_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerMod_ApplyModOnEvent.ApplyMod
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AKSPlayerState**         ModOwner                       (Parm, ZeroConstructor, IsPlainOldData)

void UKSPlayerMod_ApplyModOnEvent::ApplyMod(class AKSPlayerState** ModOwner)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod_ApplyModOnEvent.ApplyMod");

	UKSPlayerMod_ApplyModOnEvent_ApplyMod_Params params;
	params.ModOwner = ModOwner;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerMod_DamageTaken.GetAffectedDamageCategories
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<EDamageCategory>        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<EDamageCategory> UKSPlayerMod_DamageTaken::GetAffectedDamageCategories()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod_DamageTaken.GetAffectedDamageCategories");

	UKSPlayerMod_DamageTaken_GetAffectedDamageCategories_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerMod_GiveItemOnActivation.GetGivenItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)

void UKSPlayerMod_GiveItemOnActivation::GetGivenItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod_GiveItemOnActivation.GetGivenItem");

	UKSPlayerMod_GiveItemOnActivation_GetGivenItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerMod_GiveItemOnEvent.GiveItem
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class AKSCharacter**           ModOwner                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FScriptDelegate*        GivenToEvent                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UKSPlayerMod_GiveItemOnEvent::GiveItem(class AKSCharacter** ModOwner, struct FScriptDelegate* GivenToEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod_GiveItemOnEvent.GiveItem");

	UKSPlayerMod_GiveItemOnEvent_GiveItem_Params params;
	params.ModOwner = ModOwner;
	params.GivenToEvent = GivenToEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerMod_GiveItemOnEvent.GetItemToGive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)

void UKSPlayerMod_GiveItemOnEvent::GetItemToGive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod_GiveItemOnEvent.GetItemToGive");

	UKSPlayerMod_GiveItemOnEvent_GetItemToGive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerMod_GiveWeaponConfig.GetReclaimCharge
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSPlayerMod_GiveWeaponConfig::GetReclaimCharge()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod_GiveWeaponConfig.GetReclaimCharge");

	UKSPlayerMod_GiveWeaponConfig_GetReclaimCharge_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerMod_GiveWeaponConfig.GetRadius
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSPlayerMod_GiveWeaponConfig::GetRadius()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod_GiveWeaponConfig.GetRadius");

	UKSPlayerMod_GiveWeaponConfig_GetRadius_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerMod_HealOnEvent.GetHealUpTo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSPlayerMod_HealOnEvent::GetHealUpTo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod_HealOnEvent.GetHealUpTo");

	UKSPlayerMod_HealOnEvent_GetHealUpTo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerMod_HealOnEvent.GetHealTickCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UKSPlayerMod_HealOnEvent::GetHealTickCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod_HealOnEvent.GetHealTickCount");

	UKSPlayerMod_HealOnEvent_GetHealTickCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerMod_HealOnEvent.GetHealthPercentage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSPlayerMod_HealOnEvent::GetHealthPercentage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod_HealOnEvent.GetHealthPercentage");

	UKSPlayerMod_HealOnEvent_GetHealthPercentage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerMod_HealOnEvent.GetHealthAmount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSPlayerMod_HealOnEvent::GetHealthAmount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod_HealOnEvent.GetHealthAmount");

	UKSPlayerMod_HealOnEvent_GetHealthAmount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerMod_HealOnEvent.GetHealPeriod
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSPlayerMod_HealOnEvent::GetHealPeriod()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod_HealOnEvent.GetHealPeriod");

	UKSPlayerMod_HealOnEvent_GetHealPeriod_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerMod_HealOnEvent.GetHealDelay
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSPlayerMod_HealOnEvent::GetHealDelay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod_HealOnEvent.GetHealDelay");

	UKSPlayerMod_HealOnEvent_GetHealDelay_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerMod_HealOnEvent.GetHealAsPercentage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSPlayerMod_HealOnEvent::GetHealAsPercentage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod_HealOnEvent.GetHealAsPercentage");

	UKSPlayerMod_HealOnEvent_GetHealAsPercentage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerMod_HealOnEvent.GetFirstTickImmediately
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSPlayerMod_HealOnEvent::GetFirstTickImmediately()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod_HealOnEvent.GetFirstTickImmediately");

	UKSPlayerMod_HealOnEvent_GetFirstTickImmediately_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerMod_HealOnEvent.ApplyOverheal
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AKSCharacter**           CharacterToHeal                (Parm, ZeroConstructor, IsPlainOldData)
// class AKSCharacter**           Healer                         (Parm, ZeroConstructor, IsPlainOldData)

void UKSPlayerMod_HealOnEvent::ApplyOverheal(class AKSCharacter** CharacterToHeal, class AKSCharacter** Healer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod_HealOnEvent.ApplyOverheal");

	UKSPlayerMod_HealOnEvent_ApplyOverheal_Params params;
	params.CharacterToHeal = CharacterToHeal;
	params.Healer = Healer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerMod_HealOnEvent.ApplyHeal
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AKSCharacter**           CharacterToHeal                (Parm, ZeroConstructor, IsPlainOldData)
// class AKSCharacter**           Healer                         (Parm, ZeroConstructor, IsPlainOldData)

void UKSPlayerMod_HealOnEvent::ApplyHeal(class AKSCharacter** CharacterToHeal, class AKSCharacter** Healer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod_HealOnEvent.ApplyHeal");

	UKSPlayerMod_HealOnEvent_ApplyHeal_Params params;
	params.CharacterToHeal = CharacterToHeal;
	params.Healer = Healer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerMod_PickupRange.GetPickupRadius
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSPlayerMod_PickupRange::GetPickupRadius()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod_PickupRange.GetPickupRadius");

	UKSPlayerMod_PickupRange_GetPickupRadius_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerModInst_WeaponAttachment.WeaponAddedToOwnerInventory
// (Native, Protected)
// Parameters:
// class AKSWeapon**              NewWeapon                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FGiveItemParameters*    InGiveItemParameters           (Parm)

void UKSPlayerModInst_WeaponAttachment::WeaponAddedToOwnerInventory(class AKSWeapon** NewWeapon, struct FGiveItemParameters* InGiveItemParameters)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerModInst_WeaponAttachment.WeaponAddedToOwnerInventory");

	UKSPlayerModInst_WeaponAttachment_WeaponAddedToOwnerInventory_Params params;
	params.NewWeapon = NewWeapon;
	params.InGiveItemParameters = InGiveItemParameters;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerModInst_WeaponAttachment.OnAttachmentGivenSuccess
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UKSItem**                ItemToGive                     (Parm, ZeroConstructor, IsPlainOldData)
// class UKSWeaponAttachmentInstance** GivenAttachment                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FGiveItemParameters*    InGiveItemParameters           (Parm)

void UKSPlayerModInst_WeaponAttachment::OnAttachmentGivenSuccess(class UKSItem** ItemToGive, class UKSWeaponAttachmentInstance** GivenAttachment, struct FGiveItemParameters* InGiveItemParameters)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerModInst_WeaponAttachment.OnAttachmentGivenSuccess");

	UKSPlayerModInst_WeaponAttachment_OnAttachmentGivenSuccess_Params params;
	params.ItemToGive = ItemToGive;
	params.GivenAttachment = GivenAttachment;
	params.InGiveItemParameters = InGiveItemParameters;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerModInst_WeaponAttachment.OnAttachmentGiven
// (Native, Protected)
// Parameters:
// class UKSItem**                ItemToGive                     (Parm, ZeroConstructor, IsPlainOldData)
// class UObject**                GivenObject                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FGiveItemParameters*    InGiveItemParameters           (Parm)
// bool*                          bSuccess                       (Parm, ZeroConstructor, IsPlainOldData)

void UKSPlayerModInst_WeaponAttachment::OnAttachmentGiven(class UKSItem** ItemToGive, class UObject** GivenObject, struct FGiveItemParameters* InGiveItemParameters, bool* bSuccess)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerModInst_WeaponAttachment.OnAttachmentGiven");

	UKSPlayerModInst_WeaponAttachment_OnAttachmentGiven_Params params;
	params.ItemToGive = ItemToGive;
	params.GivenObject = GivenObject;
	params.InGiveItemParameters = InGiveItemParameters;
	params.bSuccess = bSuccess;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWidgetInfoActor.OnHUDSetup
// (Final, Native, Protected)

void AKSWidgetInfoActor::OnHUDSetup()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWidgetInfoActor.OnHUDSetup");

	AKSWidgetInfoActor_OnHUDSetup_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerShop.ZoneLeftByPlayer
// (Final, Native, Protected)
// Parameters:
// class AKSPlayerState**         InPlayerState                  (Parm, ZeroConstructor, IsPlainOldData)

void AKSPlayerShop::ZoneLeftByPlayer(class AKSPlayerState** InPlayerState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerShop.ZoneLeftByPlayer");

	AKSPlayerShop_ZoneLeftByPlayer_Params params;
	params.InPlayerState = InPlayerState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerShop.ZoneEnteredByPlayer
// (Final, Native, Protected)
// Parameters:
// class AKSPlayerState**         InPlayerState                  (Parm, ZeroConstructor, IsPlainOldData)

void AKSPlayerShop::ZoneEnteredByPlayer(class AKSPlayerState** InPlayerState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerShop.ZoneEnteredByPlayer");

	AKSPlayerShop_ZoneEnteredByPlayer_Params params;
	params.InPlayerState = InPlayerState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerShop.TryToSetItemActive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EShopItemType*                 ShopItemType                   (Parm, ZeroConstructor, IsPlainOldData)

void AKSPlayerShop::TryToSetItemActive(EShopItemType* ShopItemType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerShop.TryToSetItemActive");

	AKSPlayerShop_TryToSetItemActive_Params params;
	params.ShopItemType = ShopItemType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerShop.TryToPurchaseItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EShopItemType*                 ShopItemType                   (Parm, ZeroConstructor, IsPlainOldData)

void AKSPlayerShop::TryToPurchaseItem(EShopItemType* ShopItemType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerShop.TryToPurchaseItem");

	AKSPlayerShop_TryToPurchaseItem_Params params;
	params.ShopItemType = ShopItemType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerShop.ToggleShop
// (Final, Native, Protected)

void AKSPlayerShop::ToggleShop()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerShop.ToggleShop");

	AKSPlayerShop_ToggleShop_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerShop.ServerSetItemActive
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// struct FPlayerShopTransaction* InTransactionInfo              (Parm)

void AKSPlayerShop::ServerSetItemActive(struct FPlayerShopTransaction* InTransactionInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerShop.ServerSetItemActive");

	AKSPlayerShop_ServerSetItemActive_Params params;
	params.InTransactionInfo = InTransactionInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerShop.ServerAttemptPurchase
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// struct FPlayerShopTransaction* InTransactionInfo              (Parm)

void AKSPlayerShop::ServerAttemptPurchase(struct FPlayerShopTransaction* InTransactionInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerShop.ServerAttemptPurchase");

	AKSPlayerShop_ServerAttemptPurchase_Params params;
	params.InTransactionInfo = InTransactionInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerShop.OpenShop
// (Final, Native, Protected, BlueprintCallable)

void AKSPlayerShop::OpenShop()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerShop.OpenShop");

	AKSPlayerShop_OpenShop_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerShop.OnRep_PlayerState
// (Final, Native, Protected)

void AKSPlayerShop::OnRep_PlayerState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerShop.OnRep_PlayerState");

	AKSPlayerShop_OnRep_PlayerState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerShop.OnRep_bAvailable
// (Final, Native, Protected)

void AKSPlayerShop::OnRep_bAvailable()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerShop.OnRep_bAvailable");

	AKSPlayerShop_OnRep_bAvailable_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerShop.OnPlayerScoreChanged
// (Final, Native, Protected)
// Parameters:
// struct FKSScoreChangeEvent*    ScoreEvent                     (Parm)

void AKSPlayerShop::OnPlayerScoreChanged(struct FKSScoreChangeEvent* ScoreEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerShop.OnPlayerScoreChanged");

	AKSPlayerShop_OnPlayerScoreChanged_Params params;
	params.ScoreEvent = ScoreEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerShop.OnPlayerJobChanged
// (Final, Native, Protected)

void AKSPlayerShop::OnPlayerJobChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerShop.OnPlayerJobChanged");

	AKSPlayerShop_OnPlayerJobChanged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerShop.OnOwnerDestroyed
// (Final, Native, Protected)
// Parameters:
// class AActor**                 DestroyedActor                 (Parm, ZeroConstructor, IsPlainOldData)

void AKSPlayerShop::OnOwnerDestroyed(class AActor** DestroyedActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerShop.OnOwnerDestroyed");

	AKSPlayerShop_OnOwnerDestroyed_Params params;
	params.DestroyedActor = DestroyedActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerShop.NotifyShopItemPurchased
// (Final, Native, Public, HasOutParms)
// Parameters:
// struct FShopItem*              ShopItem                       (ConstParm, Parm, OutParm, ReferenceParm)

void AKSPlayerShop::NotifyShopItemPurchased(struct FShopItem* ShopItem)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerShop.NotifyShopItemPurchased");

	AKSPlayerShop_NotifyShopItemPurchased_Params params;
	params.ShopItem = ShopItem;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerShop.NotifyShopItemChanged
// (Final, Native, Public, HasOutParms)
// Parameters:
// struct FShopItem*              ShopItem                       (ConstParm, Parm, OutParm, ReferenceParm)

void AKSPlayerShop::NotifyShopItemChanged(struct FShopItem* ShopItem)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerShop.NotifyShopItemChanged");

	AKSPlayerShop_NotifyShopItemChanged_Params params;
	params.ShopItem = ShopItem;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerShop.InitializeShopItems
// (Final, Native, Protected)

void AKSPlayerShop::InitializeShopItems()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerShop.InitializeShopItems");

	AKSPlayerShop_InitializeShopItems_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerShop.GetShopItemByType
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EShopItemType*                 ShopItemType                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FShopItem               Item                           (Parm, OutParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSPlayerShop::GetShopItemByType(EShopItemType* ShopItemType, struct FShopItem* Item)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerShop.GetShopItemByType");

	AKSPlayerShop_GetShopItemByType_Params params;
	params.ShopItemType = ShopItemType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Item != nullptr)
		*Item = params.Item;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerShop.GetShopAvailability
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSPlayerShop::GetShopAvailability()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerShop.GetShopAvailability");

	AKSPlayerShop_GetShopAvailability_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerShop.GetPriceOfItem
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class UKSItem**                InItem                         (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AKSPlayerShop::GetPriceOfItem(class UKSItem** InItem)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerShop.GetPriceOfItem");

	AKSPlayerShop_GetPriceOfItem_Params params;
	params.InItem = InItem;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerShop.CloseShop
// (Final, Native, Protected, BlueprintCallable)

void AKSPlayerShop::CloseShop()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerShop.CloseShop");

	AKSPlayerShop_CloseShop_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerShop.ClientPurchaseAcknowledge
// (Net, Native, Event, Protected, NetClient)
// Parameters:
// struct FPlayerShopTransaction* InTransactionInfo              (Parm)
// bool*                          bSuccess                       (Parm, ZeroConstructor, IsPlainOldData)

void AKSPlayerShop::ClientPurchaseAcknowledge(struct FPlayerShopTransaction* InTransactionInfo, bool* bSuccess)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerShop.ClientPurchaseAcknowledge");

	AKSPlayerShop_ClientPurchaseAcknowledge_Params params;
	params.InTransactionInfo = InTransactionInfo;
	params.bSuccess = bSuccess;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerShop.CanPurchaseItemNow
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EShopItemType*                 ShopItemType                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           bOutAvailable                  (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           bCanAfford                     (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSPlayerShop::CanPurchaseItemNow(EShopItemType* ShopItemType, bool* bOutAvailable, bool* bCanAfford)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerShop.CanPurchaseItemNow");

	AKSPlayerShop_CanPurchaseItemNow_Params params;
	params.ShopItemType = ShopItemType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (bOutAvailable != nullptr)
		*bOutAvailable = params.bOutAvailable;
	if (bCanAfford != nullptr)
		*bCanAfford = params.bCanAfford;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerShopZone.ZoneLeftByPlayer
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class AKSPlayerState**         PlayerState                    (Parm, ZeroConstructor, IsPlainOldData)

void AKSPlayerShopZone::ZoneLeftByPlayer(class AKSPlayerState** PlayerState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerShopZone.ZoneLeftByPlayer");

	AKSPlayerShopZone_ZoneLeftByPlayer_Params params;
	params.PlayerState = PlayerState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerShopZone.ZoneEnteredByPlayer
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class AKSPlayerState**         PlayerState                    (Parm, ZeroConstructor, IsPlainOldData)

void AKSPlayerShopZone::ZoneEnteredByPlayer(class AKSPlayerState** PlayerState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerShopZone.ZoneEnteredByPlayer");

	AKSPlayerShopZone_ZoneEnteredByPlayer_Params params;
	params.PlayerState = PlayerState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerShotListener.OnKSGameStateDestroyed
// (Final, Native, Private)
// Parameters:
// class AActor**                 Actor                          (Parm, ZeroConstructor, IsPlainOldData)

void UKSPlayerShotListener::OnKSGameStateDestroyed(class AActor** Actor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerShotListener.OnKSGameStateDestroyed");

	UKSPlayerShotListener_OnKSGameStateDestroyed_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerShotListener.ClientRecieveShotInfo
// (Net, Native, Event, Public, NetClient)
// Parameters:
// struct FKSClientShotInfo*      ShotInfo                       (Parm)

void UKSPlayerShotListener::ClientRecieveShotInfo(struct FKSClientShotInfo* ShotInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerShotListener.ClientRecieveShotInfo");

	UKSPlayerShotListener_ClientRecieveShotInfo_Params params;
	params.ShotInfo = ShotInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerShotListener.Authority_ProcessShotInfo
// (Final, Native, Public)
// Parameters:
// struct FKSGlobalShotInfo*      ShotInfo                       (Parm)

void UKSPlayerShotListener::Authority_ProcessShotInfo(struct FKSGlobalShotInfo* ShotInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerShotListener.Authority_ProcessShotInfo");

	UKSPlayerShotListener_Authority_ProcessShotInfo_Params params;
	params.ShotInfo = ShotInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerStart.SetSideNum
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int*                           InSideNum                      (Parm, ZeroConstructor, IsPlainOldData)

void AKSPlayerStart::SetSideNum(int* InSideNum)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerStart.SetSideNum");

	AKSPlayerStart_SetSideNum_Params params;
	params.InSideNum = InSideNum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerStart.Init
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AKSCharacter**           Character                      (Parm, ZeroConstructor, IsPlainOldData)

void AKSPlayerStart::Init(class AKSCharacter** Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerStart.Init");

	AKSPlayerStart_Init_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerStart.GetSideNum
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AKSPlayerStart::GetSideNum()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerStart.GetSideNum");

	AKSPlayerStart_GetSideNum_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerStart.CharacterLoadoutRestored
// (Final, Native, Protected)
// Parameters:
// class AKSCharacter**           Character                      (Parm, ZeroConstructor, IsPlainOldData)

void AKSPlayerStart::CharacterLoadoutRestored(class AKSCharacter** Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerStart.CharacterLoadoutRestored");

	AKSPlayerStart_CharacterLoadoutRestored_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.TryToBroadCastUIRelevantInfoHasChanged
// (Final, Native, Public)

void AKSPlayerState::TryToBroadCastUIRelevantInfoHasChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.TryToBroadCastUIRelevantInfoHasChanged");

	AKSPlayerState_TryToBroadCastUIRelevantInfoHasChanged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.SpendCash
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int*                           cost                           (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSPlayerState::SpendCash(int* cost)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.SpendCash");

	AKSPlayerState_SpendCash_Params params;
	params.cost = cost;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerState.SpawnedDropDestroyed
// (Final, Native, Private)
// Parameters:
// class AActor**                 Drop                           (Parm, ZeroConstructor, IsPlainOldData)

void AKSPlayerState::SpawnedDropDestroyed(class AActor** Drop)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.SpawnedDropDestroyed");

	AKSPlayerState_SpawnedDropDestroyed_Params params;
	params.Drop = Drop;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.SetMoney
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int*                           NewAmount                      (Parm, ZeroConstructor, IsPlainOldData)

void AKSPlayerState::SetMoney(int* NewAmount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.SetMoney");

	AKSPlayerState_SetMoney_Params params;
	params.NewAmount = NewAmount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.SelectActiveMod
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UKSPlayerMod**           NewMod                         (Parm, ZeroConstructor, IsPlainOldData)

void AKSPlayerState::SelectActiveMod(class UKSPlayerMod** NewMod)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.SelectActiveMod");

	AKSPlayerState_SelectActiveMod_Params params;
	params.NewMod = NewMod;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.RespawnTimerTick
// (Final, Native, Protected)
// Parameters:
// float*                         Seconds                        (Parm, ZeroConstructor, IsPlainOldData)

void AKSPlayerState::RespawnTimerTick(float* Seconds)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.RespawnTimerTick");

	AKSPlayerState_RespawnTimerTick_Params params;
	params.Seconds = Seconds;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.RespawnTimerComplete
// (Final, Native, Protected)

void AKSPlayerState::RespawnTimerComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.RespawnTimerComplete");

	AKSPlayerState_RespawnTimerComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.RespawnTimerActive
// (Final, Native, Protected)
// Parameters:
// bool*                          bActive                        (Parm, ZeroConstructor, IsPlainOldData)

void AKSPlayerState::RespawnTimerActive(bool* bActive)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.RespawnTimerActive");

	AKSPlayerState_RespawnTimerActive_Params params;
	params.bActive = bActive;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.ResetElimination
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void AKSPlayerState::ResetElimination()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.ResetElimination");

	AKSPlayerState_ResetElimination_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.RemoveMod
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UKSPlayerMod**           Mod                            (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          RemoveAll                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSPlayerState::RemoveMod(class UKSPlayerMod** Mod, bool* RemoveAll)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.RemoveMod");

	AKSPlayerState_RemoveMod_Params params;
	params.Mod = Mod;
	params.RemoveAll = RemoveAll;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerState.OnTeamUpdated
// (Native, Protected)

void AKSPlayerState::OnTeamUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.OnTeamUpdated");

	AKSPlayerState_OnTeamUpdated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.OnReverseFriendlyFireEnabled
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AKSPlayerState::OnReverseFriendlyFireEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.OnReverseFriendlyFireEnabled");

	AKSPlayerState_OnReverseFriendlyFireEnabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.OnRep_TotalCashEarned
// (Final, Native, Protected)

void AKSPlayerState::OnRep_TotalCashEarned()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.OnRep_TotalCashEarned");

	AKSPlayerState_OnRep_TotalCashEarned_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.OnRep_Specialties
// (Final, Native, Private)

void AKSPlayerState::OnRep_Specialties()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.OnRep_Specialties");

	AKSPlayerState_OnRep_Specialties_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.OnRep_RespawnTimer
// (Final, Native, Protected)

void AKSPlayerState::OnRep_RespawnTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.OnRep_RespawnTimer");

	AKSPlayerState_OnRep_RespawnTimer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.OnRep_PlayerType
// (Native, Protected)

void AKSPlayerState::OnRep_PlayerType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.OnRep_PlayerType");

	AKSPlayerState_OnRep_PlayerType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.OnRep_Money
// (Final, Native, Protected)

void AKSPlayerState::OnRep_Money()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.OnRep_Money");

	AKSPlayerState_OnRep_Money_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.OnRep_MctsNetId
// (Final, Native, Private)

void AKSPlayerState::OnRep_MctsNetId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.OnRep_MctsNetId");

	AKSPlayerState_OnRep_MctsNetId_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.OnRep_LoadoutClass
// (Final, Native, Private)

void AKSPlayerState::OnRep_LoadoutClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.OnRep_LoadoutClass");

	AKSPlayerState_OnRep_LoadoutClass_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.OnRep_JobItem
// (Final, Native, Protected)

void AKSPlayerState::OnRep_JobItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.OnRep_JobItem");

	AKSPlayerState_OnRep_JobItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.OnRep_Gender
// (Final, Native, Private)

void AKSPlayerState::OnRep_Gender()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.OnRep_Gender");

	AKSPlayerState_OnRep_Gender_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.OnRep_Eliminated
// (Native, Protected)

void AKSPlayerState::OnRep_Eliminated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.OnRep_Eliminated");

	AKSPlayerState_OnRep_Eliminated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.OnRep_DownedTimer
// (Final, Native, Protected)

void AKSPlayerState::OnRep_DownedTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.OnRep_DownedTimer");

	AKSPlayerState_OnRep_DownedTimer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.OnRep_Downed
// (Native, Protected)

void AKSPlayerState::OnRep_Downed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.OnRep_Downed");

	AKSPlayerState_OnRep_Downed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.OnRep_Cash
// (Final, Native, Protected)

void AKSPlayerState::OnRep_Cash()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.OnRep_Cash");

	AKSPlayerState_OnRep_Cash_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.OnDeathDrop
// (Final, Native, Public)
// Parameters:
// class UKSItem**                InItem                         (Parm, ZeroConstructor, IsPlainOldData)
// class AKSItemDrop**            InDrop                         (Parm, ZeroConstructor, IsPlainOldData)

void AKSPlayerState::OnDeathDrop(class UKSItem** InItem, class AKSItemDrop** InDrop)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.OnDeathDrop");

	AKSPlayerState_OnDeathDrop_Params params;
	params.InItem = InItem;
	params.InDrop = InDrop;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.NotifyScoreChange
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FKSScoreChangeEvent*    Event                          (Parm)

void AKSPlayerState::NotifyScoreChange(struct FKSScoreChangeEvent* Event)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.NotifyScoreChange");

	AKSPlayerState_NotifyScoreChange_Params params;
	params.Event = Event;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.NotifyCashChange
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FKSScoreChangeEvent*    Event                          (Parm)

void AKSPlayerState::NotifyCashChange(struct FKSScoreChangeEvent* Event)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.NotifyCashChange");

	AKSPlayerState_NotifyCashChange_Params params;
	params.Event = Event;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.IsWaitingForRespawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSPlayerState::IsWaitingForRespawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.IsWaitingForRespawn");

	AKSPlayerState_IsWaitingForRespawn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerState.IsUIRelevant
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSPlayerState::IsUIRelevant()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.IsUIRelevant");

	AKSPlayerState_IsUIRelevant_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerState.IsReverseFriendlyFireEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSPlayerState::IsReverseFriendlyFireEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.IsReverseFriendlyFireEnabled");

	AKSPlayerState_IsReverseFriendlyFireEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerState.IsRespawning
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSPlayerState::IsRespawning()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.IsRespawning");

	AKSPlayerState_IsRespawning_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerState.IsPremiumBoosted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSPlayerState::IsPremiumBoosted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.IsPremiumBoosted");

	AKSPlayerState_IsPremiumBoosted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerState.IsPlayer
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSPlayerState::IsPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.IsPlayer");

	AKSPlayerState_IsPlayer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerState.IsInPlay
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSPlayerState::IsInPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.IsInPlay");

	AKSPlayerState_IsInPlay_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerState.IsInParty
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSPlayerState::IsInParty()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.IsInParty");

	AKSPlayerState_IsInParty_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerState.IsEliminated
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSPlayerState::IsEliminated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.IsEliminated");

	AKSPlayerState_IsEliminated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerState.IsDowned
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSPlayerState::IsDowned()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.IsDowned");

	AKSPlayerState_IsDowned_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerState.HasModAny
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UKSPlayerMod*>*   TestPlayerMods                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSPlayerState::HasModAny(TArray<class UKSPlayerMod*>* TestPlayerMods)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.HasModAny");

	AKSPlayerState_HasModAny_Params params;
	params.TestPlayerMods = TestPlayerMods;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerState.HasMod
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UKSPlayerMod**           TestPlayerMod                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSPlayerState::HasMod(class UKSPlayerMod** TestPlayerMod)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.HasMod");

	AKSPlayerState_HasMod_Params params;
	params.TestPlayerMod = TestPlayerMod;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerState.HasHideTarget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSPlayerState::HasHideTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.HasHideTarget");

	AKSPlayerState_HasHideTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerState.GiveModInstance
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UKSPlayerMod**           Mod                            (Parm, ZeroConstructor, IsPlainOldData)
// class AKSPlayerState**         ModInstigator                  (Parm, ZeroConstructor, IsPlainOldData)
// class UKSPlayerModInstance*    Instance                       (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData)
// bool*                          Unique                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSPlayerState::GiveModInstance(class UKSPlayerMod** Mod, class AKSPlayerState** ModInstigator, bool* Unique, class UKSPlayerModInstance** Instance)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GiveModInstance");

	AKSPlayerState_GiveModInstance_Params params;
	params.Mod = Mod;
	params.ModInstigator = ModInstigator;
	params.Unique = Unique;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Instance != nullptr)
		*Instance = params.Instance;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerState.GiveMod
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UKSPlayerMod**           Mod                            (Parm, ZeroConstructor, IsPlainOldData)
// class AKSPlayerState**         ModInstigator                  (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          Unique                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSPlayerState::GiveMod(class UKSPlayerMod** Mod, class AKSPlayerState** ModInstigator, bool* Unique)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GiveMod");

	AKSPlayerState_GiveMod_Params params;
	params.Mod = Mod;
	params.ModInstigator = ModInstigator;
	params.Unique = Unique;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerState.GetTimeUntilRespawnAllowed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSPlayerState::GetTimeUntilRespawnAllowed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GetTimeUntilRespawnAllowed");

	AKSPlayerState_GetTimeUntilRespawnAllowed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerState.GetSpecialties
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UKSSpecialty*>    OutSpecialties                 (Parm, OutParm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSPlayerState::GetSpecialties(TArray<class UKSSpecialty*>* OutSpecialties)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GetSpecialties");

	AKSPlayerState_GetSpecialties_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutSpecialties != nullptr)
		*OutSpecialties = params.OutSpecialties;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerState.GetScore
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AKSPlayerState::GetScore()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GetScore");

	AKSPlayerState_GetScore_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerState.GetRevives
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AKSPlayerState::GetRevives()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GetRevives");

	AKSPlayerState_GetRevives_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerState.GetRemainingRespawnTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSPlayerState::GetRemainingRespawnTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GetRemainingRespawnTime");

	AKSPlayerState_GetRemainingRespawnTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerState.GetPlayerInfo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APUMG_HUD**              HUD                            (Parm, ZeroConstructor, IsPlainOldData)
// class UPUMG_PlayerInfo*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UPUMG_PlayerInfo* AKSPlayerState::GetPlayerInfo(class APUMG_HUD** HUD)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GetPlayerInfo");

	AKSPlayerState_GetPlayerInfo_Params params;
	params.HUD = HUD;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerState.GetPlayerId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AKSPlayerState::GetPlayerId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GetPlayerId");

	AKSPlayerState_GetPlayerId_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerState.GetPartySize
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AKSPlayerState::GetPartySize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GetPartySize");

	AKSPlayerState_GetPartySize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerState.GetModTierProgress
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            Current                        (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// int                            Target                         (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void AKSPlayerState::GetModTierProgress(int* Current, int* Target)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GetModTierProgress");

	AKSPlayerState_GetModTierProgress_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Current != nullptr)
		*Current = params.Current;
	if (Target != nullptr)
		*Target = params.Target;
}


// Function Killstreak.KSPlayerState.GetModOptionsOfTier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int*                           Tier                           (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UKSPlayerMod*>    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UKSPlayerMod*> AKSPlayerState::GetModOptionsOfTier(int* Tier)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GetModOptionsOfTier");

	AKSPlayerState_GetModOptionsOfTier_Params params;
	params.Tier = Tier;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerState.GetModInstances
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UKSPlayerModInstance*> OutMods                        (Parm, OutParm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSPlayerState::GetModInstances(TArray<class UKSPlayerModInstance*>* OutMods)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GetModInstances");

	AKSPlayerState_GetModInstances_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutMods != nullptr)
		*OutMods = params.OutMods;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerState.GetMctsPlayerId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int64_t                        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int64_t AKSPlayerState::GetMctsPlayerId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GetMctsPlayerId");

	AKSPlayerState_GetMctsPlayerId_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerState.GetLoadoutClass
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UKSLoadoutClass*         OutLoadoutClass                (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSPlayerState::GetLoadoutClass(class UKSLoadoutClass** OutLoadoutClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GetLoadoutClass");

	AKSPlayerState_GetLoadoutClass_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutLoadoutClass != nullptr)
		*OutLoadoutClass = params.OutLoadoutClass;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerState.GetKills
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AKSPlayerState::GetKills()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GetKills");

	AKSPlayerState_GetKills_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerState.GetJob
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UKSJobItem*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UKSJobItem* AKSPlayerState::GetJob()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GetJob");

	AKSPlayerState_GetJob_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerState.GetItemsDroppedOnDeath
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class AKSItemDrop*>     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class AKSItemDrop*> AKSPlayerState::GetItemsDroppedOnDeath()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GetItemsDroppedOnDeath");

	AKSPlayerState_GetItemsDroppedOnDeath_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerState.GetHacks
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AKSPlayerState::GetHacks()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GetHacks");

	AKSPlayerState_GetHacks_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerState.GetEliminations
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AKSPlayerState::GetEliminations()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GetEliminations");

	AKSPlayerState_GetEliminations_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerState.GetEliminatedState
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EEliminationState              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EEliminationState AKSPlayerState::GetEliminatedState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GetEliminatedState");

	AKSPlayerState_GetEliminatedState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerState.GetDowns
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AKSPlayerState::GetDowns()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GetDowns");

	AKSPlayerState_GetDowns_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerState.GetDehacks
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AKSPlayerState::GetDehacks()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GetDehacks");

	AKSPlayerState_GetDehacks_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerState.GetDeaths
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AKSPlayerState::GetDeaths()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GetDeaths");

	AKSPlayerState_GetDeaths_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerState.GetCurrentTimePlayed
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSPlayerState::GetCurrentTimePlayed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GetCurrentTimePlayed");

	AKSPlayerState_GetCurrentTimePlayed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerState.GetCurrentModTier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AKSPlayerState::GetCurrentModTier()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GetCurrentModTier");

	AKSPlayerState_GetCurrentModTier_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerState.GetCurrentCash
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AKSPlayerState::GetCurrentCash()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GetCurrentCash");

	AKSPlayerState_GetCurrentCash_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerState.GetCharacterOwner
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AKSCharacterBase*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AKSCharacterBase* AKSPlayerState::GetCharacterOwner()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GetCharacterOwner");

	AKSPlayerState_GetCharacterOwner_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerState.GetBestCharacterOwner
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AKSCharacterBase*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AKSCharacterBase* AKSPlayerState::GetBestCharacterOwner()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GetBestCharacterOwner");

	AKSPlayerState_GetBestCharacterOwner_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerState.GetBackupCharacterOwner
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AKSCharacterBase*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AKSCharacterBase* AKSPlayerState::GetBackupCharacterOwner()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GetBackupCharacterOwner");

	AKSPlayerState_GetBackupCharacterOwner_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerState.GetAssists
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AKSPlayerState::GetAssists()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GetAssists");

	AKSPlayerState_GetAssists_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerState.GetActiveMods
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UKSPlayerMod*>    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class UKSPlayerMod*> AKSPlayerState::GetActiveMods()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GetActiveMods");

	AKSPlayerState_GetActiveMods_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerState.GetActivatableMods
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UKSModInst_Activated*> OutMods                        (Parm, OutParm, ZeroConstructor)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSPlayerState::GetActivatableMods(TArray<class UKSModInst_Activated*>* OutMods)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GetActivatableMods");

	AKSPlayerState_GetActivatableMods_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutMods != nullptr)
		*OutMods = params.OutMods;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerState.EnterPlay
// (Final, Native, Public)
// Parameters:
// bool*                          bSkipResetEliminatedOrDownedTest (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bSpendTicket                   (Parm, ZeroConstructor, IsPlainOldData)

void AKSPlayerState::EnterPlay(bool* bSkipResetEliminatedOrDownedTest, bool* bSpendTicket)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.EnterPlay");

	AKSPlayerState_EnterPlay_Params params;
	params.bSkipResetEliminatedOrDownedTest = bSkipResetEliminatedOrDownedTest;
	params.bSpendTicket = bSpendTicket;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.EliminatePlayer
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void AKSPlayerState::EliminatePlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.EliminatePlayer");

	AKSPlayerState_EliminatePlayer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.EarnCash
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int*                           Earnings                       (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bShareWithTeam                 (Parm, ZeroConstructor, IsPlainOldData)
// struct FText*                  Reason                         (Parm)

void AKSPlayerState::EarnCash(int* Earnings, bool* bShareWithTeam, struct FText* Reason)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.EarnCash");

	AKSPlayerState_EarnCash_Params params;
	params.Earnings = Earnings;
	params.bShareWithTeam = bShareWithTeam;
	params.Reason = Reason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.DownedTimerTick
// (Final, Native, Protected)
// Parameters:
// float*                         Seconds                        (Parm, ZeroConstructor, IsPlainOldData)

void AKSPlayerState::DownedTimerTick(float* Seconds)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.DownedTimerTick");

	AKSPlayerState_DownedTimerTick_Params params;
	params.Seconds = Seconds;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.DownedTimerComplete
// (Final, Native, Protected)

void AKSPlayerState::DownedTimerComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.DownedTimerComplete");

	AKSPlayerState_DownedTimerComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.DownedTimerActive
// (Final, Native, Protected)
// Parameters:
// bool*                          bActive                        (Parm, ZeroConstructor, IsPlainOldData)

void AKSPlayerState::DownedTimerActive(bool* bActive)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.DownedTimerActive");

	AKSPlayerState_DownedTimerActive_Params params;
	params.bActive = bActive;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.ClientNotifyFriendlyFireDamageApplied
// (Net, Native, Event, Protected, NetClient)
// Parameters:
// float*                         Amount                         (Parm, ZeroConstructor, IsPlainOldData)

void AKSPlayerState::ClientNotifyFriendlyFireDamageApplied(float* Amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.ClientNotifyFriendlyFireDamageApplied");

	AKSPlayerState_ClientNotifyFriendlyFireDamageApplied_Params params;
	params.Amount = Amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.ClientNotifyExceededReverseFriendlyFireThreshold
// (Net, NetReliable, Native, Event, Protected, NetClient)

void AKSPlayerState::ClientNotifyExceededReverseFriendlyFireThreshold()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.ClientNotifyExceededReverseFriendlyFireThreshold");

	AKSPlayerState_ClientNotifyExceededReverseFriendlyFireThreshold_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.ChangeMoney
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int*                           Delta                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FText*                  Reason                         (Parm)
// bool*                          bBonus                         (Parm, ZeroConstructor, IsPlainOldData)

void AKSPlayerState::ChangeMoney(int* Delta, struct FText* Reason, bool* bBonus)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.ChangeMoney");

	AKSPlayerState_ChangeMoney_Params params;
	params.Delta = Delta;
	params.Reason = Reason;
	params.bBonus = bBonus;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.AnyActivatableModsActive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSPlayerState::AnyActivatableModsActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.AnyActivatableModsActive");

	AKSPlayerState_AnyActivatableModsActive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerState.AddScore
// (Native, Public, BlueprintCallable)
// Parameters:
// int*                           InScore                        (Parm, ZeroConstructor, IsPlainOldData)

void AKSPlayerState::AddScore(int* InScore)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.AddScore");

	AKSPlayerState_AddScore_Params params;
	params.InScore = InScore;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.AddRevive
// (Native, Public, BlueprintCallable)
// Parameters:
// int*                           Count                          (Parm, ZeroConstructor, IsPlainOldData)

void AKSPlayerState::AddRevive(int* Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.AddRevive");

	AKSPlayerState_AddRevive_Params params;
	params.Count = Count;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.AddPerSecondCharge
// (Final, Native, Protected)

void AKSPlayerState::AddPerSecondCharge()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.AddPerSecondCharge");

	AKSPlayerState_AddPerSecondCharge_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.AddKill
// (Native, Public, BlueprintCallable)
// Parameters:
// int*                           Count                          (Parm, ZeroConstructor, IsPlainOldData)

void AKSPlayerState::AddKill(int* Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.AddKill");

	AKSPlayerState_AddKill_Params params;
	params.Count = Count;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.AddHack
// (Native, Public, BlueprintCallable)
// Parameters:
// int*                           Count                          (Parm, ZeroConstructor, IsPlainOldData)

void AKSPlayerState::AddHack(int* Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.AddHack");

	AKSPlayerState_AddHack_Params params;
	params.Count = Count;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.AddElimination
// (Native, Public, BlueprintCallable)
// Parameters:
// int*                           Count                          (Parm, ZeroConstructor, IsPlainOldData)

void AKSPlayerState::AddElimination(int* Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.AddElimination");

	AKSPlayerState_AddElimination_Params params;
	params.Count = Count;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.AddDown
// (Native, Public, BlueprintCallable)
// Parameters:
// int*                           Count                          (Parm, ZeroConstructor, IsPlainOldData)

void AKSPlayerState::AddDown(int* Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.AddDown");

	AKSPlayerState_AddDown_Params params;
	params.Count = Count;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.AddDehack
// (Native, Public, BlueprintCallable)
// Parameters:
// int*                           Count                          (Parm, ZeroConstructor, IsPlainOldData)

void AKSPlayerState::AddDehack(int* Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.AddDehack");

	AKSPlayerState_AddDehack_Params params;
	params.Count = Count;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.AddDeath
// (Native, Public, BlueprintCallable)
// Parameters:
// int*                           Count                          (Parm, ZeroConstructor, IsPlainOldData)

void AKSPlayerState::AddDeath(int* Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.AddDeath");

	AKSPlayerState_AddDeath_Params params;
	params.Count = Count;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.AddAssist
// (Native, Public, BlueprintCallable)
// Parameters:
// int*                           Count                          (Parm, ZeroConstructor, IsPlainOldData)

void AKSPlayerState::AddAssist(int* Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.AddAssist");

	AKSPlayerState_AddAssist_Params params;
	params.Count = Count;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.ActivatableModAtIndexActive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int*                           AbilityIndex                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSPlayerState::ActivatableModAtIndexActive(int* AbilityIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.ActivatableModAtIndexActive");

	AKSPlayerState_ActivatableModAtIndexActive_Params params;
	params.AbilityIndex = AbilityIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerState_Heist.GetSoftCash
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AKSPlayerState_Heist::GetSoftCash()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState_Heist.GetSoftCash");

	AKSPlayerState_Heist_GetSoftCash_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerState_Heist.GetHardCash
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AKSPlayerState_Heist::GetHardCash()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState_Heist.GetHardCash");

	AKSPlayerState_Heist_GetHardCash_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerStatsManager.GetActivityInstanceByType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EKSPlayerStatsActivityType*    Type                           (Parm, ZeroConstructor, IsPlainOldData)
// class AKSPlayerController**    Player                         (Parm, ZeroConstructor, IsPlainOldData)
// class UKSActivityInstance*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UKSActivityInstance* UKSPlayerStatsManager::GetActivityInstanceByType(EKSPlayerStatsActivityType* Type, class AKSPlayerController** Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerStatsManager.GetActivityInstanceByType");

	UKSPlayerStatsManager_GetActivityInstanceByType_Params params;
	params.Type = Type;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSPlayerStatsManager.FindActivityByType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EKSPlayerStatsActivityType*    Type                           (Parm, ZeroConstructor, IsPlainOldData)
// class UKSPlayerStatsActivity*  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UKSPlayerStatsActivity* UKSPlayerStatsManager::FindActivityByType(EKSPlayerStatsActivityType* Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerStatsManager.FindActivityByType");

	UKSPlayerStatsManager_FindActivityByType_Params params;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSProjectile.UpdateSpinRotation
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// float*                         DeltaSeconds                   (Parm, ZeroConstructor, IsPlainOldData)

void AKSProjectile::UpdateSpinRotation(float* DeltaSeconds)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.UpdateSpinRotation");

	AKSProjectile_UpdateSpinRotation_Params params;
	params.DeltaSeconds = DeltaSeconds;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile.TriggerExplosionFromHitResult
// (Final, Native, Protected, HasOutParms, BlueprintCallable)
// Parameters:
// struct FHitResult*             HitResult                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// EProjectileExplosionType*      ExplosionType                  (Parm, ZeroConstructor, IsPlainOldData)

void AKSProjectile::TriggerExplosionFromHitResult(struct FHitResult* HitResult, EProjectileExplosionType* ExplosionType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.TriggerExplosionFromHitResult");

	AKSProjectile_TriggerExplosionFromHitResult_Params params;
	params.HitResult = HitResult;
	params.ExplosionType = ExplosionType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile.TriggerExplosion
// (Native, Event, Protected, HasOutParms, BlueprintEvent)
// Parameters:
// struct FProjectileExplosionInfo* ExplosionInfo                  (ConstParm, Parm, OutParm, ReferenceParm)

void AKSProjectile::TriggerExplosion(struct FProjectileExplosionInfo* ExplosionInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.TriggerExplosion");

	AKSProjectile_TriggerExplosion_Params params;
	params.ExplosionInfo = ExplosionInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile.SpawnSpang
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FHitResult*             Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void AKSProjectile::SpawnSpang(struct FHitResult* Hit)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.SpawnSpang");

	AKSProjectile_SpawnSpang_Params params;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile.SimulateExplosion
// (Event, Protected, BlueprintEvent)

void AKSProjectile::SimulateExplosion()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.SimulateExplosion");

	AKSProjectile_SimulateExplosion_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile.ShouldBounceOff
// (Native, Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// struct FHitResult*             HitResult                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSProjectile::ShouldBounceOff(struct FHitResult* HitResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.ShouldBounceOff");

	AKSProjectile_ShouldBounceOff_Params params;
	params.HitResult = HitResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSProjectile.SetWeaponAsset
// (Native, Public, BlueprintCallable)
// Parameters:
// class UKSWeaponAsset**         InAsset                        (Parm, ZeroConstructor, IsPlainOldData)

void AKSProjectile::SetWeaponAsset(class UKSWeaponAsset** InAsset)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.SetWeaponAsset");

	AKSProjectile_SetWeaponAsset_Params params;
	params.InAsset = InAsset;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile.SetHorizontalThrowSpeed
// (Native, Public, BlueprintCallable)
// Parameters:
// float*                         InSpeed                        (Parm, ZeroConstructor, IsPlainOldData)

void AKSProjectile::SetHorizontalThrowSpeed(float* InSpeed)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.SetHorizontalThrowSpeed");

	AKSProjectile_SetHorizontalThrowSpeed_Params params;
	params.InSpeed = InSpeed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile.SetDamageOverrideWeaponAsset
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UKSWeaponAsset**         InWeaponAsset                  (Parm, ZeroConstructor, IsPlainOldData)

void AKSProjectile::SetDamageOverrideWeaponAsset(class UKSWeaponAsset** InWeaponAsset)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.SetDamageOverrideWeaponAsset");

	AKSProjectile_SetDamageOverrideWeaponAsset_Params params;
	params.InWeaponAsset = InWeaponAsset;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile.ServerProcessPredictedHits
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// TArray<struct FLaggedProjectileHit>* PredictedHits                  (ConstParm, Parm, ZeroConstructor, ReferenceParm)

void AKSProjectile::ServerProcessPredictedHits(TArray<struct FLaggedProjectileHit>* PredictedHits)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.ServerProcessPredictedHits");

	AKSProjectile_ServerProcessPredictedHits_Params params;
	params.PredictedHits = PredictedHits;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile.RecordPredictedHits
// (Final, Native, Protected, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<struct FHitResult>      HitResults                     (Parm, OutParm, ZeroConstructor)
// EProjectilePredictionType*     PredictionType                 (Parm, ZeroConstructor, IsPlainOldData)

void AKSProjectile::RecordPredictedHits(EProjectilePredictionType* PredictionType, TArray<struct FHitResult>* HitResults)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.RecordPredictedHits");

	AKSProjectile_RecordPredictedHits_Params params;
	params.PredictionType = PredictionType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (HitResults != nullptr)
		*HitResults = params.HitResults;
}


// Function Killstreak.KSProjectile.RecordPredictedHit
// (Final, Native, Protected, HasOutParms, BlueprintCallable)
// Parameters:
// struct FHitResult*             HitResult                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// EProjectilePredictionType*     PredictionType                 (Parm, ZeroConstructor, IsPlainOldData)

void AKSProjectile::RecordPredictedHit(struct FHitResult* HitResult, EProjectilePredictionType* PredictionType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.RecordPredictedHit");

	AKSProjectile_RecordPredictedHit_Params params;
	params.HitResult = HitResult;
	params.PredictionType = PredictionType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile.PlayFizzle
// (BlueprintCosmetic, Event, Protected, HasOutParms, BlueprintEvent)
// Parameters:
// struct FProjectileExplosionInfo* ExplosionInfo                  (ConstParm, Parm, OutParm, ReferenceParm)

void AKSProjectile::PlayFizzle(struct FProjectileExplosionInfo* ExplosionInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.PlayFizzle");

	AKSProjectile_PlayFizzle_Params params;
	params.ExplosionInfo = ExplosionInfo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile.PlayExplosion
// (BlueprintCosmetic, Event, Protected, HasOutParms, BlueprintEvent)
// Parameters:
// struct FProjectileExplosionInfo* ExplosionInfo                  (ConstParm, Parm, OutParm, ReferenceParm)

void AKSProjectile::PlayExplosion(struct FProjectileExplosionInfo* ExplosionInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.PlayExplosion");

	AKSProjectile_PlayExplosion_Params params;
	params.ExplosionInfo = ExplosionInfo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile.OnRep_WeaponAsset
// (Native, Protected)

void AKSProjectile::OnRep_WeaponAsset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.OnRep_WeaponAsset");

	AKSProjectile_OnRep_WeaponAsset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile.OnRep_StoppingHit
// (Final, Native, Protected)

void AKSProjectile::OnRep_StoppingHit()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.OnRep_StoppingHit");

	AKSProjectile_OnRep_StoppingHit_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile.OnRep_ProjectileHit
// (Native, Event, Protected, BlueprintEvent)

void AKSProjectile::OnRep_ProjectileHit()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.OnRep_ProjectileHit");

	AKSProjectile_OnRep_ProjectileHit_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile.OnRep_CurrentHealth
// (Final, Native, Protected)

void AKSProjectile::OnRep_CurrentHealth()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.OnRep_CurrentHealth");

	AKSProjectile_OnRep_CurrentHealth_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile.OnProjectileStopped
// (Native, Event, Protected, HasOutParms, BlueprintEvent)
// Parameters:
// struct FHitResult*             HitResult                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSProjectile::OnProjectileStopped(struct FHitResult* HitResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.OnProjectileStopped");

	AKSProjectile_OnProjectileStopped_Params params;
	params.HitResult = HitResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSProjectile.OnProjectileBounced
// (Native, Event, Protected, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FHitResult*             HitResult                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector*                ImpactVelocity                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSProjectile::OnProjectileBounced(struct FHitResult* HitResult, struct FVector* ImpactVelocity)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.OnProjectileBounced");

	AKSProjectile_OnProjectileBounced_Params params;
	params.HitResult = HitResult;
	params.ImpactVelocity = ImpactVelocity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSProjectile.OnKilled
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class AController**            EventInstigator                (Parm, ZeroConstructor, IsPlainOldData)

void AKSProjectile::OnKilled(class AController** EventInstigator)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.OnKilled");

	AKSProjectile_OnKilled_Params params;
	params.EventInstigator = EventInstigator;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile.NativeOnProjectileStopped
// (Native, Protected, HasOutParms)
// Parameters:
// struct FHitResult*             HitResult                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void AKSProjectile::NativeOnProjectileStopped(struct FHitResult* HitResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.NativeOnProjectileStopped");

	AKSProjectile_NativeOnProjectileStopped_Params params;
	params.HitResult = HitResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile.NativeOnProjectileBounced
// (Native, Protected, HasOutParms, HasDefaults)
// Parameters:
// struct FHitResult*             HitResult                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector*                ImpactVelocity                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void AKSProjectile::NativeOnProjectileBounced(struct FHitResult* HitResult, struct FVector* ImpactVelocity)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.NativeOnProjectileBounced");

	AKSProjectile_NativeOnProjectileBounced_Params params;
	params.HitResult = HitResult;
	params.ImpactVelocity = ImpactVelocity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile.ModifyDamageDealt
// (Native, Event, Public, HasOutParms, BlueprintEvent, Const)
// Parameters:
// float*                         DamageAmount                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FDamageEvent*           DamageEvent                    (ConstParm, Parm, OutParm, ReferenceParm)
// class AController**            EventInstigator                (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 DamagedActor                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSProjectile::ModifyDamageDealt(float* DamageAmount, struct FDamageEvent* DamageEvent, class AController** EventInstigator, class AActor** DamageCauser, class AActor** DamagedActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.ModifyDamageDealt");

	AKSProjectile_ModifyDamageDealt_Params params;
	params.DamageAmount = DamageAmount;
	params.DamageEvent = DamageEvent;
	params.EventInstigator = EventInstigator;
	params.DamageCauser = DamageCauser;
	params.DamagedActor = DamagedActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSProjectile.IsActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSProjectile::IsActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.IsActive");

	AKSProjectile_IsActive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSProjectile.GetWeaponAsset
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UKSWeaponAsset*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UKSWeaponAsset* AKSProjectile::GetWeaponAsset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.GetWeaponAsset");

	AKSProjectile_GetWeaponAsset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSProjectile.GetSpawnRotation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRotator                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FRotator AKSProjectile::GetSpawnRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.GetSpawnRotation");

	AKSProjectile_GetSpawnRotation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSProjectile.GetSpawnLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector AKSProjectile::GetSpawnLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.GetSpawnLocation");

	AKSProjectile_GetSpawnLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSProjectile.GetSpawningWeapon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AKSWeapon*               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AKSWeapon* AKSProjectile::GetSpawningWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.GetSpawningWeapon");

	AKSProjectile_GetSpawningWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSProjectile.GetProjectileUpdatedComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USceneComponent*         ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class USceneComponent* AKSProjectile::GetProjectileUpdatedComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.GetProjectileUpdatedComponent");

	AKSProjectile_GetProjectileUpdatedComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSProjectile.GetOutlineableMeshes
// (Event, Protected, HasOutParms, BlueprintEvent, Const)
// Parameters:
// TArray<class UPrimitiveComponent*> OutMeshes                      (Parm, OutParm, ZeroConstructor)

void AKSProjectile::GetOutlineableMeshes(TArray<class UPrimitiveComponent*>* OutMeshes)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.GetOutlineableMeshes");

	AKSProjectile_GetOutlineableMeshes_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutMeshes != nullptr)
		*OutMeshes = params.OutMeshes;
}


// Function Killstreak.KSProjectile.GetMovementComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UProjectileMovementComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UProjectileMovementComponent* AKSProjectile::GetMovementComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.GetMovementComponent");

	AKSProjectile_GetMovementComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSProjectile.GetHorizontalThrowSpeed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSProjectile::GetHorizontalThrowSpeed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.GetHorizontalThrowSpeed");

	AKSProjectile_GetHorizontalThrowSpeed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSProjectile.GetDamageWeaponAsset
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UKSWeaponAsset*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UKSWeaponAsset* AKSProjectile::GetDamageWeaponAsset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.GetDamageWeaponAsset");

	AKSProjectile_GetDamageWeaponAsset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSProjectile.GetDamageInstigator
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AController*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AController* AKSProjectile::GetDamageInstigator()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.GetDamageInstigator");

	AKSProjectile_GetDamageInstigator_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSProjectile.GetDamageFalloffRangeScaler
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSProjectile::GetDamageFalloffRangeScaler()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.GetDamageFalloffRangeScaler");

	AKSProjectile_GetDamageFalloffRangeScaler_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSProjectile.GetComponentToRotate
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// class USceneComponent*         ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class USceneComponent* AKSProjectile::GetComponentToRotate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.GetComponentToRotate");

	AKSProjectile_GetComponentToRotate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSProjectile.GetClusterComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UKSProjectileClusterComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UKSProjectileClusterComponent* AKSProjectile::GetClusterComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.GetClusterComponent");

	AKSProjectile_GetClusterComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSProjectile.DoRadialDamageDefault
// (Final, Native, Protected, BlueprintCallable)

void AKSProjectile::DoRadialDamageDefault()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.DoRadialDamageDefault");

	AKSProjectile_DoRadialDamageDefault_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile.Deactivate
// (Native, Public, BlueprintCallable)

void AKSProjectile::Deactivate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.Deactivate");

	AKSProjectile_Deactivate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile.CreateClusterSegmentsFromStoppingHit
// (Final, Native, Public, BlueprintCallable)

void AKSProjectile::CreateClusterSegmentsFromStoppingHit()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.CreateClusterSegmentsFromStoppingHit");

	AKSProjectile_CreateClusterSegmentsFromStoppingHit_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile.ComponentTakeDamage
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent**    HitComponent                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// float*                         DamageAmount                   (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSProjectile::ComponentTakeDamage(class UPrimitiveComponent** HitComponent, float* DamageAmount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.ComponentTakeDamage");

	AKSProjectile_ComponentTakeDamage_Params params;
	params.HitComponent = HitComponent;
	params.DamageAmount = DamageAmount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSProjectile.BroadcastExplosion
// (Net, Native, Event, NetMulticast, Protected)
// Parameters:
// struct FProjectileExplosionInfo* ExplosionInfo                  (ConstParm, Parm, ReferenceParm)

void AKSProjectile::BroadcastExplosion(struct FProjectileExplosionInfo* ExplosionInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.BroadcastExplosion");

	AKSProjectile_BroadcastExplosion_Params params;
	params.ExplosionInfo = ExplosionInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile.AffectsActor
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor**                 InActor                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSProjectile::AffectsActor(class AActor** InActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.AffectsActor");

	AKSProjectile_AffectsActor_Params params;
	params.InActor = InActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSProjectile_Grenade.UnregisterTouchEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AKSCharacter**           KSCharacter                    (Parm, ZeroConstructor, IsPlainOldData)

void AKSProjectile_Grenade::UnregisterTouchEvent(class AKSCharacter** KSCharacter)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile_Grenade.UnregisterTouchEvent");

	AKSProjectile_Grenade_UnregisterTouchEvent_Params params;
	params.KSCharacter = KSCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile_Grenade.ShouldExplodeOnBounce
// (Event, Protected, HasOutParms, HasDefaults, BlueprintEvent, Const)
// Parameters:
// struct FHitResult*             HitResult                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector*                ImpactVelocity                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSProjectile_Grenade::ShouldExplodeOnBounce(struct FHitResult* HitResult, struct FVector* ImpactVelocity)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile_Grenade.ShouldExplodeOnBounce");

	AKSProjectile_Grenade_ShouldExplodeOnBounce_Params params;
	params.HitResult = HitResult;
	params.ImpactVelocity = ImpactVelocity;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSProjectile_Grenade.SetFuseTime
// (Native, Public, BlueprintCallable)
// Parameters:
// float*                         InFuseTime                     (Parm, ZeroConstructor, IsPlainOldData)

void AKSProjectile_Grenade::SetFuseTime(float* InFuseTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile_Grenade.SetFuseTime");

	AKSProjectile_Grenade_SetFuseTime_Params params;
	params.InFuseTime = InFuseTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile_Grenade.RegisterTouchEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AKSCharacter**           KSCharacter                    (Parm, ZeroConstructor, IsPlainOldData)

void AKSProjectile_Grenade::RegisterTouchEvent(class AKSCharacter** KSCharacter)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile_Grenade.RegisterTouchEvent");

	AKSProjectile_Grenade_RegisterTouchEvent_Params params;
	params.KSCharacter = KSCharacter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile_Grenade.OnRep_FuseTimeRemaining
// (Final, Native, Protected)

void AKSProjectile_Grenade::OnRep_FuseTimeRemaining()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile_Grenade.OnRep_FuseTimeRemaining");

	AKSProjectile_Grenade_OnRep_FuseTimeRemaining_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile_Grenade.OnOverlapEnd
// (Native, Protected)
// Parameters:
// class UPrimitiveComponent**    OverlappedComp                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor**                 OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent**    OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int*                           OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)

void AKSProjectile_Grenade::OnOverlapEnd(class UPrimitiveComponent** OverlappedComp, class AActor** OtherActor, class UPrimitiveComponent** OtherComp, int* OtherBodyIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile_Grenade.OnOverlapEnd");

	AKSProjectile_Grenade_OnOverlapEnd_Params params;
	params.OverlappedComp = OverlappedComp;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile_Grenade.OnOverlapBegin
// (Native, Protected, HasOutParms)
// Parameters:
// class UPrimitiveComponent**    OverlappedComp                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor**                 OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent**    OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int*                           OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult*             SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void AKSProjectile_Grenade::OnOverlapBegin(class UPrimitiveComponent** OverlappedComp, class AActor** OtherActor, class UPrimitiveComponent** OtherComp, int* OtherBodyIndex, bool* bFromSweep, struct FHitResult* SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile_Grenade.OnOverlapBegin");

	AKSProjectile_Grenade_OnOverlapBegin_Params params;
	params.OverlappedComp = OverlappedComp;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile_Grenade.OnLocalViewTargetChanged
// (Final, Native, Private)
// Parameters:
// class AKSPlayerController**    InController                   (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 OldViewTarget                  (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 NewViewTarget                  (Parm, ZeroConstructor, IsPlainOldData)

void AKSProjectile_Grenade::OnLocalViewTargetChanged(class AKSPlayerController** InController, class AActor** OldViewTarget, class AActor** NewViewTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile_Grenade.OnLocalViewTargetChanged");

	AKSProjectile_Grenade_OnLocalViewTargetChanged_Params params;
	params.InController = InController;
	params.OldViewTarget = OldViewTarget;
	params.NewViewTarget = NewViewTarget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile_Grenade.IsInProximityOfLocalCharacter
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSProjectile_Grenade::IsInProximityOfLocalCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile_Grenade.IsInProximityOfLocalCharacter");

	AKSProjectile_Grenade_IsInProximityOfLocalCharacter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSProjectile_Grenade.FuseTimeExpired
// (BlueprintAuthorityOnly, Native, Event, Protected, BlueprintEvent)

void AKSProjectile_Grenade::FuseTimeExpired()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile_Grenade.FuseTimeExpired");

	AKSProjectile_Grenade_FuseTimeExpired_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile_Grenade.CanSeeProximityWarning
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class AController**            QueriedPlayer                  (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSProjectile_Grenade::CanSeeProximityWarning(class AController** QueriedPlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile_Grenade.CanSeeProximityWarning");

	AKSProjectile_Grenade_CanSeeProximityWarning_Params params;
	params.QueriedPlayer = QueriedPlayer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSSpreadProjectile.OnProjectileStopped
// (Native, Event, Protected, HasOutParms, BlueprintEvent)
// Parameters:
// struct FHitResult*             HitResult                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSSpreadProjectile::OnProjectileStopped(struct FHitResult* HitResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSSpreadProjectile.OnProjectileStopped");

	AKSSpreadProjectile_OnProjectileStopped_Params params;
	params.HitResult = HitResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSSpreadProjectile.OnProjectileBounced
// (Native, Event, Protected, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FHitResult*             HitResult                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector*                ImpactVelocity                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSSpreadProjectile::OnProjectileBounced(struct FHitResult* HitResult, struct FVector* ImpactVelocity)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSSpreadProjectile.OnProjectileBounced");

	AKSSpreadProjectile_OnProjectileBounced_Params params;
	params.HitResult = HitResult;
	params.ImpactVelocity = ImpactVelocity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSSpreadProjectile.NativeOnProjectileStopped
// (Native, Protected, HasOutParms)
// Parameters:
// struct FHitResult*             HitResult                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void AKSSpreadProjectile::NativeOnProjectileStopped(struct FHitResult* HitResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSSpreadProjectile.NativeOnProjectileStopped");

	AKSSpreadProjectile_NativeOnProjectileStopped_Params params;
	params.HitResult = HitResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSSpreadProjectile.NativeOnProjectileBounced
// (Native, Protected, HasOutParms, HasDefaults)
// Parameters:
// struct FHitResult*             HitResult                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// struct FVector*                ImpactVelocity                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void AKSSpreadProjectile::NativeOnProjectileBounced(struct FHitResult* HitResult, struct FVector* ImpactVelocity)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSSpreadProjectile.NativeOnProjectileBounced");

	AKSSpreadProjectile_NativeOnProjectileBounced_Params params;
	params.HitResult = HitResult;
	params.ImpactVelocity = ImpactVelocity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGrenadeSpreadRule.GetSpread
// (Native, Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class UWorld**                 World                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FTransform*             Transform                      (Parm, IsPlainOldData)
// float*                         Radius                         (Parm, ZeroConstructor, IsPlainOldData)
// float*                         NormalZMin                     (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FTransform>      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<struct FTransform> UKSGrenadeSpreadRule::GetSpread(class UWorld** World, struct FTransform* Transform, float* Radius, float* NormalZMin)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGrenadeSpreadRule.GetSpread");

	UKSGrenadeSpreadRule_GetSpread_Params params;
	params.World = World;
	params.Transform = Transform;
	params.Radius = Radius;
	params.NormalZMin = NormalZMin;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSProjectile_GrenadeSpread.ProcessNextSpreadTransform
// (Final, Native, Private)

void AKSProjectile_GrenadeSpread::ProcessNextSpreadTransform()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile_GrenadeSpread.ProcessNextSpreadTransform");

	AKSProjectile_GrenadeSpread_ProcessNextSpreadTransform_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile_GrenadeSpread.OnSpreadTransformRemoved
// (Event, Protected, HasDefaults, BlueprintEvent)
// Parameters:
// struct FTransform*             RemovedTransform               (Parm, IsPlainOldData)

void AKSProjectile_GrenadeSpread::OnSpreadTransformRemoved(struct FTransform* RemovedTransform)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile_GrenadeSpread.OnSpreadTransformRemoved");

	AKSProjectile_GrenadeSpread_OnSpreadTransformRemoved_Params params;
	params.RemovedTransform = RemovedTransform;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile_GrenadeSpread.OnSpreadTransformAdded
// (Event, Protected, HasDefaults, BlueprintEvent)
// Parameters:
// struct FTransform*             AddedTransform                 (Parm, IsPlainOldData)

void AKSProjectile_GrenadeSpread::OnSpreadTransformAdded(struct FTransform* AddedTransform)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile_GrenadeSpread.OnSpreadTransformAdded");

	AKSProjectile_GrenadeSpread_OnSpreadTransformAdded_Params params;
	params.AddedTransform = AddedTransform;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile_GrenadeSpread.OnSpreadTick
// (Final, Native, Private)

void AKSProjectile_GrenadeSpread::OnSpreadTick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile_GrenadeSpread.OnSpreadTick");

	AKSProjectile_GrenadeSpread_OnSpreadTick_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile_GrenadeSpread.OnSpreadProjectileStopped
// (Final, Native, Private, HasOutParms)
// Parameters:
// struct FHitResult*             HitResult                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void AKSProjectile_GrenadeSpread::OnSpreadProjectileStopped(struct FHitResult* HitResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile_GrenadeSpread.OnSpreadProjectileStopped");

	AKSProjectile_GrenadeSpread_OnSpreadProjectileStopped_Params params;
	params.HitResult = HitResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile_GrenadeSpread.OnLingerEnd
// (Final, Native, Private)
// Parameters:
// class AActor**                 LingerActor                    (Parm, ZeroConstructor, IsPlainOldData)

void AKSProjectile_GrenadeSpread::OnLingerEnd(class AActor** LingerActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile_GrenadeSpread.OnLingerEnd");

	AKSProjectile_GrenadeSpread_OnLingerEnd_Params params;
	params.LingerActor = LingerActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile_GrenadeSpread.OnDamageTick
// (Final, Native, Private)

void AKSProjectile_GrenadeSpread::OnDamageTick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile_GrenadeSpread.OnDamageTick");

	AKSProjectile_GrenadeSpread_OnDamageTick_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile_GrenadeSpread.OnBeginLingering
// (Event, Protected, BlueprintEvent)

void AKSProjectile_GrenadeSpread::OnBeginLingering()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile_GrenadeSpread.OnBeginLingering");

	AKSProjectile_GrenadeSpread_OnBeginLingering_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile_GrenadeSpread.OnAllSpreadTransformsRemoved
// (Event, Protected, BlueprintEvent)

void AKSProjectile_GrenadeSpread::OnAllSpreadTransformsRemoved()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile_GrenadeSpread.OnAllSpreadTransformsRemoved");

	AKSProjectile_GrenadeSpread_OnAllSpreadTransformsRemoved_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile_GrenadeSpread.OnAffectedDestroyed
// (Final, Native, Private)
// Parameters:
// class AActor**                 AffectedActor                  (Parm, ZeroConstructor, IsPlainOldData)

void AKSProjectile_GrenadeSpread::OnAffectedDestroyed(class AActor** AffectedActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile_GrenadeSpread.OnAffectedDestroyed");

	AKSProjectile_GrenadeSpread_OnAffectedDestroyed_Params params;
	params.AffectedActor = AffectedActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile_GrenadeSpread.OnActorUnaffected
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AActor**                 UnaffectedActor                (Parm, ZeroConstructor, IsPlainOldData)

void AKSProjectile_GrenadeSpread::OnActorUnaffected(class AActor** UnaffectedActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile_GrenadeSpread.OnActorUnaffected");

	AKSProjectile_GrenadeSpread_OnActorUnaffected_Params params;
	params.UnaffectedActor = UnaffectedActor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile_GrenadeSpread.OnActorDamaged
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AActor**                 DamagedActor                   (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Amount                         (Parm, ZeroConstructor, IsPlainOldData)

void AKSProjectile_GrenadeSpread::OnActorDamaged(class AActor** DamagedActor, float* Amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile_GrenadeSpread.OnActorDamaged");

	AKSProjectile_GrenadeSpread_OnActorDamaged_Params params;
	params.DamagedActor = DamagedActor;
	params.Amount = Amount;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile_GrenadeSpread.OnActorAffected
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AActor**                 AffectedActor                  (Parm, ZeroConstructor, IsPlainOldData)

void AKSProjectile_GrenadeSpread::OnActorAffected(class AActor** AffectedActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile_GrenadeSpread.OnActorAffected");

	AKSProjectile_GrenadeSpread_OnActorAffected_Params params;
	params.AffectedActor = AffectedActor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile_GrenadeSpread.ConfigureSpreadTransformParticleSystem
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UParticleSystemComponent** ParticleSystem                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void AKSProjectile_GrenadeSpread::ConfigureSpreadTransformParticleSystem(class UParticleSystemComponent** ParticleSystem)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile_GrenadeSpread.ConfigureSpreadTransformParticleSystem");

	AKSProjectile_GrenadeSpread_ConfigureSpreadTransformParticleSystem_Params params;
	params.ParticleSystem = ParticleSystem;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile_GrenadeSpread.CleanupParticleSystemComponents
// (Final, Native, Private)

void AKSProjectile_GrenadeSpread::CleanupParticleSystemComponents()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile_GrenadeSpread.CleanupParticleSystemComponents");

	AKSProjectile_GrenadeSpread_CleanupParticleSystemComponents_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile_GrenadeSpread.CleanupMeshComponents
// (Final, Native, Private)

void AKSProjectile_GrenadeSpread::CleanupMeshComponents()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile_GrenadeSpread.CleanupMeshComponents");

	AKSProjectile_GrenadeSpread_CleanupMeshComponents_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile_GrenadeSpread.BeginLingering
// (Final, Native, Private)

void AKSProjectile_GrenadeSpread::BeginLingering()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile_GrenadeSpread.BeginLingering");

	AKSProjectile_GrenadeSpread_BeginLingering_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile_Melee.PredictDamage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float*                         DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void AKSProjectile_Melee::PredictDamage(float* DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile_Melee.PredictDamage");

	AKSProjectile_Melee_PredictDamage_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile_Melee.LookAheadHit
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class AActor**                 HitActor                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult*             HitResult                      (Parm, IsPlainOldData)

void AKSProjectile_Melee::LookAheadHit(class AActor** HitActor, struct FHitResult* HitResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile_Melee.LookAheadHit");

	AKSProjectile_Melee_LookAheadHit_Params params;
	params.HitActor = HitActor;
	params.HitResult = HitResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile_Melee.FlushHitIgnoreActors
// (Final, Native, Protected, BlueprintCallable)

void AKSProjectile_Melee::FlushHitIgnoreActors()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile_Melee.FlushHitIgnoreActors");

	AKSProjectile_Melee_FlushHitIgnoreActors_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile_Melee.AllowFutureHitOnActor
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class AActor**                 PreviouslyHitActor             (Parm, ZeroConstructor, IsPlainOldData)

void AKSProjectile_Melee::AllowFutureHitOnActor(class AActor** PreviouslyHitActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile_Melee.AllowFutureHitOnActor");

	AKSProjectile_Melee_AllowFutureHitOnActor_Params params;
	params.PreviouslyHitActor = PreviouslyHitActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile_ProximityGrenade.ProximityActorUpdated
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class AActor**                 Actor                          (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent**    Component                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FKSActorProximityInfo*  ProximityInfo                  (Parm)

void AKSProjectile_ProximityGrenade::ProximityActorUpdated(class AActor** Actor, class UPrimitiveComponent** Component, struct FKSActorProximityInfo* ProximityInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile_ProximityGrenade.ProximityActorUpdated");

	AKSProjectile_ProximityGrenade_ProximityActorUpdated_Params params;
	params.Actor = Actor;
	params.Component = Component;
	params.ProximityInfo = ProximityInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile_ProximityGrenade.GetProximityTraceRelativeLocation
// (Native, Event, Protected, HasDefaults, BlueprintEvent, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector AKSProjectile_ProximityGrenade::GetProximityTraceRelativeLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile_ProximityGrenade.GetProximityTraceRelativeLocation");

	AKSProjectile_ProximityGrenade_GetProximityTraceRelativeLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSProjectile_ProximityGrenade.GetProximityComponent
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// class UPrimitiveComponent*     ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UPrimitiveComponent* AKSProjectile_ProximityGrenade::GetProximityComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile_ProximityGrenade.GetProximityComponent");

	AKSProjectile_ProximityGrenade_GetProximityComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSProjectile_RemoteTrigger.ReportOwningClientLoaded
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void AKSProjectile_RemoteTrigger::ReportOwningClientLoaded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile_RemoteTrigger.ReportOwningClientLoaded");

	AKSProjectile_RemoteTrigger_ReportOwningClientLoaded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile_RemoteTrigger.OnRealActorStopped
// (Final, Native, Protected)
// Parameters:
// class AKSProjectile_RemoteTrigger** RealProjectile                 (Parm, ZeroConstructor, IsPlainOldData)

void AKSProjectile_RemoteTrigger::OnRealActorStopped(class AKSProjectile_RemoteTrigger** RealProjectile)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile_RemoteTrigger.OnRealActorStopped");

	AKSProjectile_RemoteTrigger_OnRealActorStopped_Params params;
	params.RealProjectile = RealProjectile;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile_RemoteTrigger.IsDetonatable
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSProjectile_RemoteTrigger::IsDetonatable()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile_RemoteTrigger.IsDetonatable");

	AKSProjectile_RemoteTrigger_IsDetonatable_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSProjectile_ReviveDart.OnReviveEnd
// (Final, Native, Protected)
// Parameters:
// class AKSCharacter**           RevivingCharacter              (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          SuccessfulRevive               (Parm, ZeroConstructor, IsPlainOldData)

void AKSProjectile_ReviveDart::OnReviveEnd(class AKSCharacter** RevivingCharacter, bool* SuccessfulRevive)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile_ReviveDart.OnReviveEnd");

	AKSProjectile_ReviveDart_OnReviveEnd_Params params;
	params.RevivingCharacter = RevivingCharacter;
	params.SuccessfulRevive = SuccessfulRevive;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectileClusterComponent.OnSegmentKilled
// (Final, Native, Protected)
// Parameters:
// class AKSProjectile**          Segment                        (Parm, ZeroConstructor, IsPlainOldData)

void UKSProjectileClusterComponent::OnSegmentKilled(class AKSProjectile** Segment)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectileClusterComponent.OnSegmentKilled");

	UKSProjectileClusterComponent_OnSegmentKilled_Params params;
	params.Segment = Segment;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectileClusterComponent.GetSpawnedSegments
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AKSProjectile*>   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class AKSProjectile*> UKSProjectileClusterComponent::GetSpawnedSegments()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectileClusterComponent.GetSpawnedSegments");

	UKSProjectileClusterComponent_GetSpawnedSegments_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSProjectileClusterComponent.GetClusterTransform
// (Native, Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// struct FHitResult*             Hit                            (Parm, IsPlainOldData)
// struct FVector*                PassThroughVector              (Parm, ZeroConstructor, IsPlainOldData)
// struct FTransform              ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FTransform UKSProjectileClusterComponent::GetClusterTransform(struct FHitResult* Hit, struct FVector* PassThroughVector)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectileClusterComponent.GetClusterTransform");

	UKSProjectileClusterComponent_GetClusterTransform_Params params;
	params.Hit = Hit;
	params.PassThroughVector = PassThroughVector;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSProjectileClusterComponent.CreateClusterSegments
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FHitResult*             Hit                            (Parm, IsPlainOldData)
// class AKSWeapon**              WeaponUsed                     (Parm, ZeroConstructor, IsPlainOldData)

void UKSProjectileClusterComponent::CreateClusterSegments(struct FHitResult* Hit, class AKSWeapon** WeaponUsed)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectileClusterComponent.CreateClusterSegments");

	UKSProjectileClusterComponent_CreateClusterSegments_Params params;
	params.Hit = Hit;
	params.WeaponUsed = WeaponUsed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProximityComponent.UnregisterOverlapShape
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UPrimitiveComponent**    OverlapShape                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UKSProximityComponent::UnregisterOverlapShape(class UPrimitiveComponent** OverlapShape)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProximityComponent.UnregisterOverlapShape");

	UKSProximityComponent_UnregisterOverlapShape_Params params;
	params.OverlapShape = OverlapShape;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProximityComponent.ShouldTrackActor
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// class AActor**                 InActor                        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSProximityComponent::ShouldTrackActor(class AActor** InActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProximityComponent.ShouldTrackActor");

	UKSProximityComponent_ShouldTrackActor_Params params;
	params.InActor = InActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSProximityComponent.SetProximityTraceOffset
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector*                Offset                         (Parm, ZeroConstructor, IsPlainOldData)

void UKSProximityComponent::SetProximityTraceOffset(struct FVector* Offset)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProximityComponent.SetProximityTraceOffset");

	UKSProximityComponent_SetProximityTraceOffset_Params params;
	params.Offset = Offset;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProximityComponent.SetProximityCheckingEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          Enabled                        (Parm, ZeroConstructor, IsPlainOldData)

void UKSProximityComponent::SetProximityCheckingEnabled(bool* Enabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProximityComponent.SetProximityCheckingEnabled");

	UKSProximityComponent_SetProximityCheckingEnabled_Params params;
	params.Enabled = Enabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProximityComponent.RegisterOverlapShape
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UPrimitiveComponent**    OverlapShape                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UKSProximityComponent::RegisterOverlapShape(class UPrimitiveComponent** OverlapShape)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProximityComponent.RegisterOverlapShape");

	UKSProximityComponent_RegisterOverlapShape_Params params;
	params.OverlapShape = OverlapShape;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProximityComponent.ProximityOverlapStart
// (Final, Native, Protected, HasOutParms)
// Parameters:
// class UPrimitiveComponent**    OverlappedComp                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor**                 OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent**    OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int*                           OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult*             SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UKSProximityComponent::ProximityOverlapStart(class UPrimitiveComponent** OverlappedComp, class AActor** OtherActor, class UPrimitiveComponent** OtherComp, int* OtherBodyIndex, bool* bFromSweep, struct FHitResult* SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProximityComponent.ProximityOverlapStart");

	UKSProximityComponent_ProximityOverlapStart_Params params;
	params.OverlappedComp = OverlappedComp;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProximityComponent.ProximityOverlapEnd
// (Final, Native, Protected)
// Parameters:
// class UPrimitiveComponent**    OverlappedComp                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor**                 OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent**    OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// int*                           OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData)

void UKSProximityComponent::ProximityOverlapEnd(class UPrimitiveComponent** OverlappedComp, class AActor** OtherActor, class UPrimitiveComponent** OtherComp, int* OtherBodyIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProximityComponent.ProximityOverlapEnd");

	UKSProximityComponent_ProximityOverlapEnd_Params params;
	params.OverlappedComp = OverlappedComp;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSReverseTracker.StoreDamageTakenEvent
// (Final, Native, Public, HasOutParms)
// Parameters:
// struct FAdvancedCombatEvent*   DamageEvent                    (ConstParm, Parm, OutParm, ReferenceParm)

void UKSReverseTracker::StoreDamageTakenEvent(struct FAdvancedCombatEvent* DamageEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSReverseTracker.StoreDamageTakenEvent");

	UKSReverseTracker_StoreDamageTakenEvent_Params params;
	params.DamageEvent = DamageEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSReverseTracker.HandleTrackerAccolade
// (Final, Native, Public)
// Parameters:
// class AKSPlayerState**         PlayerState                    (Parm, ZeroConstructor, IsPlainOldData)

void UKSReverseTracker::HandleTrackerAccolade(class AKSPlayerState** PlayerState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSReverseTracker.HandleTrackerAccolade");

	UKSReverseTracker_HandleTrackerAccolade_Params params;
	params.PlayerState = PlayerState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSReverseTracker.CheckVictimDamageInstigator
// (Final, Native, Public, HasOutParms)
// Parameters:
// class AKSPlayerState**         Instigator                     (Parm, ZeroConstructor, IsPlainOldData)
// class AKSPlayerState**         Victim                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FPlayerDamageInfo       OutPlayerInfo                  (Parm, OutParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSReverseTracker::CheckVictimDamageInstigator(class AKSPlayerState** Instigator, class AKSPlayerState** Victim, struct FPlayerDamageInfo* OutPlayerInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSReverseTracker.CheckVictimDamageInstigator");

	UKSReverseTracker_CheckVictimDamageInstigator_Params params;
	params.Instigator = Instigator;
	params.Victim = Victim;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutPlayerInfo != nullptr)
		*OutPlayerInfo = params.OutPlayerInfo;

	return params.ReturnValue;
}


// Function Killstreak.KSRewardsCalculator.GetStatsOrdering
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// TArray<EPlayerStatType>        StatsOrdering                  (Parm, OutParm, ZeroConstructor)

void UKSRewardsCalculator::GetStatsOrdering(TArray<EPlayerStatType>* StatsOrdering)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRewardsCalculator.GetStatsOrdering");

	UKSRewardsCalculator_GetStatsOrdering_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (StatsOrdering != nullptr)
		*StatsOrdering = params.StatsOrdering;
}


// Function Killstreak.KSRewardsCalculator.GetRewardsFromStat
// (Event, Public, HasOutParms, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FPlayerMatchStatInfo*   PlayerStatInfo                 (Parm)
// float                          OutExpRewardValue              (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSRewardsCalculator::GetRewardsFromStat(struct FPlayerMatchStatInfo* PlayerStatInfo, float* OutExpRewardValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRewardsCalculator.GetRewardsFromStat");

	UKSRewardsCalculator_GetRewardsFromStat_Params params;
	params.PlayerStatInfo = PlayerStatInfo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutExpRewardValue != nullptr)
		*OutExpRewardValue = params.OutExpRewardValue;

	return params.ReturnValue;
}


// Function Killstreak.KSRewardsCalculator.CalcPlayerRewards
// (Final, Native, Public, HasOutParms)
// Parameters:
// int*                           PlayerTeamNum                  (Parm, ZeroConstructor, IsPlainOldData)
// class UKSPlayerMatchStats**    playerStats                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FPlayerRewardsSummary   Rewards                        (Parm, OutParm)
// class AKSPlayerController**    PlayerController               (Parm, ZeroConstructor, IsPlainOldData)

void UKSRewardsCalculator::CalcPlayerRewards(int* PlayerTeamNum, class UKSPlayerMatchStats** playerStats, class AKSPlayerController** PlayerController, struct FPlayerRewardsSummary* Rewards)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRewardsCalculator.CalcPlayerRewards");

	UKSRewardsCalculator_CalcPlayerRewards_Params params;
	params.PlayerTeamNum = PlayerTeamNum;
	params.playerStats = playerStats;
	params.PlayerController = PlayerController;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (Rewards != nullptr)
		*Rewards = params.Rewards;
}


// Function Killstreak.KSSpectatorPawn.GamepadLookUp
// (Native, Public)
// Parameters:
// float*                         Value                          (Parm, ZeroConstructor, IsPlainOldData)

void AKSSpectatorPawn::GamepadLookUp(float* Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSSpectatorPawn.GamepadLookUp");

	AKSSpectatorPawn_GamepadLookUp_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSSpectatorPawn.GamepadLookRight
// (Native, Public)
// Parameters:
// float*                         Value                          (Parm, ZeroConstructor, IsPlainOldData)

void AKSSpectatorPawn::GamepadLookRight(float* Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSSpectatorPawn.GamepadLookRight");

	AKSSpectatorPawn_GamepadLookRight_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRocket.OnRep_FlightDurationTimer
// (Final, Native, Protected)

void AKSRocket::OnRep_FlightDurationTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRocket.OnRep_FlightDurationTimer");

	AKSRocket_OnRep_FlightDurationTimer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRocket.OnIgnitionKickoff
// (Event, Protected, BlueprintEvent)

void AKSRocket::OnIgnitionKickoff()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRocket.OnIgnitionKickoff");

	AKSRocket_OnIgnitionKickoff_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRocket.NativeOnProjectileStopped
// (Final, Native, Protected, HasOutParms)
// Parameters:
// struct FHitResult*             HitResult                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void AKSRocket::NativeOnProjectileStopped(struct FHitResult* HitResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRocket.NativeOnProjectileStopped");

	AKSRocket_NativeOnProjectileStopped_Params params;
	params.HitResult = HitResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRocket.NativeOnIgnitionKickoff
// (Final, Native, Protected)

void AKSRocket::NativeOnIgnitionKickoff()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRocket.NativeOnIgnitionKickoff");

	AKSRocket_NativeOnIgnitionKickoff_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRocket.NativeDetonate
// (Final, Native, Protected, HasOutParms)
// Parameters:
// struct FProjectileExplosionInfo* ExplosionInfo                  (ConstParm, Parm, OutParm, ReferenceParm)

void AKSRocket::NativeDetonate(struct FProjectileExplosionInfo* ExplosionInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRocket.NativeDetonate");

	AKSRocket_NativeDetonate_Params params;
	params.ExplosionInfo = ExplosionInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRocket.GetWeaponAsset
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UKSWeaponAsset*          ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UKSWeaponAsset* AKSRocket::GetWeaponAsset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRocket.GetWeaponAsset");

	AKSRocket_GetWeaponAsset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSRocket.GetFlightDuration
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSRocket::GetFlightDuration()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRocket.GetFlightDuration");

	AKSRocket_GetFlightDuration_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSRocket.GamepadLookUp
// (Native, Protected)
// Parameters:
// float*                         Value                          (Parm, ZeroConstructor, IsPlainOldData)

void AKSRocket::GamepadLookUp(float* Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRocket.GamepadLookUp");

	AKSRocket_GamepadLookUp_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRocket.GamepadLookRight
// (Native, Protected)
// Parameters:
// float*                         Value                          (Parm, ZeroConstructor, IsPlainOldData)

void AKSRocket::GamepadLookRight(float* Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRocket.GamepadLookRight");

	AKSRocket_GamepadLookRight_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRocket.FlightDurationTimerTick
// (Final, Native, Protected)
// Parameters:
// float*                         Seconds                        (Parm, ZeroConstructor, IsPlainOldData)

void AKSRocket::FlightDurationTimerTick(float* Seconds)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRocket.FlightDurationTimerTick");

	AKSRocket_FlightDurationTimerTick_Params params;
	params.Seconds = Seconds;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRocket.FlightDurationTimerComplete
// (Final, Native, Protected)

void AKSRocket::FlightDurationTimerComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRocket.FlightDurationTimerComplete");

	AKSRocket_FlightDurationTimerComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRocket.FlightDurationTimerActive
// (Final, Native, Protected)
// Parameters:
// bool*                          bActive                        (Parm, ZeroConstructor, IsPlainOldData)

void AKSRocket::FlightDurationTimerActive(bool* bActive)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRocket.FlightDurationTimerActive");

	AKSRocket_FlightDurationTimerActive_Params params;
	params.bActive = bActive;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRocket.EnableCameraControl
// (Final, Native, Protected)

void AKSRocket::EnableCameraControl()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRocket.EnableCameraControl");

	AKSRocket_EnableCameraControl_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRocket.Detonate
// (Event, Protected, HasOutParms, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FProjectileExplosionInfo* ExplosionInfo                  (ConstParm, Parm, OutParm, ReferenceParm)

void AKSRocket::Detonate(struct FProjectileExplosionInfo* ExplosionInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRocket.Detonate");

	AKSRocket_Detonate_Params params;
	params.ExplosionInfo = ExplosionInfo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRocket.BroadcastDetonate
// (Net, NetReliable, Native, Event, NetMulticast, Protected, BlueprintCallable)
// Parameters:
// struct FProjectileExplosionInfo* ExplosionInfo                  (ConstParm, Parm, ReferenceParm)

void AKSRocket::BroadcastDetonate(struct FProjectileExplosionInfo* ExplosionInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRocket.BroadcastDetonate");

	AKSRocket_BroadcastDetonate_Params params;
	params.ExplosionInfo = ExplosionInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRocketMovementComponent.StopSimulating
// (Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FHitResult*             HitResult                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UKSRocketMovementComponent::StopSimulating(struct FHitResult* HitResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRocketMovementComponent.StopSimulating");

	UKSRocketMovementComponent_StopSimulating_Params params;
	params.HitResult = HitResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction Killstreak.KSRocketMovementComponent.OnRocketStopDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasOutParms)
// Parameters:
// struct FHitResult*             ImpactResult                   (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void UKSRocketMovementComponent::OnRocketStopDelegate__DelegateSignature(struct FHitResult* ImpactResult)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Killstreak.KSRocketMovementComponent.OnRocketStopDelegate__DelegateSignature");

	UKSRocketMovementComponent_OnRocketStopDelegate__DelegateSignature_Params params;
	params.ImpactResult = ImpactResult;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction Killstreak.KSRocketMovementComponent.OnIgnitionKickoffDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UKSRocketMovementComponent::OnIgnitionKickoffDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Killstreak.KSRocketMovementComponent.OnIgnitionKickoffDelegate__DelegateSignature");

	UKSRocketMovementComponent_OnIgnitionKickoffDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRoundBasedObject.ReceiveGameSetup
// (Final, Native, Protected)

void AKSRoundBasedObject::ReceiveGameSetup()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRoundBasedObject.ReceiveGameSetup");

	AKSRoundBasedObject_ReceiveGameSetup_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRoundBasedObject.OnSkyDiveStarted
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AKSCharacter**           SkyDiver                       (Parm, ZeroConstructor, IsPlainOldData)

void AKSRoundBasedObject::OnSkyDiveStarted(class AKSCharacter** SkyDiver)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRoundBasedObject.OnSkyDiveStarted");

	AKSRoundBasedObject_OnSkyDiveStarted_Params params;
	params.SkyDiver = SkyDiver;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRoundBasedObject.OnSkyDiveSkipped
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AKSCharacter**           SkyDiver                       (Parm, ZeroConstructor, IsPlainOldData)

void AKSRoundBasedObject::OnSkyDiveSkipped(class AKSCharacter** SkyDiver)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRoundBasedObject.OnSkyDiveSkipped");

	AKSRoundBasedObject_OnSkyDiveSkipped_Params params;
	params.SkyDiver = SkyDiver;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRoundBasedObject.OnSkyDiveEnded
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AKSCharacter**           SkyDiver                       (Parm, ZeroConstructor, IsPlainOldData)

void AKSRoundBasedObject::OnSkyDiveEnded(class AKSCharacter** SkyDiver)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRoundBasedObject.OnSkyDiveEnded");

	AKSRoundBasedObject_OnSkyDiveEnded_Params params;
	params.SkyDiver = SkyDiver;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRoundBasedObject.OnRoundStarted
// (Event, Protected, HasOutParms, BlueprintEvent)
// Parameters:
// struct FRoundInitState*        RoundInitState                 (ConstParm, Parm, OutParm, ReferenceParm)

void AKSRoundBasedObject::OnRoundStarted(struct FRoundInitState* RoundInitState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRoundBasedObject.OnRoundStarted");

	AKSRoundBasedObject_OnRoundStarted_Params params;
	params.RoundInitState = RoundInitState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRoundBasedObject.OnRoundEnded
// (Event, Protected, HasOutParms, BlueprintEvent)
// Parameters:
// class AKSGameState**           GameState                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FRoundResult*           RoundResult                    (ConstParm, Parm, OutParm, ReferenceParm)

void AKSRoundBasedObject::OnRoundEnded(class AKSGameState** GameState, struct FRoundResult* RoundResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRoundBasedObject.OnRoundEnded");

	AKSRoundBasedObject_OnRoundEnded_Params params;
	params.GameState = GameState;
	params.RoundResult = RoundResult;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRoundBasedObject.OnGameSetup
// (Event, Protected, BlueprintEvent)

void AKSRoundBasedObject::OnGameSetup()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRoundBasedObject.OnGameSetup");

	AKSRoundBasedObject_OnGameSetup_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRoundBasedObject.IsSkyDivingActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSRoundBasedObject::IsSkyDivingActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRoundBasedObject.IsSkyDivingActive");

	AKSRoundBasedObject_IsSkyDivingActive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSRoundBasedObject.CheckPlayerForMatchingTeam
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APlayerController**      PC                             (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSRoundBasedObject::CheckPlayerForMatchingTeam(class APlayerController** PC)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRoundBasedObject.CheckPlayerForMatchingTeam");

	AKSRoundBasedObject_CheckPlayerForMatchingTeam_Params params;
	params.PC = PC;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSRoundBasedObject.CheckLocalPlayerForMatchingTeam
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSRoundBasedObject::CheckLocalPlayerForMatchingTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRoundBasedObject.CheckLocalPlayerForMatchingTeam");

	AKSRoundBasedObject_CheckLocalPlayerForMatchingTeam_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSRoundBasedObject.CheckCharacterForMatchingTeam
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AKSCharacter**           Character                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSRoundBasedObject::CheckCharacterForMatchingTeam(class AKSCharacter** Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRoundBasedObject.CheckCharacterForMatchingTeam");

	AKSRoundBasedObject_CheckCharacterForMatchingTeam_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSRoyaleSafeZone.TryToDamage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor**                 TargetActor                    (Parm, ZeroConstructor, IsPlainOldData)
// float*                         AttemptedDamage                (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSRoyaleSafeZone::TryToDamage(class AActor** TargetActor, float* AttemptedDamage)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRoyaleSafeZone.TryToDamage");

	AKSRoyaleSafeZone_TryToDamage_Params params;
	params.TargetActor = TargetActor;
	params.AttemptedDamage = AttemptedDamage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSRoyaleSafeZone.StartShrink
// (Final, Native, Public, BlueprintCallable)

void AKSRoyaleSafeZone::StartShrink()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRoyaleSafeZone.StartShrink");

	AKSRoyaleSafeZone_StartShrink_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRoyaleSafeZone.SetNewZoneParams
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float*                         NewRadius                      (Parm, ZeroConstructor, IsPlainOldData)
// float*                         TimeToChange                   (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 MustContainActor               (Parm, ZeroConstructor, IsPlainOldData)
// float*                         MustContainSafeRadius          (Parm, ZeroConstructor, IsPlainOldData)

void AKSRoyaleSafeZone::SetNewZoneParams(float* NewRadius, float* TimeToChange, class AActor** MustContainActor, float* MustContainSafeRadius)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRoyaleSafeZone.SetNewZoneParams");

	AKSRoyaleSafeZone_SetNewZoneParams_Params params;
	params.NewRadius = NewRadius;
	params.TimeToChange = TimeToChange;
	params.MustContainActor = MustContainActor;
	params.MustContainSafeRadius = MustContainSafeRadius;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRoyaleSafeZone.OnZoneActivated
// (Event, Protected, BlueprintEvent)

void AKSRoyaleSafeZone::OnZoneActivated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRoyaleSafeZone.OnZoneActivated");

	AKSRoyaleSafeZone_OnZoneActivated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRoyaleSafeZone.OnRep_ZoneActive
// (Final, Native, Private)

void AKSRoyaleSafeZone::OnRep_ZoneActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRoyaleSafeZone.OnRep_ZoneActive");

	AKSRoyaleSafeZone_OnRep_ZoneActive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRoyaleSafeZone.OnRep_NewParams
// (Final, Native, Private)

void AKSRoyaleSafeZone::OnRep_NewParams()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRoyaleSafeZone.OnRep_NewParams");

	AKSRoyaleSafeZone_OnRep_NewParams_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRoyaleSafeZone.OnCircleUpdate
// (Event, Protected, HasDefaults, BlueprintEvent)
// Parameters:
// float*                         NewRadius                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                NewLocation                    (Parm, ZeroConstructor, IsPlainOldData)

void AKSRoyaleSafeZone::OnCircleUpdate(float* NewRadius, struct FVector* NewLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRoyaleSafeZone.OnCircleUpdate");

	AKSRoyaleSafeZone_OnCircleUpdate_Params params;
	params.NewRadius = NewRadius;
	params.NewLocation = NewLocation;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRoyaleSafeZone.IsZoneActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSRoyaleSafeZone::IsZoneActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRoyaleSafeZone.IsZoneActive");

	AKSRoyaleSafeZone_IsZoneActive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSSafeZone.RevealOverlappedCharacter
// (Final, Native, Protected)
// Parameters:
// class AKSCharacter**           Character                      (Parm, ZeroConstructor, IsPlainOldData)

void AKSSafeZone::RevealOverlappedCharacter(class AKSCharacter** Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSSafeZone.RevealOverlappedCharacter");

	AKSSafeZone_RevealOverlappedCharacter_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSSceneComponentPoolStatics.SpawnTracerEmitterWithRotation
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class UParticleSystem**        EmitterTemplate                (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                start                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                end                            (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          DeactivatesOnDestinationReached (Parm, ZeroConstructor, IsPlainOldData)
// float*                         TravelSpeed                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FRotator*               Rotation                       (Parm, ZeroConstructor, IsPlainOldData)
// class UTracerParticleSystemComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UTracerParticleSystemComponent* UKSSceneComponentPoolStatics::STATIC_SpawnTracerEmitterWithRotation(class UObject** WorldContextObject, class UParticleSystem** EmitterTemplate, struct FVector* start, struct FVector* end, bool* DeactivatesOnDestinationReached, float* TravelSpeed, struct FRotator* Rotation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSSceneComponentPoolStatics.SpawnTracerEmitterWithRotation");

	UKSSceneComponentPoolStatics_SpawnTracerEmitterWithRotation_Params params;
	params.WorldContextObject = WorldContextObject;
	params.EmitterTemplate = EmitterTemplate;
	params.start = start;
	params.end = end;
	params.DeactivatesOnDestinationReached = DeactivatesOnDestinationReached;
	params.TravelSpeed = TravelSpeed;
	params.Rotation = Rotation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSSceneComponentPoolStatics.SpawnTracerEmitter
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class UParticleSystem**        EmitterTemplate                (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                start                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                end                            (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          DeactivatesOnDestinationReached (Parm, ZeroConstructor, IsPlainOldData)
// float*                         TravelSpeed                    (Parm, ZeroConstructor, IsPlainOldData)
// class UTracerParticleSystemComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UTracerParticleSystemComponent* UKSSceneComponentPoolStatics::STATIC_SpawnTracerEmitter(class UObject** WorldContextObject, class UParticleSystem** EmitterTemplate, struct FVector* start, struct FVector* end, bool* DeactivatesOnDestinationReached, float* TravelSpeed)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSSceneComponentPoolStatics.SpawnTracerEmitter");

	UKSSceneComponentPoolStatics_SpawnTracerEmitter_Params params;
	params.WorldContextObject = WorldContextObject;
	params.EmitterTemplate = EmitterTemplate;
	params.start = start;
	params.end = end;
	params.DeactivatesOnDestinationReached = DeactivatesOnDestinationReached;
	params.TravelSpeed = TravelSpeed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSSceneComponentPoolStatics.SpawnMeshTracerWithRotation
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class UStaticMesh**            StaticMesh                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                start                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                end                            (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 Instigator                     (Parm, ZeroConstructor, IsPlainOldData)
// class UMaterial**              FriendlyMaterial               (Parm, ZeroConstructor, IsPlainOldData)
// class UMaterialInstance**      EnemyMaterial                  (Parm, ZeroConstructor, IsPlainOldData)
// float*                         TravelSpeed                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FRotator*               Rotation                       (Parm, ZeroConstructor, IsPlainOldData)
// class UTracerStaticMeshComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UTracerStaticMeshComponent* UKSSceneComponentPoolStatics::STATIC_SpawnMeshTracerWithRotation(class UObject** WorldContextObject, class UStaticMesh** StaticMesh, struct FVector* start, struct FVector* end, class AActor** Instigator, class UMaterial** FriendlyMaterial, class UMaterialInstance** EnemyMaterial, float* TravelSpeed, struct FRotator* Rotation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSSceneComponentPoolStatics.SpawnMeshTracerWithRotation");

	UKSSceneComponentPoolStatics_SpawnMeshTracerWithRotation_Params params;
	params.WorldContextObject = WorldContextObject;
	params.StaticMesh = StaticMesh;
	params.start = start;
	params.end = end;
	params.Instigator = Instigator;
	params.FriendlyMaterial = FriendlyMaterial;
	params.EnemyMaterial = EnemyMaterial;
	params.TravelSpeed = TravelSpeed;
	params.Rotation = Rotation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSSceneComponentPoolStatics.SpawnMeshTracer
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// class UStaticMesh**            StaticMesh                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                start                          (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                end                            (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 Instigator                     (Parm, ZeroConstructor, IsPlainOldData)
// class UMaterial**              FriendlyMaterial               (Parm, ZeroConstructor, IsPlainOldData)
// class UMaterialInstance**      EnemyMaterial                  (Parm, ZeroConstructor, IsPlainOldData)
// float*                         TravelSpeed                    (Parm, ZeroConstructor, IsPlainOldData)
// class UTracerStaticMeshComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UTracerStaticMeshComponent* UKSSceneComponentPoolStatics::STATIC_SpawnMeshTracer(class UObject** WorldContextObject, class UStaticMesh** StaticMesh, struct FVector* start, struct FVector* end, class AActor** Instigator, class UMaterial** FriendlyMaterial, class UMaterialInstance** EnemyMaterial, float* TravelSpeed)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSSceneComponentPoolStatics.SpawnMeshTracer");

	UKSSceneComponentPoolStatics_SpawnMeshTracer_Params params;
	params.WorldContextObject = WorldContextObject;
	params.StaticMesh = StaticMesh;
	params.start = start;
	params.end = end;
	params.Instigator = Instigator;
	params.FriendlyMaterial = FriendlyMaterial;
	params.EnemyMaterial = EnemyMaterial;
	params.TravelSpeed = TravelSpeed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSSceneComponentPoolStatics.SpawnAkComponentAtLocation
// (Final, BlueprintCosmetic, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UAkAudioEvent**          AkEvent                        (Parm, ZeroConstructor, IsPlainOldData)
// class UAkAuxBus**              EarlyReflectionsBus            (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                Location                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FRotator*               Orientation                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FString*                EventName                      (Parm, ZeroConstructor)
// struct FString*                EarlyReflectionsBusName        (Parm, ZeroConstructor)
// EOcclusionType*                OcclusionType                  (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          UseDistance                    (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          UseDirection                   (Parm, ZeroConstructor, IsPlainOldData)
// class UAkComponent*            ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UAkComponent* UKSSceneComponentPoolStatics::STATIC_SpawnAkComponentAtLocation(class UObject** WorldContextObject, class UAkAudioEvent** AkEvent, class UAkAuxBus** EarlyReflectionsBus, struct FVector* Location, struct FRotator* Orientation, struct FString* EventName, struct FString* EarlyReflectionsBusName, EOcclusionType* OcclusionType, bool* UseDistance, bool* UseDirection)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSSceneComponentPoolStatics.SpawnAkComponentAtLocation");

	UKSSceneComponentPoolStatics_SpawnAkComponentAtLocation_Params params;
	params.WorldContextObject = WorldContextObject;
	params.AkEvent = AkEvent;
	params.EarlyReflectionsBus = EarlyReflectionsBus;
	params.Location = Location;
	params.Orientation = Orientation;
	params.EventName = EventName;
	params.EarlyReflectionsBusName = EarlyReflectionsBusName;
	params.OcclusionType = OcclusionType;
	params.UseDistance = UseDistance;
	params.UseDirection = UseDirection;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSSceneComponentPoolStatics.SetSwitchOnNextAkComponentInPool
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FName*                  SwitchGroup                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FName*                  SwitchState                    (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSSceneComponentPoolStatics::STATIC_SetSwitchOnNextAkComponentInPool(class UObject** WorldContextObject, struct FName* SwitchGroup, struct FName* SwitchState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSSceneComponentPoolStatics.SetSwitchOnNextAkComponentInPool");

	UKSSceneComponentPoolStatics_SetSwitchOnNextAkComponentInPool_Params params;
	params.WorldContextObject = WorldContextObject;
	params.SwitchGroup = SwitchGroup;
	params.SwitchState = SwitchState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSSceneComponentPoolStatics.SetRTPCValueOnNextAkComponentInPool
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FName*                  RTPC                           (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Value                          (Parm, ZeroConstructor, IsPlainOldData)
// int*                           InterpolationTimeMs            (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSSceneComponentPoolStatics::STATIC_SetRTPCValueOnNextAkComponentInPool(class UObject** WorldContextObject, struct FName* RTPC, float* Value, int* InterpolationTimeMs)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSSceneComponentPoolStatics.SetRTPCValueOnNextAkComponentInPool");

	UKSSceneComponentPoolStatics_SetRTPCValueOnNextAkComponentInPool_Params params;
	params.WorldContextObject = WorldContextObject;
	params.RTPC = RTPC;
	params.Value = Value;
	params.InterpolationTimeMs = InterpolationTimeMs;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSShield.SetShieldEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          ShieldEnabled                  (Parm, ZeroConstructor, IsPlainOldData)

void AKSShield::SetShieldEnabled(bool* ShieldEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSShield.SetShieldEnabled");

	AKSShield_SetShieldEnabled_Params params;
	params.ShieldEnabled = ShieldEnabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSShield.OnRep_ShieldEnabled
// (Final, Native, Private)

void AKSShield::OnRep_ShieldEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSShield.OnRep_ShieldEnabled");

	AKSShield_OnRep_ShieldEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSShield.OnRep_Health
// (Final, Native, Private)

void AKSShield::OnRep_Health()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSShield.OnRep_Health");

	AKSShield_OnRep_Health_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSShopRuleComponent.GetShopForPlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AKSPlayerState**         InPlayerState                  (Parm, ZeroConstructor, IsPlainOldData)
// class AKSPlayerShop*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AKSPlayerShop* UKSShopRuleComponent::GetShopForPlayer(class AKSPlayerState** InPlayerState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSShopRuleComponent.GetShopForPlayer");

	UKSShopRuleComponent_GetShopForPlayer_Params params;
	params.InPlayerState = InPlayerState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSSkinBundle.IsStarterSkin
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSSkinBundle::IsStarterSkin()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSSkinBundle.IsStarterSkin");

	UKSSkinBundle_IsStarterSkin_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSSkinBundle.GetSkinImage
// (Final, Native, Public, BlueprintCallable, BlueprintPure)

void UKSSkinBundle::GetSkinImage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSSkinBundle.GetSkinImage");

	UKSSkinBundle_GetSkinImage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSSpecialty.GetDynamicPoseImage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool*                          bAllowSyncLoad                 (Parm, ZeroConstructor, IsPlainOldData)
// class UTexture2D*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UTexture2D* UKSSpecialty::GetDynamicPoseImage(bool* bAllowSyncLoad)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSSpecialty.GetDynamicPoseImage");

	UKSSpecialty_GetDynamicPoseImage_Params params;
	params.bAllowSyncLoad = bAllowSyncLoad;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSSprintCameraShake.StopShakeOnStopSprint
// (Native, Protected)
// Parameters:
// bool*                          NewSprint                      (Parm, ZeroConstructor, IsPlainOldData)

void UKSSprintCameraShake::StopShakeOnStopSprint(bool* NewSprint)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSSprintCameraShake.StopShakeOnStopSprint");

	UKSSprintCameraShake_StopShakeOnStopSprint_Params params;
	params.NewSprint = NewSprint;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerMatchStats.GetStat
// (Native, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// EPlayerStatType*               StatType                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FPlayerMatchStatInfo    OutStat                        (Parm, OutParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSPlayerMatchStats::GetStat(EPlayerStatType* StatType, struct FPlayerMatchStatInfo* OutStat)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMatchStats.GetStat");

	UKSPlayerMatchStats_GetStat_Params params;
	params.StatType = StatType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutStat != nullptr)
		*OutStat = params.OutStat;

	return params.ReturnValue;
}


// Function Killstreak.KSStoreItemHelper.HasPortalOffers
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSStoreItemHelper::HasPortalOffers()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSStoreItemHelper.HasPortalOffers");

	UKSStoreItemHelper_HasPortalOffers_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSSwimmingAnimInst.SwimNotifyTransitionStateLock
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                          bShouldLock                    (Parm, ZeroConstructor, IsPlainOldData)

void UKSSwimmingAnimInst::SwimNotifyTransitionStateLock(bool* bShouldLock)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSSwimmingAnimInst.SwimNotifyTransitionStateLock");

	UKSSwimmingAnimInst_SwimNotifyTransitionStateLock_Params params;
	params.bShouldLock = bShouldLock;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSSwimmingAnimInst.SwimNotifyTransitionEnd
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UKSSwimmingAnimInst::SwimNotifyTransitionEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSSwimmingAnimInst.SwimNotifyTransitionEnd");

	UKSSwimmingAnimInst_SwimNotifyTransitionEnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTabletAnimInstance.OpenTablet
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSTabletAnimInstance::OpenTablet()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTabletAnimInstance.OpenTablet");

	UKSTabletAnimInstance_OpenTablet_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSTabletAnimInstance.FullyOpened
// (Final, Native, Protected, BlueprintCallable)

void UKSTabletAnimInstance::FullyOpened()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTabletAnimInstance.FullyOpened");

	UKSTabletAnimInstance_FullyOpened_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTabletAnimInstance.FullyClosed
// (Final, Native, Protected, BlueprintCallable)

void UKSTabletAnimInstance::FullyClosed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTabletAnimInstance.FullyClosed");

	UKSTabletAnimInstance_FullyClosed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTabletAnimInstance.CloseTablet
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSTabletAnimInstance::CloseTablet()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTabletAnimInstance.CloseTablet");

	UKSTabletAnimInstance_CloseTablet_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSTabletAnimInstance.CheckFullyOpened
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSTabletAnimInstance::CheckFullyOpened()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTabletAnimInstance.CheckFullyOpened");

	UKSTabletAnimInstance_CheckFullyOpened_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSTabletAnimInstance.CheckFullyClosed
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSTabletAnimInstance::CheckFullyClosed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTabletAnimInstance.CheckFullyClosed");

	UKSTabletAnimInstance_CheckFullyClosed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSTabletMeshComponent.OpenTablet
// (Final, Native, Public, BlueprintCallable)

void UKSTabletMeshComponent::OpenTablet()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTabletMeshComponent.OpenTablet");

	UKSTabletMeshComponent_OpenTablet_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTabletMeshComponent.OnOpenComplete
// (Final, Native, Public)

void UKSTabletMeshComponent::OnOpenComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTabletMeshComponent.OnOpenComplete");

	UKSTabletMeshComponent_OnOpenComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTabletMeshComponent.OnCloseComplete
// (Final, Native, Public)

void UKSTabletMeshComponent::OnCloseComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTabletMeshComponent.OnCloseComplete");

	UKSTabletMeshComponent_OnCloseComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTabletMeshComponent.CloseTablet
// (Final, Native, Public, BlueprintCallable)

void UKSTabletMeshComponent::CloseTablet()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTabletMeshComponent.CloseTablet");

	UKSTabletMeshComponent_CloseTablet_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTeamKillTracker.StoreCombatInfo
// (Final, Native, Public)
// Parameters:
// struct FCombatEventInfo*       ElimEvent                      (Parm)

void UKSTeamKillTracker::StoreCombatInfo(struct FCombatEventInfo* ElimEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTeamKillTracker.StoreCombatInfo");

	UKSTeamKillTracker_StoreCombatInfo_Params params;
	params.ElimEvent = ElimEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTeamKillTracker.HasEliminateVictim
// (Final, Native, Public)
// Parameters:
// struct FPlayerTeamTracker*     PlayerTeamTracker              (Parm)
// int*                           VictimPlayerId                 (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSTeamKillTracker::HasEliminateVictim(struct FPlayerTeamTracker* PlayerTeamTracker, int* VictimPlayerId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTeamKillTracker.HasEliminateVictim");

	UKSTeamKillTracker_HasEliminateVictim_Params params;
	params.PlayerTeamTracker = PlayerTeamTracker;
	params.VictimPlayerId = VictimPlayerId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSTeamKillTracker.ContainsPlayer
// (Final, Native, Public, HasOutParms)
// Parameters:
// class AKSPlayerState**         PlayerState                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FPlayerTeamTracker      PlayerTeamTracker              (Parm, OutParm)
// int                            TrackerIndex                   (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSTeamKillTracker::ContainsPlayer(class AKSPlayerState** PlayerState, struct FPlayerTeamTracker* PlayerTeamTracker, int* TrackerIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTeamKillTracker.ContainsPlayer");

	UKSTeamKillTracker_ContainsPlayer_Params params;
	params.PlayerState = PlayerState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (PlayerTeamTracker != nullptr)
		*PlayerTeamTracker = params.PlayerTeamTracker;
	if (TrackerIndex != nullptr)
		*TrackerIndex = params.TrackerIndex;

	return params.ReturnValue;
}


// Function Killstreak.KSTeamKillTracker.CheckRequirements
// (Final, Native, Public)
// Parameters:
// struct FCombatEventInfo*       ElimEvent                      (Parm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSTeamKillTracker::CheckRequirements(struct FCombatEventInfo* ElimEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTeamKillTracker.CheckRequirements");

	UKSTeamKillTracker_CheckRequirements_Params params;
	params.ElimEvent = ElimEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSTeamState.ShouldKeepTeamAlive
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSTeamState::ShouldKeepTeamAlive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTeamState.ShouldKeepTeamAlive");

	AKSTeamState_ShouldKeepTeamAlive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSTeamState.ResetTeamElimination
// (Final, Native, Public, BlueprintCallable)

void AKSTeamState::ResetTeamElimination()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTeamState.ResetTeamElimination");

	AKSTeamState_ResetTeamElimination_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTeamState.OnTeamUpdated
// (Native, Protected)

void AKSTeamState::OnTeamUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTeamState.OnTeamUpdated");

	AKSTeamState_OnTeamUpdated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTeamState.OnTeamMemberRemoved
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class AKSPlayerState**         LostMember                     (Parm, ZeroConstructor, IsPlainOldData)

void AKSTeamState::OnTeamMemberRemoved(class AKSPlayerState** LostMember)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTeamState.OnTeamMemberRemoved");

	AKSTeamState_OnTeamMemberRemoved_Params params;
	params.LostMember = LostMember;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTeamState.OnTeamMemberEliminated
// (Event, Public, BlueprintEvent)
// Parameters:
// class AKSPlayerState**         Member                         (Parm, ZeroConstructor, IsPlainOldData)

void AKSTeamState::OnTeamMemberEliminated(class AKSPlayerState** Member)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTeamState.OnTeamMemberEliminated");

	AKSTeamState_OnTeamMemberEliminated_Params params;
	params.Member = Member;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTeamState.OnTeamMemberDowned
// (Event, Public, BlueprintEvent)
// Parameters:
// class AKSPlayerState**         Member                         (Parm, ZeroConstructor, IsPlainOldData)

void AKSTeamState::OnTeamMemberDowned(class AKSPlayerState** Member)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTeamState.OnTeamMemberDowned");

	AKSTeamState_OnTeamMemberDowned_Params params;
	params.Member = Member;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTeamState.OnTeamMemberAdded
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class AKSPlayerState**         NewMember                      (Parm, ZeroConstructor, IsPlainOldData)

void AKSTeamState::OnTeamMemberAdded(class AKSPlayerState** NewMember)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTeamState.OnTeamMemberAdded");

	AKSTeamState_OnTeamMemberAdded_Params params;
	params.NewMember = NewMember;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTeamState.OnRep_TeamEliminatedOrDowned
// (Native, Protected)

void AKSTeamState::OnRep_TeamEliminatedOrDowned()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTeamState.OnRep_TeamEliminatedOrDowned");

	AKSTeamState_OnRep_TeamEliminatedOrDowned_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTeamState.OnRep_TeamEliminated
// (Native, Protected)

void AKSTeamState::OnRep_TeamEliminated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTeamState.OnRep_TeamEliminated");

	AKSTeamState_OnRep_TeamEliminated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTeamState.OnRep_Respawns
// (Final, Native, Protected)

void AKSTeamState::OnRep_Respawns()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTeamState.OnRep_Respawns");

	AKSTeamState_OnRep_Respawns_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTeamState.OnRep_JobSelectionComponent
// (Final, Native, Protected)

void AKSTeamState::OnRep_JobSelectionComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTeamState.OnRep_JobSelectionComponent");

	AKSTeamState_OnRep_JobSelectionComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTeamState.NewPingRequest
// (Final, Native, Public, HasOutParms)
// Parameters:
// struct FPingInfo*              PingInfo                       (ConstParm, Parm, OutParm, ReferenceParm)

void AKSTeamState::NewPingRequest(struct FPingInfo* PingInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTeamState.NewPingRequest");

	AKSTeamState_NewPingRequest_Params params;
	params.PingInfo = PingInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTeamState.NewPingRemoveRequest
// (Final, Native, Public)
// Parameters:
// int*                           PingId                         (Parm, ZeroConstructor, IsPlainOldData)
// class AKSPlayerState**         PingingPlayer                  (Parm, ZeroConstructor, IsPlainOldData)

void AKSTeamState::NewPingRemoveRequest(int* PingId, class AKSPlayerState** PingingPlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTeamState.NewPingRemoveRequest");

	AKSTeamState_NewPingRemoveRequest_Params params;
	params.PingId = PingId;
	params.PingingPlayer = PingingPlayer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTeamState.IsEliminated
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSTeamState::IsEliminated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTeamState.IsEliminated");

	AKSTeamState_IsEliminated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSTeamState.IsDefending
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSTeamState::IsDefending()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTeamState.IsDefending");

	AKSTeamState_IsDefending_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSTeamState.IsAttacking
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSTeamState::IsAttacking()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTeamState.IsAttacking");

	AKSTeamState_IsAttacking_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSTeamState.GetTeamType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EExtractionTeamType            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EExtractionTeamType AKSTeamState::GetTeamType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTeamState.GetTeamType");

	AKSTeamState_GetTeamType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSTeamState.GetRespawnConfig
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FKSRespawnConfig        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FKSRespawnConfig AKSTeamState::GetRespawnConfig()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTeamState.GetRespawnConfig");

	AKSTeamState_GetRespawnConfig_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSTeamState.GetPlayersRemaining
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool*                          DownAsDead                     (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AKSTeamState::GetPlayersRemaining(bool* DownAsDead)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTeamState.GetPlayersRemaining");

	AKSTeamState_GetPlayersRemaining_Params params;
	params.DownAsDead = DownAsDead;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSTeamState.GetNumberOfPlayers
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AKSTeamState::GetNumberOfPlayers()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTeamState.GetNumberOfPlayers");

	AKSTeamState_GetNumberOfPlayers_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSTeamState.GetLivesRemaining
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool*                          CountDowned                    (Parm, ZeroConstructor, IsPlainOldData)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int AKSTeamState::GetLivesRemaining(bool* CountDowned)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTeamState.GetLivesRemaining");

	AKSTeamState_GetLivesRemaining_Params params;
	params.CountDowned = CountDowned;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSTeamState.GetAllMembers
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class AKSPlayerState*>  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class AKSPlayerState*> AKSTeamState::GetAllMembers()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTeamState.GetAllMembers");

	AKSTeamState_GetAllMembers_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSTeamState.EliminateTeam
// (Final, Native, Public, BlueprintCallable)

void AKSTeamState::EliminateTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTeamState.EliminateTeam");

	AKSTeamState_EliminateTeam_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTeamState.AllPlayersEliminatedOrDowned
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSTeamState::AllPlayersEliminatedOrDowned()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTeamState.AllPlayersEliminatedOrDowned");

	AKSTeamState_AllPlayersEliminatedOrDowned_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSThreatComponent.DebugThreatLevels
// (Event, Public, BlueprintEvent)
// Parameters:
// bool*                          Show                           (Parm, ZeroConstructor, IsPlainOldData)

void UKSThreatComponent::DebugThreatLevels(bool* Show)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSThreatComponent.DebugThreatLevels");

	UKSThreatComponent_DebugThreatLevels_Params params;
	params.Show = Show;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTimerComponent.OnRep_Active
// (Final, Native, Private)

void UKSTimerComponent::OnRep_Active()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTimerComponent.OnRep_Active");

	UKSTimerComponent_OnRep_Active_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTimerComponent.BroadcastTimerComplete
// (Net, Native, Event, NetMulticast, Protected)

void UKSTimerComponent::BroadcastTimerComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTimerComponent.BroadcastTimerComplete");

	UKSTimerComponent_BroadcastTimerComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.VehicleHit
// (Native, Protected, HasOutParms, HasDefaults)
// Parameters:
// class UPrimitiveComponent**    HitComponent                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class AActor**                 OtherActor                     (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent**    OtherComponent                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FVector*                NormalImpulse                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FHitResult*             Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void AKSVehicle::VehicleHit(class UPrimitiveComponent** HitComponent, class AActor** OtherActor, class UPrimitiveComponent** OtherComponent, struct FVector* NormalImpulse, struct FHitResult* Hit)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.VehicleHit");

	AKSVehicle_VehicleHit_Params params;
	params.HitComponent = HitComponent;
	params.OtherActor = OtherActor;
	params.OtherComponent = OtherComponent;
	params.NormalImpulse = NormalImpulse;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.VehicleFeatureReleased
// (Native, Protected)

void AKSVehicle::VehicleFeatureReleased()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.VehicleFeatureReleased");

	AKSVehicle_VehicleFeatureReleased_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.VehicleFeaturePressed
// (Native, Protected)

void AKSVehicle::VehicleFeaturePressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.VehicleFeaturePressed");

	AKSVehicle_VehicleFeaturePressed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.VehicleFeature
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool*                          Pressed                        (Parm, ZeroConstructor, IsPlainOldData)

void AKSVehicle::VehicleFeature(bool* Pressed)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.VehicleFeature");

	AKSVehicle_VehicleFeature_Params params;
	params.Pressed = Pressed;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.UseReleased
// (Native, Protected)

void AKSVehicle::UseReleased()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.UseReleased");

	AKSVehicle_UseReleased_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.UsePressed
// (Native, Protected)

void AKSVehicle::UsePressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.UsePressed");

	AKSVehicle_UsePressed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.TurnCameraY
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// float*                         Rate                           (Parm, ZeroConstructor, IsPlainOldData)

void AKSVehicle::TurnCameraY(float* Rate)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.TurnCameraY");

	AKSVehicle_TurnCameraY_Params params;
	params.Rate = Rate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.TurnCameraX
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// float*                         Rate                           (Parm, ZeroConstructor, IsPlainOldData)

void AKSVehicle::TurnCameraX(float* Rate)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.TurnCameraX");

	AKSVehicle_TurnCameraX_Params params;
	params.Rate = Rate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.SwapReleased
// (Native, Protected)

void AKSVehicle::SwapReleased()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.SwapReleased");

	AKSVehicle_SwapReleased_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.SwapPressed
// (Native, Protected)

void AKSVehicle::SwapPressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.SwapPressed");

	AKSVehicle_SwapPressed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.StopParachute
// (Native, Event, Public, BlueprintEvent)

void AKSVehicle::StopParachute()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.StopParachute");

	AKSVehicle_StopParachute_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.Steer
// (Native, Protected)
// Parameters:
// float*                         Value                          (Parm, ZeroConstructor, IsPlainOldData)

void AKSVehicle::Steer(float* Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.Steer");

	AKSVehicle_Steer_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.StartParachute
// (Native, Event, Public, BlueprintEvent)

void AKSVehicle::StartParachute()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.StartParachute");

	AKSVehicle_StartParachute_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.ServerVehicleFeature
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool*                          Pressed                        (Parm, ZeroConstructor, IsPlainOldData)

void AKSVehicle::ServerVehicleFeature(bool* Pressed)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.ServerVehicleFeature");

	AKSVehicle_ServerVehicleFeature_Params params;
	params.Pressed = Pressed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.ServerUpdateRotation
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// struct FReplicatedViewInfo*    NewViewInfo                    (Parm, ZeroConstructor, IsPlainOldData)

void AKSVehicle::ServerUpdateRotation(struct FReplicatedViewInfo* NewViewInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.ServerUpdateRotation");

	AKSVehicle_ServerUpdateRotation_Params params;
	params.NewViewInfo = NewViewInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.ServerHorn
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool*                          Pressed                        (Parm, ZeroConstructor, IsPlainOldData)

void AKSVehicle::ServerHorn(bool* Pressed)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.ServerHorn");

	AKSVehicle_ServerHorn_Params params;
	params.Pressed = Pressed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.ServerGetOut
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AKSCharacter**           Rider                          (Parm, ZeroConstructor, IsPlainOldData)

void AKSVehicle::ServerGetOut(class AKSCharacter** Rider)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.ServerGetOut");

	AKSVehicle_ServerGetOut_Params params;
	params.Rider = Rider;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.ServerGetInNextEmptySeat
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AKSCharacter**           Rider                          (Parm, ZeroConstructor, IsPlainOldData)

void AKSVehicle::ServerGetInNextEmptySeat(class AKSCharacter** Rider)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.ServerGetInNextEmptySeat");

	AKSVehicle_ServerGetInNextEmptySeat_Params params;
	params.Rider = Rider;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.ServerAirSpeed
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// float*                         Value                          (Parm, ZeroConstructor, IsPlainOldData)

void AKSVehicle::ServerAirSpeed(float* Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.ServerAirSpeed");

	AKSVehicle_ServerAirSpeed_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.RiderDestroyed
// (Final, Native, Protected)
// Parameters:
// class AActor**                 DestroyedActor                 (Parm, ZeroConstructor, IsPlainOldData)

void AKSVehicle::RiderDestroyed(class AActor** DestroyedActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.RiderDestroyed");

	AKSVehicle_RiderDestroyed_Params params;
	params.DestroyedActor = DestroyedActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.ResetVehicle
// (Native, Event, Protected, HasOutParms, BlueprintEvent)
// Parameters:
// struct FRoundInitState*        RoundInitState                 (ConstParm, Parm, OutParm, ReferenceParm)

void AKSVehicle::ResetVehicle(struct FRoundInitState* RoundInitState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.ResetVehicle");

	AKSVehicle_ResetVehicle_Params params;
	params.RoundInitState = RoundInitState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.ResetInput
// (Final, Native, Protected)

void AKSVehicle::ResetInput()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.ResetInput");

	AKSVehicle_ResetInput_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.ResetCameraRotations
// (Final, Native, Protected)

void AKSVehicle::ResetCameraRotations()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.ResetCameraRotations");

	AKSVehicle_ResetCameraRotations_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.PlayHealthStageChange
// (Event, Protected, HasOutParms, BlueprintEvent)
// Parameters:
// struct FKSVehicleDestructionStage* Stage                          (ConstParm, Parm, OutParm, ReferenceParm)

void AKSVehicle::PlayHealthStageChange(struct FKSVehicleDestructionStage* Stage)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.PlayHealthStageChange");

	AKSVehicle_PlayHealthStageChange_Params params;
	params.Stage = Stage;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.OnRep_Riders
// (Final, Native, Protected)

void AKSVehicle::OnRep_Riders()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.OnRep_Riders");

	AKSVehicle_OnRep_Riders_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.OnRep_Driver
// (Final, Native, Protected)

void AKSVehicle::OnRep_Driver()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.OnRep_Driver");

	AKSVehicle_OnRep_Driver_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.OnRep_Destroyed
// (Final, Native, Protected)

void AKSVehicle::OnRep_Destroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.OnRep_Destroyed");

	AKSVehicle_OnRep_Destroyed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.OnRep_CurrentHealthStage
// (Final, Native, Protected)

void AKSVehicle::OnRep_CurrentHealthStage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.OnRep_CurrentHealthStage");

	AKSVehicle_OnRep_CurrentHealthStage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.OnRep_CurrentHealth
// (Final, Native, Protected)

void AKSVehicle::OnRep_CurrentHealth()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.OnRep_CurrentHealth");

	AKSVehicle_OnRep_CurrentHealth_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.MoveForward
// (Native, Protected)
// Parameters:
// float*                         Value                          (Parm, ZeroConstructor, IsPlainOldData)

void AKSVehicle::MoveForward(float* Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.MoveForward");

	AKSVehicle_MoveForward_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.HornReleased
// (Native, Protected)

void AKSVehicle::HornReleased()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.HornReleased");

	AKSVehicle_HornReleased_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.HornPressed
// (Native, Protected)

void AKSVehicle::HornPressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.HornPressed");

	AKSVehicle_HornPressed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.Horn
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool*                          Pressed                        (Parm, ZeroConstructor, IsPlainOldData)

void AKSVehicle::Horn(bool* Pressed)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.Horn");

	AKSVehicle_Horn_Params params;
	params.Pressed = Pressed;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.HideParachute
// (Final, Native, Protected)

void AKSVehicle::HideParachute()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.HideParachute");

	AKSVehicle_HideParachute_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.GetInHighestPriorityEmptySeat
// (Native, Public, BlueprintCallable)
// Parameters:
// class AKSCharacter**           Rider                          (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSVehicle::GetInHighestPriorityEmptySeat(class AKSCharacter** Rider)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.GetInHighestPriorityEmptySeat");

	AKSVehicle_GetInHighestPriorityEmptySeat_Params params;
	params.Rider = Rider;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSVehicle.GetDriver
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AKSCharacter*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AKSCharacter* AKSVehicle::GetDriver()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.GetDriver");

	AKSVehicle_GetDriver_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSVehicle.Explode
// (Event, Protected, BlueprintEvent)

void AKSVehicle::Explode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.Explode");

	AKSVehicle_Explode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.ExitPressed
// (Native, Protected)

void AKSVehicle::ExitPressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.ExitPressed");

	AKSVehicle_ExitPressed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.Deteriorate
// (Final, Native, Protected)

void AKSVehicle::Deteriorate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.Deteriorate");

	AKSVehicle_Deteriorate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.BroadcastVehicleFeature
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// bool*                          Pressed                        (Parm, ZeroConstructor, IsPlainOldData)

void AKSVehicle::BroadcastVehicleFeature(bool* Pressed)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.BroadcastVehicleFeature");

	AKSVehicle_BroadcastVehicleFeature_Params params;
	params.Pressed = Pressed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.BroadcastHorn
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// bool*                          Pressed                        (Parm, ZeroConstructor, IsPlainOldData)

void AKSVehicle::BroadcastHorn(bool* Pressed)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.BroadcastHorn");

	AKSVehicle_BroadcastHorn_Params params;
	params.Pressed = Pressed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.Brake
// (Native, Protected)
// Parameters:
// float*                         Value                          (Parm, ZeroConstructor, IsPlainOldData)

void AKSVehicle::Brake(float* Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.Brake");

	AKSVehicle_Brake_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.AirSpeed
// (Native, Protected)
// Parameters:
// float*                         Value                          (Parm, ZeroConstructor, IsPlainOldData)

void AKSVehicle::AirSpeed(float* Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.AirSpeed");

	AKSVehicle_AirSpeed_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle_Remote.SetOwningCharacter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AKSCharacter**           Rider                          (Parm, ZeroConstructor, IsPlainOldData)

void AKSVehicle_Remote::SetOwningCharacter(class AKSCharacter** Rider)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle_Remote.SetOwningCharacter");

	AKSVehicle_Remote_SetOwningCharacter_Params params;
	params.Rider = Rider;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle_Remote.OnRep_OwningCharacter
// (Final, Native, Protected)

void AKSVehicle_Remote::OnRep_OwningCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle_Remote.OnRep_OwningCharacter");

	AKSVehicle_Remote_OnRep_OwningCharacter_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle_Remote.Jump
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void AKSVehicle_Remote::Jump()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle_Remote.Jump");

	AKSVehicle_Remote_Jump_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle_Remote.GetRemainingBattery
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          RemainingTime                  (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// float                          TotalTime                      (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void AKSVehicle_Remote::GetRemainingBattery(float* RemainingTime, float* TotalTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle_Remote.GetRemainingBattery");

	AKSVehicle_Remote_GetRemainingBattery_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (RemainingTime != nullptr)
		*RemainingTime = params.RemainingTime;
	if (TotalTime != nullptr)
		*TotalTime = params.TotalTime;
}


// Function Killstreak.KSVehicle_Remote.ExecuteReveal
// (Final, Native, Protected)

void AKSVehicle_Remote::ExecuteReveal()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle_Remote.ExecuteReveal");

	AKSVehicle_Remote_ExecuteReveal_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicleMovementComponent4W.StopParachute
// (Final, Native, Protected)

void UKSVehicleMovementComponent4W::StopParachute()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicleMovementComponent4W.StopParachute");

	UKSVehicleMovementComponent4W_StopParachute_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicleMovementComponent4W.StartParachute
// (Final, Native, Protected)

void UKSVehicleMovementComponent4W::StartParachute()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicleMovementComponent4W.StartParachute");

	UKSVehicleMovementComponent4W_StartParachute_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicleMovementComponent4W.OnRep_ParachuteDeployed
// (Final, Native, Protected)

void UKSVehicleMovementComponent4W::OnRep_ParachuteDeployed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicleMovementComponent4W.OnRep_ParachuteDeployed");

	UKSVehicleMovementComponent4W_OnRep_ParachuteDeployed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicleMovementComponent4W.OnRep_ManualDetachmentAllowed
// (Final, Native, Protected)

void UKSVehicleMovementComponent4W::OnRep_ManualDetachmentAllowed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicleMovementComponent4W.OnRep_ManualDetachmentAllowed");

	UKSVehicleMovementComponent4W_OnRep_ManualDetachmentAllowed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicleMovementComponent4W.AttemptManualDetachment
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void UKSVehicleMovementComponent4W::AttemptManualDetachment()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicleMovementComponent4W.AttemptManualDetachment");

	UKSVehicleMovementComponent4W_AttemptManualDetachment_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicleSeatComponent.GetSeatSpringArm
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USpringArmComponent*     ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class USpringArmComponent* UKSVehicleSeatComponent::GetSeatSpringArm()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicleSeatComponent.GetSeatSpringArm");

	UKSVehicleSeatComponent_GetSeatSpringArm_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSViewModel.BeginRotationReset
// (Final, Native, Private)

void AKSViewModel::BeginRotationReset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSViewModel.BeginRotationReset");

	AKSViewModel_BeginRotationReset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSViewModelInterface.GetViewModelName
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FName                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FName UKSViewModelInterface::GetViewModelName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSViewModelInterface.GetViewModelName");

	UKSViewModelInterface_GetViewModelName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSVOComponent.TeamStateChanged
// (Final, Native, Protected)
// Parameters:
// class AKSPlayerState**         PlayerState                    (Parm, ZeroConstructor, IsPlainOldData)

void UKSVOComponent::TeamStateChanged(class AKSPlayerState** PlayerState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVOComponent.TeamStateChanged");

	UKSVOComponent_TeamStateChanged_Params params;
	params.PlayerState = PlayerState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVOComponent.ServerPostVO
// (Net, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FKSVoicelineEvent*      VoicelineEvent                 (Parm)

void UKSVOComponent::ServerPostVO(struct FKSVoicelineEvent* VoicelineEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVOComponent.ServerPostVO");

	UKSVOComponent_ServerPostVO_Params params;
	params.VoicelineEvent = VoicelineEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVOComponent.PostVOToServer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FKSVoicelineEvent*      VoicelineEvent                 (Parm)

void UKSVOComponent::PostVOToServer(struct FKSVoicelineEvent* VoicelineEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVOComponent.PostVOToServer");

	UKSVOComponent_PostVOToServer_Params params;
	params.VoicelineEvent = VoicelineEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVOComponent.PostVO
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FKSVoicelineEvent*      VoicelineEvent                 (Parm)

void UKSVOComponent::PostVO(struct FKSVoicelineEvent* VoicelineEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVOComponent.PostVO");

	UKSVOComponent_PostVO_Params params;
	params.VoicelineEvent = VoicelineEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVOComponent.PlayVO
// (Net, Native, Event, NetMulticast, Protected)
// Parameters:
// struct FKSVoicelineEvent*      VoicelineEvent                 (ConstParm, Parm, ReferenceParm)

void UKSVOComponent::PlayVO(struct FKSVoicelineEvent* VoicelineEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVOComponent.PlayVO");

	UKSVOComponent_PlayVO_Params params;
	params.VoicelineEvent = VoicelineEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVOComponent.PlayerStateChanged
// (Final, Native, Protected)
// Parameters:
// class AKSPlayerState**         PlayerState                    (Parm, ZeroConstructor, IsPlainOldData)

void UKSVOComponent::PlayerStateChanged(class AKSPlayerState** PlayerState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVOComponent.PlayerStateChanged");

	UKSVOComponent_PlayerStateChanged_Params params;
	params.PlayerState = PlayerState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVOComponent.OwnerPossessedBy
// (Final, Native, Protected)
// Parameters:
// class AController**            Controller                     (Parm, ZeroConstructor, IsPlainOldData)

void UKSVOComponent::OwnerPossessedBy(class AController** Controller)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVOComponent.OwnerPossessedBy");

	UKSVOComponent_OwnerPossessedBy_Params params;
	params.Controller = Controller;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVOComponent.OnReadyToPlay
// (Final, Native, Protected)

void UKSVOComponent::OnReadyToPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVOComponent.OnReadyToPlay");

	UKSVOComponent_OnReadyToPlay_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVOComponent.BindToTeamStateEvents
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class AKSTeamState**           TeamState                      (Parm, ZeroConstructor, IsPlainOldData)

void UKSVOComponent::BindToTeamStateEvents(class AKSTeamState** TeamState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVOComponent.BindToTeamStateEvents");

	UKSVOComponent_BindToTeamStateEvents_Params params;
	params.TeamState = TeamState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVOComponent.BindToPlayerStateEvents
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class AKSPlayerState**         PlayerState                    (Parm, ZeroConstructor, IsPlainOldData)

void UKSVOComponent::BindToPlayerStateEvents(class AKSPlayerState** PlayerState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVOComponent.BindToPlayerStateEvents");

	UKSVOComponent_BindToPlayerStateEvents_Params params;
	params.PlayerState = PlayerState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVOComponent.BindToPlayerControllerEvents
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class AKSPlayerController**    PlayerController               (Parm, ZeroConstructor, IsPlainOldData)

void UKSVOComponent::BindToPlayerControllerEvents(class AKSPlayerController** PlayerController)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVOComponent.BindToPlayerControllerEvents");

	UKSVOComponent_BindToPlayerControllerEvents_Params params;
	params.PlayerController = PlayerController;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVOComponent.BindToPingManagerEvents
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class UKSPingManager**         PingManager                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UKSVOComponent::BindToPingManagerEvents(class UKSPingManager** PingManager)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVOComponent.BindToPingManagerEvents");

	UKSVOComponent_BindToPingManagerEvents_Params params;
	params.PingManager = PingManager;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVOComponent.BindToGameStateEvents
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class AKSGameState**           GameState                      (Parm, ZeroConstructor, IsPlainOldData)

void UKSVOComponent::BindToGameStateEvents(class AKSGameState** GameState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVOComponent.BindToGameStateEvents");

	UKSVOComponent_BindToGameStateEvents_Params params;
	params.GameState = GameState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVOComponent.BindToEvents
// (Native, Event, Protected, BlueprintEvent)

void UKSVOComponent::BindToEvents()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVOComponent.BindToEvents");

	UKSVOComponent_BindToEvents_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVOComponent.BindToCharacterEvents
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class AKSCharacter**           Character                      (Parm, ZeroConstructor, IsPlainOldData)

void UKSVOComponent::BindToCharacterEvents(class AKSCharacter** Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVOComponent.BindToCharacterEvents");

	UKSVOComponent_BindToCharacterEvents_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVOComponent.BindToActivatableModEvents
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class UKSModInst_Activated**   ActivatableMod                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UKSVOComponent::BindToActivatableModEvents(class UKSModInst_Activated** ActivatableMod)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVOComponent.BindToActivatableModEvents");

	UKSVOComponent_BindToActivatableModEvents_Params params;
	params.ActivatableMod = ActivatableMod;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWaterFXVolume.OnWaterFXTriggered
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// class AActor**                 TriggeringActor                (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                SurfaceRelevantLocation        (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bIsFullySubmerged              (Parm, ZeroConstructor, IsPlainOldData)

void AKSWaterFXVolume::OnWaterFXTriggered(class AActor** TriggeringActor, struct FVector* SurfaceRelevantLocation, bool* bIsFullySubmerged)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWaterFXVolume.OnWaterFXTriggered");

	AKSWaterFXVolume_OnWaterFXTriggered_Params params;
	params.TriggeringActor = TriggeringActor;
	params.SurfaceRelevantLocation = SurfaceRelevantLocation;
	params.bIsFullySubmerged = bIsFullySubmerged;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWaterFXVolume.OnWaterExited
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// class AActor**                 TriggeringActor                (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                SurfaceRelevantLocation        (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bIsFullySubmerged              (Parm, ZeroConstructor, IsPlainOldData)

void AKSWaterFXVolume::OnWaterExited(class AActor** TriggeringActor, struct FVector* SurfaceRelevantLocation, bool* bIsFullySubmerged)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWaterFXVolume.OnWaterExited");

	AKSWaterFXVolume_OnWaterExited_Params params;
	params.TriggeringActor = TriggeringActor;
	params.SurfaceRelevantLocation = SurfaceRelevantLocation;
	params.bIsFullySubmerged = bIsFullySubmerged;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWaterFXVolume.OnWaterEntered
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// class AActor**                 TriggeringActor                (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                SurfaceRelevantLocation        (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bIsFullySubmerged              (Parm, ZeroConstructor, IsPlainOldData)

void AKSWaterFXVolume::OnWaterEntered(class AActor** TriggeringActor, struct FVector* SurfaceRelevantLocation, bool* bIsFullySubmerged)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWaterFXVolume.OnWaterEntered");

	AKSWaterFXVolume_OnWaterEntered_Params params;
	params.TriggeringActor = TriggeringActor;
	params.SurfaceRelevantLocation = SurfaceRelevantLocation;
	params.bIsFullySubmerged = bIsFullySubmerged;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAttachmentCosmeticInst.OnRep_ParentEquipmentId
// (Final, Native, Private)

void UKSWeaponAttachmentCosmeticInst::OnRep_ParentEquipmentId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAttachmentCosmeticInst.OnRep_ParentEquipmentId");

	UKSWeaponAttachmentCosmeticInst_OnRep_ParentEquipmentId_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAttachmentCosmeticInst.OnRep_AttachPoint
// (Final, Native, Private)

void UKSWeaponAttachmentCosmeticInst::OnRep_AttachPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAttachmentCosmeticInst.OnRep_AttachPoint");

	UKSWeaponAttachmentCosmeticInst_OnRep_AttachPoint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAttachmentCosmeticInst.OnRep_AttachmentAsset
// (Final, Native, Private)

void UKSWeaponAttachmentCosmeticInst::OnRep_AttachmentAsset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAttachmentCosmeticInst.OnRep_AttachmentAsset");

	UKSWeaponAttachmentCosmeticInst_OnRep_AttachmentAsset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAttachmentCosmeticInst.IsInitialized
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSWeaponAttachmentCosmeticInst::IsInitialized()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAttachmentCosmeticInst.IsInitialized");

	UKSWeaponAttachmentCosmeticInst_IsInitialized_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAttachmentCosmeticInst.GetParentComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UKSWeaponComponent*      ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UKSWeaponComponent* UKSWeaponAttachmentCosmeticInst::GetParentComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAttachmentCosmeticInst.GetParentComponent");

	UKSWeaponAttachmentCosmeticInst_GetParentComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAttachmentCosmeticInst.GetLoadedMeshAnimAnimOverrideData
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FLoadedWeaponAttachmentAnimationData OutData                        (Parm, OutParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSWeaponAttachmentCosmeticInst::GetLoadedMeshAnimAnimOverrideData(struct FLoadedWeaponAttachmentAnimationData* OutData)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAttachmentCosmeticInst.GetLoadedMeshAnimAnimOverrideData");

	UKSWeaponAttachmentCosmeticInst_GetLoadedMeshAnimAnimOverrideData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutData != nullptr)
		*OutData = params.OutData;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAttachmentCosmeticInst.GetAttachPoint
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag            ReturnValue                    (Parm, OutParm, ReturnParm)

struct FGameplayTag UKSWeaponAttachmentCosmeticInst::GetAttachPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAttachmentCosmeticInst.GetAttachPoint");

	UKSWeaponAttachmentCosmeticInst_GetAttachPoint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAttachmentCosmeticInst.GetAttachmentAsset
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UKSWeaponAttachment*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UKSWeaponAttachment* UKSWeaponAttachmentCosmeticInst::GetAttachmentAsset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAttachmentCosmeticInst.GetAttachmentAsset");

	UKSWeaponAttachmentCosmeticInst_GetAttachmentAsset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAttachmentCosmeticInst.GetAccumulatedMeshAndAnimOverrideData
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UKSWeaponAsset**         InWeaponAsset                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FWeaponAttachmentAnimationData OutData                        (Parm, OutParm)

void UKSWeaponAttachmentCosmeticInst::GetAccumulatedMeshAndAnimOverrideData(class UKSWeaponAsset** InWeaponAsset, struct FWeaponAttachmentAnimationData* OutData)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAttachmentCosmeticInst.GetAccumulatedMeshAndAnimOverrideData");

	UKSWeaponAttachmentCosmeticInst_GetAccumulatedMeshAndAnimOverrideData_Params params;
	params.InWeaponAsset = InWeaponAsset;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutData != nullptr)
		*OutData = params.OutData;
}


// Function Killstreak.KSWAttachmentCosmetic_VarScope.OnRep_ScopeZoomIndex
// (Native, Protected)

void UKSWAttachmentCosmetic_VarScope::OnRep_ScopeZoomIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWAttachmentCosmetic_VarScope.OnRep_ScopeZoomIndex");

	UKSWAttachmentCosmetic_VarScope_OnRep_ScopeZoomIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWayPoint.GetNextWayPoints
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AKSWayPointSet**         WayPointSet                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// TArray<class AKSWayPoint*>     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class AKSWayPoint*> AKSWayPoint::GetNextWayPoints(class AKSWayPointSet** WayPointSet)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWayPoint.GetNextWayPoints");

	AKSWayPoint_GetNextWayPoints_Params params;
	params.WayPointSet = WayPointSet;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWayPointSet.UpdateWayPointVisuals
// (Event, Protected, BlueprintEvent)

void AKSWayPointSet::UpdateWayPointVisuals()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWayPointSet.UpdateWayPointVisuals");

	AKSWayPointSet_UpdateWayPointVisuals_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWayPointSet.LinkWayPoints
// (Final, Native, Protected)

void AKSWayPointSet::LinkWayPoints()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWayPointSet.LinkWayPoints");

	AKSWayPointSet_LinkWayPoints_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_Aimed.StaticDefaultGetAim
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UKSWeaponAsset**         InWeaponAsset                  (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 InWeaponOwner                  (Parm, ZeroConstructor, IsPlainOldData)
// EKSCharacterAimMode*           InAimMode                      (Parm, ZeroConstructor, IsPlainOldData)
// struct FAimData                ReturnValue                    (Parm, OutParm, ReturnParm)

struct FAimData AKSWeapon_Aimed::STATIC_StaticDefaultGetAim(class UKSWeaponAsset** InWeaponAsset, class AActor** InWeaponOwner, EKSCharacterAimMode* InAimMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Aimed.StaticDefaultGetAim");

	AKSWeapon_Aimed_StaticDefaultGetAim_Params params;
	params.InWeaponAsset = InWeaponAsset;
	params.InWeaponOwner = InWeaponOwner;
	params.InAimMode = InAimMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon_Aimed.ServerSetAimOverShoulder
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool*                          bNewAimDownSights              (Parm, ZeroConstructor, IsPlainOldData)

void AKSWeapon_Aimed::ServerSetAimOverShoulder(bool* bNewAimDownSights)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Aimed.ServerSetAimOverShoulder");

	AKSWeapon_Aimed_ServerSetAimOverShoulder_Params params;
	params.bNewAimDownSights = bNewAimDownSights;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_Aimed.ServerProcessHits
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// struct FAimData*               ReceivedAim                    (ConstParm, Parm, ReferenceParm)
// TArray<struct FHitResult>*     Hits                           (ConstParm, Parm, ZeroConstructor, ReferenceParm)

void AKSWeapon_Aimed::ServerProcessHits(struct FAimData* ReceivedAim, TArray<struct FHitResult>* Hits)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Aimed.ServerProcessHits");

	AKSWeapon_Aimed_ServerProcessHits_Params params;
	params.ReceivedAim = ReceivedAim;
	params.Hits = Hits;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_Aimed.ServerFireWeaponAimed
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// struct FWeaponStateChangeRequest* request                        (ConstParm, Parm, ReferenceParm)
// struct FAimData*               ReceivedAim                    (ConstParm, Parm, ReferenceParm)

void AKSWeapon_Aimed::ServerFireWeaponAimed(struct FWeaponStateChangeRequest* request, struct FAimData* ReceivedAim)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Aimed.ServerFireWeaponAimed");

	AKSWeapon_Aimed_ServerFireWeaponAimed_Params params;
	params.request = request;
	params.ReceivedAim = ReceivedAim;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_Aimed.IsInOrTransitioningToAOS
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeapon_Aimed::IsInOrTransitioningToAOS()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Aimed.IsInOrTransitioningToAOS");

	AKSWeapon_Aimed_IsInOrTransitioningToAOS_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon_Aimed.IsInOrTransitioningToAlternate
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeapon_Aimed::IsInOrTransitioningToAlternate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Aimed.IsInOrTransitioningToAlternate");

	AKSWeapon_Aimed_IsInOrTransitioningToAlternate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon_Aimed.IsInOrTransitioningToADS
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeapon_Aimed::IsInOrTransitioningToADS()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Aimed.IsInOrTransitioningToADS");

	AKSWeapon_Aimed_IsInOrTransitioningToADS_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon_Aimed.IsAimingOverShoulder
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeapon_Aimed::IsAimingOverShoulder()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Aimed.IsAimingOverShoulder");

	AKSWeapon_Aimed_IsAimingOverShoulder_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon_Aimed.IsAimingDownSights
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeapon_Aimed::IsAimingDownSights()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Aimed.IsAimingDownSights");

	AKSWeapon_Aimed_IsAimingDownSights_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon_Aimed.IsAimingAlternate
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeapon_Aimed::IsAimingAlternate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Aimed.IsAimingAlternate");

	AKSWeapon_Aimed_IsAimingAlternate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon_Aimed.IsAiming
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeapon_Aimed::IsAiming()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Aimed.IsAiming");

	AKSWeapon_Aimed_IsAiming_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon_Aimed.InternalGetActorsToIgnore
// (Native, Event, Protected, HasOutParms, BlueprintEvent, Const)
// Parameters:
// TArray<class AActor*>          ActorsToIgnore                 (Parm, OutParm, ZeroConstructor)

void AKSWeapon_Aimed::InternalGetActorsToIgnore(TArray<class AActor*>* ActorsToIgnore)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Aimed.InternalGetActorsToIgnore");

	AKSWeapon_Aimed_InternalGetActorsToIgnore_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (ActorsToIgnore != nullptr)
		*ActorsToIgnore = params.ActorsToIgnore;
}


// Function Killstreak.KSWeapon_Aimed.GetRange
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSWeapon_Aimed::GetRange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Aimed.GetRange");

	AKSWeapon_Aimed_GetRange_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon_Aimed.GetOwnerAimMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EKSCharacterAimMode            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EKSCharacterAimMode AKSWeapon_Aimed::GetOwnerAimMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Aimed.GetOwnerAimMode");

	AKSWeapon_Aimed_GetOwnerAimMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon_Aimed.GetHeadAimCorrectionRange
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSWeapon_Aimed::GetHeadAimCorrectionRange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Aimed.GetHeadAimCorrectionRange");

	AKSWeapon_Aimed_GetHeadAimCorrectionRange_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon_Aimed.GetHeadAimCorrectionOffset
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool*                          bMouse                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSWeapon_Aimed::GetHeadAimCorrectionOffset(bool* bMouse)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Aimed.GetHeadAimCorrectionOffset");

	AKSWeapon_Aimed_GetHeadAimCorrectionOffset_Params params;
	params.bMouse = bMouse;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon_Aimed.GetFullFireRepData
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FFullFireRepData        ReturnValue                    (Parm, OutParm, ReturnParm)

struct FFullFireRepData AKSWeapon_Aimed::GetFullFireRepData()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Aimed.GetFullFireRepData");

	AKSWeapon_Aimed_GetFullFireRepData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon_Aimed.GetCurrentAccuracy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSWeapon_Aimed::GetCurrentAccuracy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Aimed.GetCurrentAccuracy");

	AKSWeapon_Aimed_GetCurrentAccuracy_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon_Aimed.GetCachedAim
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FAimData                ReturnValue                    (Parm, OutParm, ReturnParm)

struct FAimData AKSWeapon_Aimed::GetCachedAim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Aimed.GetCachedAim");

	AKSWeapon_Aimed_GetCachedAim_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon_Aimed.GetAim
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FAimData                ReturnValue                    (Parm, OutParm, ReturnParm)

struct FAimData AKSWeapon_Aimed::GetAim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Aimed.GetAim");

	AKSWeapon_Aimed_GetAim_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon_Aimed.GetActorsToIgnore
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AActor*>          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class AActor*> AKSWeapon_Aimed::GetActorsToIgnore()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Aimed.GetActorsToIgnore");

	AKSWeapon_Aimed_GetActorsToIgnore_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon_Aimed.ApplyView
// (Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FAimData*               InAim                          (ConstParm, Parm, OutParm, ReferenceParm)
// struct FAimData                OutAim                         (Parm, OutParm)

void AKSWeapon_Aimed::ApplyView(struct FAimData* InAim, struct FAimData* OutAim)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Aimed.ApplyView");

	AKSWeapon_Aimed_ApplyView_Params params;
	params.InAim = InAim;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutAim != nullptr)
		*OutAim = params.OutAim;
}


// Function Killstreak.KSWeapon_Aimed.ApplyAimAssist
// (Native, Public, HasOutParms, Const)
// Parameters:
// struct FAimData                InOutAim                       (Parm, OutParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeapon_Aimed::ApplyAimAssist(struct FAimData* InOutAim)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Aimed.ApplyAimAssist");

	AKSWeapon_Aimed_ApplyAimAssist_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (InOutAim != nullptr)
		*InOutAim = params.InOutAim;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon_Aimed.ApplyAccuracy
// (Native, Event, Public, HasOutParms, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FAimData*               InAim                          (ConstParm, Parm, OutParm, ReferenceParm)
// struct FAimData                OutAim                         (Parm, OutParm)

void AKSWeapon_Aimed::ApplyAccuracy(struct FAimData* InAim, struct FAimData* OutAim)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Aimed.ApplyAccuracy");

	AKSWeapon_Aimed_ApplyAccuracy_Params params;
	params.InAim = InAim;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutAim != nullptr)
		*OutAim = params.OutAim;
}


// Function Killstreak.KSWeapon_Aimed.AllowAimCorrection
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeapon_Aimed::AllowAimCorrection()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Aimed.AllowAimCorrection");

	AKSWeapon_Aimed_AllowAimCorrection_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon_Build.OnRep_BuildState
// (Final, Native, Private)

void AKSWeapon_Build::OnRep_BuildState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Build.OnRep_BuildState");

	AKSWeapon_Build_OnRep_BuildState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_Build.GetDesiredBuildLocationAndRotation
// (Native, Event, Protected, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 OutLocation                    (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// struct FRotator                OutRotation                    (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void AKSWeapon_Build::GetDesiredBuildLocationAndRotation(struct FVector* OutLocation, struct FRotator* OutRotation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Build.GetDesiredBuildLocationAndRotation");

	AKSWeapon_Build_GetDesiredBuildLocationAndRotation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutLocation != nullptr)
		*OutLocation = params.OutLocation;
	if (OutRotation != nullptr)
		*OutRotation = params.OutRotation;
}


// Function Killstreak.KSWeapon_Build.GetBuildPreviewActorClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* AKSWeapon_Build::GetBuildPreviewActorClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Build.GetBuildPreviewActorClass");

	AKSWeapon_Build_GetBuildPreviewActorClass_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon_Build.GetBuildActorClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UClass* AKSWeapon_Build::GetBuildActorClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Build.GetBuildActorClass");

	AKSWeapon_Build_GetBuildActorClass_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon_DirectTarget.SubmitTargetSelection
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// class AActor**                 TargetCandidate                (Parm, ZeroConstructor, IsPlainOldData)

void AKSWeapon_DirectTarget::SubmitTargetSelection(class AActor** TargetCandidate)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_DirectTarget.SubmitTargetSelection");

	AKSWeapon_DirectTarget_SubmitTargetSelection_Params params;
	params.TargetCandidate = TargetCandidate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_DirectTarget.PopulateValidTargets
// (Native, Protected, HasOutParms)
// Parameters:
// TArray<class AActor*>          ValidTargetArray               (Parm, OutParm, ZeroConstructor)

void AKSWeapon_DirectTarget::PopulateValidTargets(TArray<class AActor*>* ValidTargetArray)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_DirectTarget.PopulateValidTargets");

	AKSWeapon_DirectTarget_PopulateValidTargets_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (ValidTargetArray != nullptr)
		*ValidTargetArray = params.ValidTargetArray;
}


// Function Killstreak.KSWeapon_DirectTarget.IsTargetValid
// (Native, Protected, Const)
// Parameters:
// class AActor**                 TestActor                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeapon_DirectTarget::IsTargetValid(class AActor** TestActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_DirectTarget.IsTargetValid");

	AKSWeapon_DirectTarget_IsTargetValid_Params params;
	params.TestActor = TestActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon_DirectTarget.EvaluateActiveTarget
// (Final, Native, Public)
// Parameters:
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AActor* AKSWeapon_DirectTarget::EvaluateActiveTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_DirectTarget.EvaluateActiveTarget");

	AKSWeapon_DirectTarget_EvaluateActiveTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon_DirectTarget.ChooseBestTarget
// (Final, Native, Protected, HasOutParms)
// Parameters:
// TArray<class AActor*>*         ValidTargetArray               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AActor* AKSWeapon_DirectTarget::ChooseBestTarget(TArray<class AActor*>* ValidTargetArray)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_DirectTarget.ChooseBestTarget");

	AKSWeapon_DirectTarget_ChooseBestTarget_Params params;
	params.ValidTargetArray = ValidTargetArray;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon_GrenadeThrow.OnFuseTimerExpired
// (Native, Protected)
// Parameters:
// float*                         MinHandRemainingFuse           (Parm, ZeroConstructor, IsPlainOldData)

void AKSWeapon_GrenadeThrow::OnFuseTimerExpired(float* MinHandRemainingFuse)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_GrenadeThrow.OnFuseTimerExpired");

	AKSWeapon_GrenadeThrow_OnFuseTimerExpired_Params params;
	params.MinHandRemainingFuse = MinHandRemainingFuse;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_Melee.OnRep_Projectile
// (Final, Native, Private)

void AKSWeapon_Melee::OnRep_Projectile()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Melee.OnRep_Projectile");

	AKSWeapon_Melee_OnRep_Projectile_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_Melee.OnOwnerAimStateChanged
// (Final, Native, Protected)
// Parameters:
// EKSCharacterAimMode*           WeaponStateChange              (Parm, ZeroConstructor, IsPlainOldData)

void AKSWeapon_Melee::OnOwnerAimStateChanged(EKSCharacterAimMode* WeaponStateChange)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Melee.OnOwnerAimStateChanged");

	AKSWeapon_Melee_OnOwnerAimStateChanged_Params params;
	params.WeaponStateChange = WeaponStateChange;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_Melee.OnLungingChanged
// (Final, Native, Protected)
// Parameters:
// bool*                          Lunging                        (Parm, ZeroConstructor, IsPlainOldData)

void AKSWeapon_Melee::OnLungingChanged(bool* Lunging)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Melee.OnLungingChanged");

	AKSWeapon_Melee_OnLungingChanged_Params params;
	params.Lunging = Lunging;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_Melee.JumpToFire
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EWeaponStateNew*               PreviousState                  (Parm, ZeroConstructor, IsPlainOldData)

void AKSWeapon_Melee::JumpToFire(EWeaponStateNew* PreviousState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Melee.JumpToFire");

	AKSWeapon_Melee_JumpToFire_Params params;
	params.PreviousState = PreviousState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_Melee.IncPrefireSkipWindow
// (Final, Native, Public, BlueprintCallable)

void AKSWeapon_Melee::IncPrefireSkipWindow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Melee.IncPrefireSkipWindow");

	AKSWeapon_Melee_IncPrefireSkipWindow_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_Melee.GetProjectile
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AKSProjectile*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AKSProjectile* AKSWeapon_Melee::GetProjectile()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Melee.GetProjectile");

	AKSWeapon_Melee_GetProjectile_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon_Proximity.ProximityActorUpdated
// (Final, Native, Protected)
// Parameters:
// class AActor**                 Actor                          (Parm, ZeroConstructor, IsPlainOldData)
// class UPrimitiveComponent**    Component                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// struct FKSActorProximityInfo*  ProximityInfo                  (Parm)

void AKSWeapon_Proximity::ProximityActorUpdated(class AActor** Actor, class UPrimitiveComponent** Component, struct FKSActorProximityInfo* ProximityInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Proximity.ProximityActorUpdated");

	AKSWeapon_Proximity_ProximityActorUpdated_Params params;
	params.Actor = Actor;
	params.Component = Component;
	params.ProximityInfo = ProximityInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_Proximity.OnCachedProximityActorsUpdated
// (Final, Native, Private)

void AKSWeapon_Proximity::OnCachedProximityActorsUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Proximity.OnCachedProximityActorsUpdated");

	AKSWeapon_Proximity_OnCachedProximityActorsUpdated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_Proximity.GetProximityTraceRelativeLocation
// (Native, Event, Protected, HasDefaults, BlueprintEvent, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector AKSWeapon_Proximity::GetProximityTraceRelativeLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Proximity.GetProximityTraceRelativeLocation");

	AKSWeapon_Proximity_GetProximityTraceRelativeLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon_Proximity.GetProximityComponent
// (Event, Protected, BlueprintEvent, Const)
// Parameters:
// class UPrimitiveComponent*     ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UPrimitiveComponent* AKSWeapon_Proximity::GetProximityComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Proximity.GetProximityComponent");

	AKSWeapon_Proximity_GetProximityComponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon_Proximity.GetCachedProximityActors
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AActor*>          ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm)

TArray<class AActor*> AKSWeapon_Proximity::GetCachedProximityActors()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Proximity.GetCachedProximityActors");

	AKSWeapon_Proximity_GetCachedProximityActors_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon_RemoteRocket.OnRocketDestroyed
// (Final, Native, Protected)
// Parameters:
// class AActor**                 RocketActor                    (Parm, ZeroConstructor, IsPlainOldData)

void AKSWeapon_RemoteRocket::OnRocketDestroyed(class AActor** RocketActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_RemoteRocket.OnRocketDestroyed");

	AKSWeapon_RemoteRocket_OnRocketDestroyed_Params params;
	params.RocketActor = RocketActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_RemoteRocket.OnPostDestroyDelayComplete
// (Final, Native, Protected)

void AKSWeapon_RemoteRocket::OnPostDestroyDelayComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_RemoteRocket.OnPostDestroyDelayComplete");

	AKSWeapon_RemoteRocket_OnPostDestroyDelayComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_RemoteRocket.GetSpawnedRocket
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AKSRocket*               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AKSRocket* AKSWeapon_RemoteRocket::GetSpawnedRocket()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_RemoteRocket.GetSpawnedRocket");

	AKSWeapon_RemoteRocket_GetSpawnedRocket_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon_RemoteRocket.GetRocketSpawnWorldTransform
// (Event, Protected, HasDefaults, BlueprintEvent)
// Parameters:
// struct FTransform              ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData)

struct FTransform AKSWeapon_RemoteRocket::GetRocketSpawnWorldTransform()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_RemoteRocket.GetRocketSpawnWorldTransform");

	AKSWeapon_RemoteRocket_GetRocketSpawnWorldTransform_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon_RemoteThrow.SwapToDetonator
// (Final, Native, Protected, BlueprintCallable)

void AKSWeapon_RemoteThrow::SwapToDetonator()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_RemoteThrow.SwapToDetonator");

	AKSWeapon_RemoteThrow_SwapToDetonator_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_RemoteThrow.OnProjectileReleased
// (Native, Event, Protected, BlueprintEvent)

void AKSWeapon_RemoteThrow::OnProjectileReleased()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_RemoteThrow.OnProjectileReleased");

	AKSWeapon_RemoteThrow_OnProjectileReleased_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_RemoteThrow.OnAttachedChargeDestroyed
// (Native, Protected)
// Parameters:
// class AActor**                 DestroyedCharge                (Parm, ZeroConstructor, IsPlainOldData)

void AKSWeapon_RemoteThrow::OnAttachedChargeDestroyed(class AActor** DestroyedCharge)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_RemoteThrow.OnAttachedChargeDestroyed");

	AKSWeapon_RemoteThrow_OnAttachedChargeDestroyed_Params params;
	params.DestroyedCharge = DestroyedCharge;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_RemoteThrow.GetAttachedCharges
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AKSProjectile_RemoteTrigger*> OutCharges                     (Parm, OutParm, ZeroConstructor)

void AKSWeapon_RemoteThrow::GetAttachedCharges(TArray<class AKSProjectile_RemoteTrigger*>* OutCharges)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_RemoteThrow.GetAttachedCharges");

	AKSWeapon_RemoteThrow_GetAttachedCharges_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutCharges != nullptr)
		*OutCharges = params.OutCharges;
}


// Function Killstreak.KSWeapon_RemoteTrigger.SwapOffDetonator
// (Final, Native, Protected, BlueprintCallable)

void AKSWeapon_RemoteTrigger::SwapOffDetonator()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_RemoteTrigger.SwapOffDetonator");

	AKSWeapon_RemoteTrigger_SwapOffDetonator_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_RemoteTrigger.OnAttachedChargeDestroyed
// (Final, Native, Protected)
// Parameters:
// class AActor**                 DestroyedCharge                (Parm, ZeroConstructor, IsPlainOldData)

void AKSWeapon_RemoteTrigger::OnAttachedChargeDestroyed(class AActor** DestroyedCharge)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_RemoteTrigger.OnAttachedChargeDestroyed");

	AKSWeapon_RemoteTrigger_OnAttachedChargeDestroyed_Params params;
	params.DestroyedCharge = DestroyedCharge;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_RemoteTrigger.GetAttachedCharges
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AKSProjectile_RemoteTrigger*> OutCharges                     (Parm, OutParm, ZeroConstructor)

void AKSWeapon_RemoteTrigger::GetAttachedCharges(TArray<class AKSProjectile_RemoteTrigger*>* OutCharges)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_RemoteTrigger.GetAttachedCharges");

	AKSWeapon_RemoteTrigger_GetAttachedCharges_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutCharges != nullptr)
		*OutCharges = params.OutCharges;
}


// Function Killstreak.KSWeapon_RemoteTrigger.Detonate
// (Final, Native, Public, BlueprintCallable)

void AKSWeapon_RemoteTrigger::Detonate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_RemoteTrigger.Detonate");

	AKSWeapon_RemoteTrigger_Detonate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_RemoteVehicle.VehicleDestroyed
// (Final, Native, Protected)

void AKSWeapon_RemoteVehicle::VehicleDestroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_RemoteVehicle.VehicleDestroyed");

	AKSWeapon_RemoteVehicle_VehicleDestroyed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_ReviveDartDirect.OnReviveSucceed
// (Final, Native, Private)

void AKSWeapon_ReviveDartDirect::OnReviveSucceed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_ReviveDartDirect.OnReviveSucceed");

	AKSWeapon_ReviveDartDirect_OnReviveSucceed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_ReviveDartDirect.OnReviveFailed
// (Final, Native, Private)

void AKSWeapon_ReviveDartDirect::OnReviveFailed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_ReviveDartDirect.OnReviveFailed");

	AKSWeapon_ReviveDartDirect_OnReviveFailed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_Targeted.TargetCurrentlyValid
// (Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor**                 TestTarget                     (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSWeapon_Targeted::TargetCurrentlyValid(class AActor** TestTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Targeted.TargetCurrentlyValid");

	AKSWeapon_Targeted_TargetCurrentlyValid_Params params;
	params.TestTarget = TestTarget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeapon_Targeted.SubmitTargetedActor
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// class AActor**                 TargetActor                    (Parm, ZeroConstructor, IsPlainOldData)

void AKSWeapon_Targeted::SubmitTargetedActor(class AActor** TargetActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Targeted.SubmitTargetedActor");

	AKSWeapon_Targeted_SubmitTargetedActor_Params params;
	params.TargetActor = TargetActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_Targeted.ConfirmTargetSelection
// (Native, Public, BlueprintCallable)
// Parameters:
// class AActor**                 TargetActor                    (Parm, ZeroConstructor, IsPlainOldData)

void AKSWeapon_Targeted::ConfirmTargetSelection(class AActor** TargetActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Targeted.ConfirmTargetSelection");

	AKSWeapon_Targeted_ConfirmTargetSelection_Params params;
	params.TargetActor = TargetActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_Targeted.CancelTargetSelection
// (Native, Public, BlueprintCallable)

void AKSWeapon_Targeted::CancelTargetSelection()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Targeted.CancelTargetSelection");

	AKSWeapon_Targeted_CancelTargetSelection_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_ReviveDroneDirect.OnRep_DroneActor
// (Final, Native, Protected)

void AKSWeapon_ReviveDroneDirect::OnRep_DroneActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_ReviveDroneDirect.OnRep_DroneActor");

	AKSWeapon_ReviveDroneDirect_OnRep_DroneActor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_ReviveDroneDirect.OnDroneDestroy
// (Final, Native, Protected)
// Parameters:
// class AActor**                 SupposedDroneActor             (Parm, ZeroConstructor, IsPlainOldData)

void AKSWeapon_ReviveDroneDirect::OnDroneDestroy(class AActor** SupposedDroneActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_ReviveDroneDirect.OnDroneDestroy");

	AKSWeapon_ReviveDroneDirect_OnDroneDestroy_Params params;
	params.SupposedDroneActor = SupposedDroneActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_ReviveDroneDirect.OnDroneAborted
// (Final, Native, Protected)

void AKSWeapon_ReviveDroneDirect::OnDroneAborted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_ReviveDroneDirect.OnDroneAborted");

	AKSWeapon_ReviveDroneDirect_OnDroneAborted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_ReviveDroneDirect.GetDesiredSpawnLocationAndRotation
// (Native, Event, Protected, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 OutLocation                    (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// struct FRotator                OutRotation                    (Parm, OutParm, ZeroConstructor, IsPlainOldData)

void AKSWeapon_ReviveDroneDirect::GetDesiredSpawnLocationAndRotation(struct FVector* OutLocation, struct FRotator* OutRotation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_ReviveDroneDirect.GetDesiredSpawnLocationAndRotation");

	AKSWeapon_ReviveDroneDirect_GetDesiredSpawnLocationAndRotation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutLocation != nullptr)
		*OutLocation = params.OutLocation;
	if (OutRotation != nullptr)
		*OutRotation = params.OutRotation;
}


// Function Killstreak.KSWeaponAnimInstance.PlayFireAnimationBP
// (Event, Public, BlueprintEvent)

void UKSWeaponAnimInstance::PlayFireAnimationBP()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAnimInstance.PlayFireAnimationBP");

	UKSWeaponAnimInstance_PlayFireAnimationBP_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset_Build.GetSoftBuildPreviewActorClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)

void UKSWeaponAsset_Build::GetSoftBuildPreviewActorClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset_Build.GetSoftBuildPreviewActorClass");

	UKSWeaponAsset_Build_GetSoftBuildPreviewActorClass_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset_Build.GetSoftBuildActorClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)

void UKSWeaponAsset_Build::GetSoftBuildActorClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset_Build.GetSoftBuildActorClass");

	UKSWeaponAsset_Build_GetSoftBuildActorClass_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset_WithProjectile.GetRadialDamageOriginOffsetDistance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAsset_WithProjectile::GetRadialDamageOriginOffsetDistance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset_WithProjectile.GetRadialDamageOriginOffsetDistance");

	UKSWeaponAsset_WithProjectile_GetRadialDamageOriginOffsetDistance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset_WithProjectile.GetProjectileWeaponAsset
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)

void UKSWeaponAsset_WithProjectile::GetProjectileWeaponAsset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset_WithProjectile.GetProjectileWeaponAsset");

	UKSWeaponAsset_WithProjectile_GetProjectileWeaponAsset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset_WithProjectile.GetProjectileRadius
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAsset_WithProjectile::GetProjectileRadius()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset_WithProjectile.GetProjectileRadius");

	UKSWeaponAsset_WithProjectile_GetProjectileRadius_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset_WithProjectile.GetProjectileMaxSimulationTimeStep
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAsset_WithProjectile::GetProjectileMaxSimulationTimeStep()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset_WithProjectile.GetProjectileMaxSimulationTimeStep");

	UKSWeaponAsset_WithProjectile_GetProjectileMaxSimulationTimeStep_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset_WithProjectile.GetProjectileMaxSimulationIterations
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAsset_WithProjectile::GetProjectileMaxSimulationIterations()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset_WithProjectile.GetProjectileMaxSimulationIterations");

	UKSWeaponAsset_WithProjectile_GetProjectileMaxSimulationIterations_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset_WithProjectile.GetProjectileInitialSpeed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float*                         PitchAngle                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAsset_WithProjectile::GetProjectileInitialSpeed(float* PitchAngle)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset_WithProjectile.GetProjectileInitialSpeed");

	UKSWeaponAsset_WithProjectile_GetProjectileInitialSpeed_Params params;
	params.PitchAngle = PitchAngle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset_WithProjectile.GetProjectileGravityScale
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAsset_WithProjectile::GetProjectileGravityScale()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset_WithProjectile.GetProjectileGravityScale");

	UKSWeaponAsset_WithProjectile_GetProjectileGravityScale_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset_WithProjectile.GetProjectileClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)

void UKSWeaponAsset_WithProjectile::GetProjectileClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset_WithProjectile.GetProjectileClass");

	UKSWeaponAsset_WithProjectile_GetProjectileClass_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset_Grenade.GetMinimumCookTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAsset_Grenade::GetMinimumCookTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset_Grenade.GetMinimumCookTime");

	UKSWeaponAsset_Grenade_GetMinimumCookTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset_Grenade.GetMinHandRemainingFuse
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAsset_Grenade::GetMinHandRemainingFuse()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset_Grenade.GetMinHandRemainingFuse");

	UKSWeaponAsset_Grenade_GetMinHandRemainingFuse_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset_Grenade.GetFuseTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAsset_Grenade::GetFuseTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset_Grenade.GetFuseTime");

	UKSWeaponAsset_Grenade_GetFuseTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset_Grenade.GetFuseTicksInHand
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSWeaponAsset_Grenade::GetFuseTicksInHand()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset_Grenade.GetFuseTicksInHand");

	UKSWeaponAsset_Grenade_GetFuseTicksInHand_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset_Grenade.AllowCooking
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSWeaponAsset_Grenade::AllowCooking()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset_Grenade.AllowCooking");

	UKSWeaponAsset_Grenade_AllowCooking_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset_Melee.GetMeleeTraceChannel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<ETraceTypeQuery>   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

TEnumAsByte<ETraceTypeQuery> UKSWeaponAsset_Melee::GetMeleeTraceChannel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset_Melee.GetMeleeTraceChannel");

	UKSWeaponAsset_Melee_GetMeleeTraceChannel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset_Melee.GetMeleeBoxOffset
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector UKSWeaponAsset_Melee::GetMeleeBoxOffset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset_Melee.GetMeleeBoxOffset");

	UKSWeaponAsset_Melee_GetMeleeBoxOffset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset_Melee.GetMeleeBoxExtent
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector UKSWeaponAsset_Melee::GetMeleeBoxExtent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset_Melee.GetMeleeBoxExtent");

	UKSWeaponAsset_Melee_GetMeleeBoxExtent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset_Melee.GetMaxLungeDuration
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAsset_Melee::GetMaxLungeDuration()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset_Melee.GetMaxLungeDuration");

	UKSWeaponAsset_Melee_GetMaxLungeDuration_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset_Melee.GetMaxLungeDistance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAsset_Melee::GetMaxLungeDistance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset_Melee.GetMaxLungeDistance");

	UKSWeaponAsset_Melee_GetMaxLungeDistance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset_Melee.GetLungeConeHalfAngle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAsset_Melee::GetLungeConeHalfAngle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset_Melee.GetLungeConeHalfAngle");

	UKSWeaponAsset_Melee_GetLungeConeHalfAngle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset_Melee.GetBoxObjectTypes
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<TEnumAsByte<EObjectTypeQuery>> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<TEnumAsByte<EObjectTypeQuery>> UKSWeaponAsset_Melee::GetBoxObjectTypes()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset_Melee.GetBoxObjectTypes");

	UKSWeaponAsset_Melee_GetBoxObjectTypes_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset_Pierce.GetDamageScalarAfterWalls
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAsset_Pierce::GetDamageScalarAfterWalls()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset_Pierce.GetDamageScalarAfterWalls");

	UKSWeaponAsset_Pierce_GetDamageScalarAfterWalls_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset_Shotgun.GetSpreadPattern
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FVector2D>       OutPattern                     (Parm, OutParm, ZeroConstructor)

void UKSWeaponAsset_Shotgun::GetSpreadPattern(TArray<struct FVector2D>* OutPattern)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset_Shotgun.GetSpreadPattern");

	UKSWeaponAsset_Shotgun_GetSpreadPattern_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutPattern != nullptr)
		*OutPattern = params.OutPattern;
}


// Function Killstreak.KSWeaponAsset_Shotgun.GetPelletsPerShot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UKSWeaponAsset_Shotgun::GetPelletsPerShot()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset_Shotgun.GetPelletsPerShot");

	UKSWeaponAsset_Shotgun_GetPelletsPerShot_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset_Shotgun.GetHitPercentageForHeadshot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAsset_Shotgun::GetHitPercentageForHeadshot()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset_Shotgun.GetHitPercentageForHeadshot");

	UKSWeaponAsset_Shotgun_GetHitPercentageForHeadshot_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset_Shotgun.GetAimDownSightsAccuracy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAsset_Shotgun::GetAimDownSightsAccuracy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset_Shotgun.GetAimDownSightsAccuracy");

	UKSWeaponAsset_Shotgun_GetAimDownSightsAccuracy_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAsset_Shotgun.DoesUseSpreadPattern
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSWeaponAsset_Shotgun::DoesUseSpreadPattern()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset_Shotgun.DoesUseSpreadPattern");

	UKSWeaponAsset_Shotgun_DoesUseSpreadPattern_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAttachment.GetValidAttachPoints
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTagContainer   OutAttachPoints                (Parm, OutParm)

void UKSWeaponAttachment::GetValidAttachPoints(struct FGameplayTagContainer* OutAttachPoints)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAttachment.GetValidAttachPoints");

	UKSWeaponAttachment_GetValidAttachPoints_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutAttachPoints != nullptr)
		*OutAttachPoints = params.OutAttachPoints;
}


// Function Killstreak.KSWeaponAttachment.GetFunctionalClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)

void UKSWeaponAttachment::GetFunctionalClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAttachment.GetFunctionalClass");

	UKSWeaponAttachment_GetFunctionalClass_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAttachment.GetCosmeticClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)

void UKSWeaponAttachment::GetCosmeticClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAttachment.GetCosmeticClass");

	UKSWeaponAttachment_GetCosmeticClass_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAttachment.CanAttachToWeaponType
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag*           InWeaponType                   (ConstParm, Parm, OutParm, ReferenceParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSWeaponAttachment::CanAttachToWeaponType(struct FGameplayTag* InWeaponType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAttachment.CanAttachToWeaponType");

	UKSWeaponAttachment_CanAttachToWeaponType_Params params;
	params.InWeaponType = InWeaponType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAttachment.CanAttachTo
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AKSWeapon**              InWeapon                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FGameplayTagContainer   AvailableAttachPoints          (Parm, OutParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSWeaponAttachment::CanAttachTo(class AKSWeapon** InWeapon, struct FGameplayTagContainer* AvailableAttachPoints)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAttachment.CanAttachTo");

	UKSWeaponAttachment_CanAttachTo_Params params;
	params.InWeapon = InWeapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (AvailableAttachPoints != nullptr)
		*AvailableAttachPoints = params.AvailableAttachPoints;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAttachment_ExtMagazine.GetClipSize
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UKSWeaponAttachment_ExtMagazine::GetClipSize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAttachment_ExtMagazine.GetClipSize");

	UKSWeaponAttachment_ExtMagazine_GetClipSize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAttachment_QuickMag.GetReloadPeriodMultiplier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAttachment_QuickMag::GetReloadPeriodMultiplier()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAttachment_QuickMag.GetReloadPeriodMultiplier");

	UKSWeaponAttachment_QuickMag_GetReloadPeriodMultiplier_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAttachment_ScopeFixedFOV.GetAimDownSightsFieldOfView
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAttachment_ScopeFixedFOV::GetAimDownSightsFieldOfView()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAttachment_ScopeFixedFOV.GetAimDownSightsFieldOfView");

	UKSWeaponAttachment_ScopeFixedFOV_GetAimDownSightsFieldOfView_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAttachment_ScopeMultiply.GetScopeMultiplier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAttachment_ScopeMultiply::GetScopeMultiplier()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAttachment_ScopeMultiply.GetScopeMultiplier");

	UKSWeaponAttachment_ScopeMultiply_GetScopeMultiplier_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAttachment_Silencer.GetAudibleRange
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAttachment_Silencer::GetAudibleRange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAttachment_Silencer.GetAudibleRange");

	UKSWeaponAttachment_Silencer_GetAudibleRange_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAttachment_VarScope.GetScopeFOVOptions
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UKSWeaponAsset**         InAsset                        (Parm, ZeroConstructor, IsPlainOldData)
// TArray<float>                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<float> UKSWeaponAttachment_VarScope::GetScopeFOVOptions(class UKSWeaponAsset** InAsset)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAttachment_VarScope.GetScopeFOVOptions");

	UKSWeaponAttachment_VarScope_GetScopeFOVOptions_Params params;
	params.InAsset = InAsset;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAttachment_VarScope.GetScopeFOV
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UKSWeaponAsset**         InAsset                        (Parm, ZeroConstructor, IsPlainOldData)
// int*                           nIndex                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponAttachment_VarScope::GetScopeFOV(class UKSWeaponAsset** InAsset, int* nIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAttachment_VarScope.GetScopeFOV");

	UKSWeaponAttachment_VarScope_GetScopeFOV_Params params;
	params.InAsset = InAsset;
	params.nIndex = nIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAttachment_VarScope.GetNumScopeOptions
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UKSWeaponAttachment_VarScope::GetNumScopeOptions()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAttachment_VarScope.GetNumScopeOptions");

	UKSWeaponAttachment_VarScope_GetNumScopeOptions_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAttachmentInstance.SetPersistsOnWeaponDrop
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          bEnable                        (Parm, ZeroConstructor, IsPlainOldData)

void UKSWeaponAttachmentInstance::SetPersistsOnWeaponDrop(bool* bEnable)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAttachmentInstance.SetPersistsOnWeaponDrop");

	UKSWeaponAttachmentInstance_SetPersistsOnWeaponDrop_Params params;
	params.bEnable = bEnable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAttachmentInstance.OnUnattached
// (Native, Event, Protected, BlueprintEvent)

void UKSWeaponAttachmentInstance::OnUnattached()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAttachmentInstance.OnUnattached");

	UKSWeaponAttachmentInstance_OnUnattached_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAttachmentInstance.OnRep_AttachPoint
// (Native, Protected)

void UKSWeaponAttachmentInstance::OnRep_AttachPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAttachmentInstance.OnRep_AttachPoint");

	UKSWeaponAttachmentInstance_OnRep_AttachPoint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAttachmentInstance.OnRep_AttachmentAsset
// (Native, Protected)

void UKSWeaponAttachmentInstance::OnRep_AttachmentAsset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAttachmentInstance.OnRep_AttachmentAsset");

	UKSWeaponAttachmentInstance_OnRep_AttachmentAsset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAttachmentInstance.OnAttached
// (Native, Event, Protected, BlueprintEvent)

void UKSWeaponAttachmentInstance::OnAttached()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAttachmentInstance.OnAttached");

	UKSWeaponAttachmentInstance_OnAttached_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAttachmentInstance.IsAttached
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSWeaponAttachmentInstance::IsAttached()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAttachmentInstance.IsAttached");

	UKSWeaponAttachmentInstance_IsAttached_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAttachmentInstance.GetPersistsOnWeaponDrop
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSWeaponAttachmentInstance::GetPersistsOnWeaponDrop()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAttachmentInstance.GetPersistsOnWeaponDrop");

	UKSWeaponAttachmentInstance_GetPersistsOnWeaponDrop_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAttachmentInstance.GetOwningWeapon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AKSWeapon*               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class AKSWeapon* UKSWeaponAttachmentInstance::GetOwningWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAttachmentInstance.GetOwningWeapon");

	UKSWeaponAttachmentInstance_GetOwningWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAttachmentInstance.GetAttachPoint
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag            ReturnValue                    (Parm, OutParm, ReturnParm)

struct FGameplayTag UKSWeaponAttachmentInstance::GetAttachPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAttachmentInstance.GetAttachPoint");

	UKSWeaponAttachmentInstance_GetAttachPoint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAttachmentInstance.GetAttachmentAsset
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UKSWeaponAttachment*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UKSWeaponAttachment* UKSWeaponAttachmentInstance::GetAttachmentAsset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAttachmentInstance.GetAttachmentAsset");

	UKSWeaponAttachmentInstance_GetAttachmentAsset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponAttachmentInst_VarScope.ServerSetScopeZoomIndex
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// unsigned char*                 NewIndex                       (Parm, ZeroConstructor, IsPlainOldData)

void UKSWeaponAttachmentInst_VarScope::ServerSetScopeZoomIndex(unsigned char* NewIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAttachmentInst_VarScope.ServerSetScopeZoomIndex");

	UKSWeaponAttachmentInst_VarScope_ServerSetScopeZoomIndex_Params params;
	params.NewIndex = NewIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.UpdateOwnerLocallyViewed
// (Final, Native, Public)
// Parameters:
// bool*                          bIsLocallyViewed               (Parm, ZeroConstructor, IsPlainOldData)

void UKSWeaponComponent::UpdateOwnerLocallyViewed(bool* bIsLocallyViewed)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.UpdateOwnerLocallyViewed");

	UKSWeaponComponent_UpdateOwnerLocallyViewed_Params params;
	params.bIsLocallyViewed = bIsLocallyViewed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.TriggerEngagement
// (Final, Native, Protected, BlueprintCallable)

void UKSWeaponComponent::TriggerEngagement()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.TriggerEngagement");

	UKSWeaponComponent_TriggerEngagement_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.TriggerCombat
// (Final, Native, Protected, BlueprintCallable)

void UKSWeaponComponent::TriggerCombat()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.TriggerCombat");

	UKSWeaponComponent_TriggerCombat_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.TickViewerAim
// (BlueprintCosmetic, Native, Event, Protected, BlueprintEvent)
// Parameters:
// float*                         DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void UKSWeaponComponent::TickViewerAim(float* DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.TickViewerAim");

	UKSWeaponComponent_TickViewerAim_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.TickNonViewerAim
// (BlueprintCosmetic, Native, Event, Protected, BlueprintEvent)
// Parameters:
// float*                         DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)

void UKSWeaponComponent::TickNonViewerAim(float* DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.TickNonViewerAim");

	UKSWeaponComponent_TickNonViewerAim_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.StopDefaultAim
// (BlueprintCosmetic, Native, Event, Protected, BlueprintEvent)

void UKSWeaponComponent::StopDefaultAim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.StopDefaultAim");

	UKSWeaponComponent_StopDefaultAim_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.StopAimOverShoulder
// (BlueprintCosmetic, Native, Event, Protected, BlueprintEvent)

void UKSWeaponComponent::StopAimOverShoulder()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.StopAimOverShoulder");

	UKSWeaponComponent_StopAimOverShoulder_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.StopAimDownSights
// (BlueprintCosmetic, Native, Event, Protected, BlueprintEvent)

void UKSWeaponComponent::StopAimDownSights()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.StopAimDownSights");

	UKSWeaponComponent_StopAimDownSights_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.StopAimAlternate
// (BlueprintCosmetic, Native, Event, Protected, BlueprintEvent)

void UKSWeaponComponent::StopAimAlternate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.StopAimAlternate");

	UKSWeaponComponent_StopAimAlternate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.StartDefaultAim
// (BlueprintCosmetic, Native, Event, Protected, BlueprintEvent)

void UKSWeaponComponent::StartDefaultAim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.StartDefaultAim");

	UKSWeaponComponent_StartDefaultAim_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.StartAimOverShoulder
// (BlueprintCosmetic, Native, Event, Protected, BlueprintEvent)

void UKSWeaponComponent::StartAimOverShoulder()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.StartAimOverShoulder");

	UKSWeaponComponent_StartAimOverShoulder_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.StartAimDownSights
// (BlueprintCosmetic, Native, Event, Protected, BlueprintEvent)

void UKSWeaponComponent::StartAimDownSights()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.StartAimDownSights");

	UKSWeaponComponent_StartAimDownSights_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.StartAimAlternate
// (BlueprintCosmetic, Native, Event, Protected, BlueprintEvent)

void UKSWeaponComponent::StartAimAlternate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.StartAimAlternate");

	UKSWeaponComponent_StartAimAlternate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.ShouldBroadcastWeaponStateChange
// (Native, Event, Protected, HasOutParms, BlueprintEvent, Const)
// Parameters:
// struct FKSWeaponDataUpdateContainer* OldState                       (Parm)
// struct FKSWeaponDataUpdateContainer* NewState                       (Parm)
// bool                           bReliable                      (Parm, OutParm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSWeaponComponent::ShouldBroadcastWeaponStateChange(struct FKSWeaponDataUpdateContainer* OldState, struct FKSWeaponDataUpdateContainer* NewState, bool* bReliable)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.ShouldBroadcastWeaponStateChange");

	UKSWeaponComponent_ShouldBroadcastWeaponStateChange_Params params;
	params.OldState = OldState;
	params.NewState = NewState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (bReliable != nullptr)
		*bReliable = params.bReliable;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponComponent.SetWeaponVisibility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          Visible                        (Parm, ZeroConstructor, IsPlainOldData)

void UKSWeaponComponent::SetWeaponVisibility(bool* Visible)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.SetWeaponVisibility");

	UKSWeaponComponent_SetWeaponVisibility_Params params;
	params.Visible = Visible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.ReportNewWeaponLowerAlpha
// (Event, Protected, BlueprintEvent)
// Parameters:
// float*                         NewAlpha                       (Parm, ZeroConstructor, IsPlainOldData)
// float*                         DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          ForceReset                     (Parm, ZeroConstructor, IsPlainOldData)

void UKSWeaponComponent::ReportNewWeaponLowerAlpha(float* NewAlpha, float* DeltaTime, bool* ForceReset)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.ReportNewWeaponLowerAlpha");

	UKSWeaponComponent_ReportNewWeaponLowerAlpha_Params params;
	params.NewAlpha = NewAlpha;
	params.DeltaTime = DeltaTime;
	params.ForceReset = ForceReset;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.OnWeaponStateChanged
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// EWeaponStateNew*               OldState                       (Parm, ZeroConstructor, IsPlainOldData)
// EWeaponStateNew*               NewState                       (Parm, ZeroConstructor, IsPlainOldData)

void UKSWeaponComponent::OnWeaponStateChanged(EWeaponStateNew* OldState, EWeaponStateNew* NewState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.OnWeaponStateChanged");

	UKSWeaponComponent_OnWeaponStateChanged_Params params;
	params.OldState = OldState;
	params.NewState = NewState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.OnUnsetAsActivePrimaryWeapon
// (Native, Event, Protected, BlueprintEvent)

void UKSWeaponComponent::OnUnsetAsActivePrimaryWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.OnUnsetAsActivePrimaryWeapon");

	UKSWeaponComponent_OnUnsetAsActivePrimaryWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.OnSetAsActivePrimaryWeapon
// (Native, Event, Protected, BlueprintEvent)

void UKSWeaponComponent::OnSetAsActivePrimaryWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.OnSetAsActivePrimaryWeapon");

	UKSWeaponComponent_OnSetAsActivePrimaryWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.OnRep_WeaponState
// (Final, Native, Protected)

void UKSWeaponComponent::OnRep_WeaponState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.OnRep_WeaponState");

	UKSWeaponComponent_OnRep_WeaponState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.OnRep_WeaponAsset
// (Final, Native, Protected)

void UKSWeaponComponent::OnRep_WeaponAsset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.OnRep_WeaponAsset");

	UKSWeaponComponent_OnRep_WeaponAsset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.OnRep_InitialState
// (Final, Native, Protected)

void UKSWeaponComponent::OnRep_InitialState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.OnRep_InitialState");

	UKSWeaponComponent_OnRep_InitialState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.OnRep_AmmoInClip
// (Final, Native, Protected)

void UKSWeaponComponent::OnRep_AmmoInClip()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.OnRep_AmmoInClip");

	UKSWeaponComponent_OnRep_AmmoInClip_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.OnInvalidFire
// (BlueprintCosmetic, Native, Event, Protected, BlueprintEvent)

void UKSWeaponComponent::OnInvalidFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.OnInvalidFire");

	UKSWeaponComponent_OnInvalidFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.OnInitialize
// (Native, Event, Protected, BlueprintEvent)

void UKSWeaponComponent::OnInitialize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.OnInitialize");

	UKSWeaponComponent_OnInitialize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.OnFireWeaponFull
// (Native, Event, Protected, HasOutParms, BlueprintEvent)
// Parameters:
// struct FFullFireRepData*       Data                           (ConstParm, Parm, OutParm, ReferenceParm)

void UKSWeaponComponent::OnFireWeaponFull(struct FFullFireRepData* Data)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.OnFireWeaponFull");

	UKSWeaponComponent_OnFireWeaponFull_Params params;
	params.Data = Data;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.OnFireWeapon
// (Native, Event, Protected, HasOutParms, BlueprintEvent)
// Parameters:
// struct FAimData*               Aim                            (ConstParm, Parm, OutParm, ReferenceParm)

void UKSWeaponComponent::OnFireWeapon(struct FAimData* Aim)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.OnFireWeapon");

	UKSWeaponComponent_OnFireWeapon_Params params;
	params.Aim = Aim;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.OnEmptyFire
// (BlueprintCosmetic, Native, Event, Protected, BlueprintEvent)

void UKSWeaponComponent::OnEmptyFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.OnEmptyFire");

	UKSWeaponComponent_OnEmptyFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.OnActiveMaterialsApplied
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class USkinnableSkeletalMeshComponent** SkinnableSkelComp              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UKSWeaponComponent::OnActiveMaterialsApplied(class USkinnableSkeletalMeshComponent** SkinnableSkelComp)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.OnActiveMaterialsApplied");

	UKSWeaponComponent_OnActiveMaterialsApplied_Params params;
	params.SkinnableSkelComp = SkinnableSkelComp;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.NotifyStopFireReceived
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UKSWeaponComponent::NotifyStopFireReceived()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.NotifyStopFireReceived");

	UKSWeaponComponent_NotifyStopFireReceived_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.IsWeaponSilenced
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSWeaponComponent::IsWeaponSilenced()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.IsWeaponSilenced");

	UKSWeaponComponent_IsWeaponSilenced_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponComponent.IsWeaponPendingFireWithValidAmmo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSWeaponComponent::IsWeaponPendingFireWithValidAmmo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.IsWeaponPendingFireWithValidAmmo");

	UKSWeaponComponent_IsWeaponPendingFireWithValidAmmo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponComponent.IsReloading
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSWeaponComponent::IsReloading()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.IsReloading");

	UKSWeaponComponent_IsReloading_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponComponent.IsPrimaryAciveWeapon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSWeaponComponent::IsPrimaryAciveWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.IsPrimaryAciveWeapon");

	UKSWeaponComponent_IsPrimaryAciveWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponComponent.IsModelViewer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSWeaponComponent::IsModelViewer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.IsModelViewer");

	UKSWeaponComponent_IsModelViewer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponComponent.IsClipEmpty
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSWeaponComponent::IsClipEmpty()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.IsClipEmpty");

	UKSWeaponComponent_IsClipEmpty_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponComponent.IsAimingOverShoulder
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSWeaponComponent::IsAimingOverShoulder()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.IsAimingOverShoulder");

	UKSWeaponComponent_IsAimingOverShoulder_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponComponent.IsAimingDownSights
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSWeaponComponent::IsAimingDownSights()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.IsAimingDownSights");

	UKSWeaponComponent_IsAimingDownSights_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponComponent.IsAimingAlternate
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSWeaponComponent::IsAimingAlternate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.IsAimingAlternate");

	UKSWeaponComponent_IsAimingAlternate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponComponent.IsAiming
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSWeaponComponent::IsAiming()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.IsAiming");

	UKSWeaponComponent_IsAiming_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponComponent.IsAimedAtEnemy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSWeaponComponent::IsAimedAtEnemy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.IsAimedAtEnemy");

	UKSWeaponComponent_IsAimedAtEnemy_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponComponent.IsActiveWeapon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSWeaponComponent::IsActiveWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.IsActiveWeapon");

	UKSWeaponComponent_IsActiveWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponComponent.GetWeaponState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EWeaponStateNew                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EWeaponStateNew UKSWeaponComponent::GetWeaponState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetWeaponState");

	UKSWeaponComponent_GetWeaponState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponComponent.GetWeaponSkeletalMeshComponentNew
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UKSWeaponSkeletalMeshComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UKSWeaponSkeletalMeshComponent* UKSWeaponComponent::GetWeaponSkeletalMeshComponentNew()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetWeaponSkeletalMeshComponentNew");

	UKSWeaponComponent_GetWeaponSkeletalMeshComponentNew_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponComponent.GetWeaponSkeletalMeshComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USkeletalMeshComponent*  ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class USkeletalMeshComponent* UKSWeaponComponent::GetWeaponSkeletalMeshComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetWeaponSkeletalMeshComponent");

	UKSWeaponComponent_GetWeaponSkeletalMeshComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponComponent.GetWeaponAsset
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UKSWeaponAsset*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UKSWeaponAsset* UKSWeaponComponent::GetWeaponAsset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetWeaponAsset");

	UKSWeaponComponent_GetWeaponAsset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponComponent.GetWeaponAnimInstance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAnimInstance*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UAnimInstance* UKSWeaponComponent::GetWeaponAnimInstance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetWeaponAnimInstance");

	UKSWeaponComponent_GetWeaponAnimInstance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponComponent.GetWalkSpeedModifier
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponComponent::GetWalkSpeedModifier()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetWalkSpeedModifier");

	UKSWeaponComponent_GetWalkSpeedModifier_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponComponent.GetViewModelScale
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector UKSWeaponComponent::GetViewModelScale()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetViewModelScale");

	UKSWeaponComponent_GetViewModelScale_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponComponent.GetViewModelRotation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRotator                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FRotator UKSWeaponComponent::GetViewModelRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetViewModelRotation");

	UKSWeaponComponent_GetViewModelRotation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponComponent.GetVibrationEffect
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UForceFeedbackEffect*    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UForceFeedbackEffect* UKSWeaponComponent::GetVibrationEffect()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetVibrationEffect");

	UKSWeaponComponent_GetVibrationEffect_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponComponent.GetTargetingModuleInstance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UKSWeaponTargetingModule* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UKSWeaponTargetingModule* UKSWeaponComponent::GetTargetingModuleInstance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetTargetingModuleInstance");

	UKSWeaponComponent_GetTargetingModuleInstance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponComponent.GetScopeSocketName
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FName                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FName UKSWeaponComponent::GetScopeSocketName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetScopeSocketName");

	UKSWeaponComponent_GetScopeSocketName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponComponent.GetRetrieveTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponComponent::GetRetrieveTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetRetrieveTime");

	UKSWeaponComponent_GetRetrieveTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponComponent.GetReloadTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponComponent::GetReloadTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetReloadTime");

	UKSWeaponComponent_GetReloadTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponComponent.GetMuzzleSocketName
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FName                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FName UKSWeaponComponent::GetMuzzleSocketName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetMuzzleSocketName");

	UKSWeaponComponent_GetMuzzleSocketName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponComponent.GetMovementAccuracyPenalty
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponComponent::GetMovementAccuracyPenalty()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetMovementAccuracyPenalty");

	UKSWeaponComponent_GetMovementAccuracyPenalty_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponComponent.GetMaxFiringAccuracyLoss
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponComponent::GetMaxFiringAccuracyLoss()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetMaxFiringAccuracyLoss");

	UKSWeaponComponent_GetMaxFiringAccuracyLoss_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponComponent.GetMagnifierValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponComponent::GetMagnifierValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetMagnifierValue");

	UKSWeaponComponent_GetMagnifierValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponComponent.GetLoadedAccumulatedAttachmentOverrideData
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FLoadedWeaponAttachmentAnimationData OutData                        (Parm, OutParm)

void UKSWeaponComponent::GetLoadedAccumulatedAttachmentOverrideData(struct FLoadedWeaponAttachmentAnimationData* OutData)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetLoadedAccumulatedAttachmentOverrideData");

	UKSWeaponComponent_GetLoadedAccumulatedAttachmentOverrideData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutData != nullptr)
		*OutData = params.OutData;
}


// Function Killstreak.KSWeaponComponent.GetInAirAccuracyModifier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponComponent::GetInAirAccuracyModifier()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetInAirAccuracyModifier");

	UKSWeaponComponent_GetInAirAccuracyModifier_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponComponent.GetGrenadeTargetingModuleInstance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UKSGrenadeTargetingModule* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UKSGrenadeTargetingModule* UKSWeaponComponent::GetGrenadeTargetingModuleInstance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetGrenadeTargetingModuleInstance");

	UKSWeaponComponent_GetGrenadeTargetingModuleInstance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponComponent.GetFiringTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponComponent::GetFiringTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetFiringTime");

	UKSWeaponComponent_GetFiringTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponComponent.GetDuplicateSkeletalMeshComponentNew
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UKSWeaponSkeletalMeshComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UKSWeaponSkeletalMeshComponent* UKSWeaponComponent::GetDuplicateSkeletalMeshComponentNew()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetDuplicateSkeletalMeshComponentNew");

	UKSWeaponComponent_GetDuplicateSkeletalMeshComponentNew_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponComponent.GetDuplicateSkeletalMeshComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USkeletalMeshComponent*  ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class USkeletalMeshComponent* UKSWeaponComponent::GetDuplicateSkeletalMeshComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetDuplicateSkeletalMeshComponent");

	UKSWeaponComponent_GetDuplicateSkeletalMeshComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponComponent.GetCurrentAccuracy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponComponent::GetCurrentAccuracy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetCurrentAccuracy");

	UKSWeaponComponent_GetCurrentAccuracy_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponComponent.GetCrouchAccuracyModifier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponComponent::GetCrouchAccuracyModifier()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetCrouchAccuracyModifier");

	UKSWeaponComponent_GetCrouchAccuracyModifier_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponComponent.GetClipSize
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// unsigned char                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

unsigned char UKSWeaponComponent::GetClipSize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetClipSize");

	UKSWeaponComponent_GetClipSize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponComponent.GetBaseRetrieveTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponComponent::GetBaseRetrieveTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetBaseRetrieveTime");

	UKSWeaponComponent_GetBaseRetrieveTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponComponent.GetBaseReloadTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponComponent::GetBaseReloadTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetBaseReloadTime");

	UKSWeaponComponent_GetBaseReloadTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponComponent.GetBaseFiringTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponComponent::GetBaseFiringTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetBaseFiringTime");

	UKSWeaponComponent_GetBaseFiringTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponComponent.GetBaseAccuracy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponComponent::GetBaseAccuracy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetBaseAccuracy");

	UKSWeaponComponent_GetBaseAccuracy_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponComponent.GetAttachments
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UKSWeaponAttachment*> OutWeaponAttachments           (Parm, OutParm, ZeroConstructor)

void UKSWeaponComponent::GetAttachments(TArray<class UKSWeaponAttachment*>* OutWeaponAttachments)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetAttachments");

	UKSWeaponComponent_GetAttachments_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutWeaponAttachments != nullptr)
		*OutWeaponAttachments = params.OutWeaponAttachments;
}


// Function Killstreak.KSWeaponComponent.GetAttachmentCosmeticInstances
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UKSWeaponAttachmentCosmeticInst*> OutWeaponAttachmentCosmetics   (Parm, OutParm, ZeroConstructor)

void UKSWeaponComponent::GetAttachmentCosmeticInstances(TArray<class UKSWeaponAttachmentCosmeticInst*>* OutWeaponAttachmentCosmetics)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetAttachmentCosmeticInstances");

	UKSWeaponComponent_GetAttachmentCosmeticInstances_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutWeaponAttachmentCosmetics != nullptr)
		*OutWeaponAttachmentCosmetics = params.OutWeaponAttachmentCosmetics;
}


// Function Killstreak.KSWeaponComponent.GetAncillaryMeshes
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class USkeletalMeshComponent*> ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm)

TArray<class USkeletalMeshComponent*> UKSWeaponComponent::GetAncillaryMeshes()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetAncillaryMeshes");

	UKSWeaponComponent_GetAncillaryMeshes_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponComponent.GetAmmoInOwnerInventory
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UKSWeaponComponent::GetAmmoInOwnerInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetAmmoInOwnerInventory");

	UKSWeaponComponent_GetAmmoInOwnerInventory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponComponent.GetAmmoInClip
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// unsigned char                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

unsigned char UKSWeaponComponent::GetAmmoInClip()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetAmmoInClip");

	UKSWeaponComponent_GetAmmoInClip_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponComponent.GetAlternativeVibrationEffect
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UForceFeedbackEffect*    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UForceFeedbackEffect* UKSWeaponComponent::GetAlternativeVibrationEffect()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetAlternativeVibrationEffect");

	UKSWeaponComponent_GetAlternativeVibrationEffect_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponComponent.GetAlternativeVibrationAttenuation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UForceFeedbackAttenuation* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UForceFeedbackAttenuation* UKSWeaponComponent::GetAlternativeVibrationAttenuation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetAlternativeVibrationAttenuation");

	UKSWeaponComponent_GetAlternativeVibrationAttenuation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponComponent.GetAimOverShoulderAccuracyModifier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponComponent::GetAimOverShoulderAccuracyModifier()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetAimOverShoulderAccuracyModifier");

	UKSWeaponComponent_GetAimOverShoulderAccuracyModifier_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponComponent.GetAimMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EKSCharacterAimMode            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

EKSCharacterAimMode UKSWeaponComponent::GetAimMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetAimMode");

	UKSWeaponComponent_GetAimMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponComponent.GetAdjustedRetrieveRate
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponComponent::GetAdjustedRetrieveRate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetAdjustedRetrieveRate");

	UKSWeaponComponent_GetAdjustedRetrieveRate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponComponent.GetAdjustedReloadRate
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponComponent::GetAdjustedReloadRate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetAdjustedReloadRate");

	UKSWeaponComponent_GetAdjustedReloadRate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponComponent.GetAdjustedFiringRate
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponComponent::GetAdjustedFiringRate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetAdjustedFiringRate");

	UKSWeaponComponent_GetAdjustedFiringRate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponComponent.GetActiveIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

int UKSWeaponComponent::GetActiveIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetActiveIndex");

	UKSWeaponComponent_GetActiveIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponComponent.GetAccuracyReturnRate
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponComponent::GetAccuracyReturnRate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetAccuracyReturnRate");

	UKSWeaponComponent_GetAccuracyReturnRate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponComponent.GetAccuracyReturnDelay
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponComponent::GetAccuracyReturnDelay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetAccuracyReturnDelay");

	UKSWeaponComponent_GetAccuracyReturnDelay_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponComponent.GetAccuracyLossPerShot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponComponent::GetAccuracyLossPerShot()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetAccuracyLossPerShot");

	UKSWeaponComponent_GetAccuracyLossPerShot_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponComponent.ForceRetrieveWeapon
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UKSWeaponComponent::ForceRetrieveWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.ForceRetrieveWeapon");

	UKSWeaponComponent_ForceRetrieveWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.ForceHolsterWeapon
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UKSWeaponComponent::ForceHolsterWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.ForceHolsterWeapon");

	UKSWeaponComponent_ForceHolsterWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.ForceAimUpdate
// (Final, Native, Public, BlueprintCallable)

void UKSWeaponComponent::ForceAimUpdate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.ForceAimUpdate");

	UKSWeaponComponent_ForceAimUpdate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.EventUpdateOwnerLocallyViewed
// (Event, Public, BlueprintEvent)
// Parameters:
// bool*                          bIsLocallyViewed               (Parm, ZeroConstructor, IsPlainOldData)

void UKSWeaponComponent::EventUpdateOwnerLocallyViewed(bool* bIsLocallyViewed)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.EventUpdateOwnerLocallyViewed");

	UKSWeaponComponent_EventUpdateOwnerLocallyViewed_Params params;
	params.bIsLocallyViewed = bIsLocallyViewed;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.EvaluateWeaponLowering
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// float*                         DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponComponent::EvaluateWeaponLowering(float* DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.EvaluateWeaponLowering");

	UKSWeaponComponent_EvaluateWeaponLowering_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponComponent.DropMagazine
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UKSWeaponComponent::DropMagazine()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.DropMagazine");

	UKSWeaponComponent_DropMagazine_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.CreateWeaponSkeletalMeshComponent
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UKSWeaponSkeletalMeshComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UKSWeaponSkeletalMeshComponent* UKSWeaponComponent::CreateWeaponSkeletalMeshComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.CreateWeaponSkeletalMeshComponent");

	UKSWeaponComponent_CreateWeaponSkeletalMeshComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponComponent.CanUseCombatState
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// ECombatState*                  TestState                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSWeaponComponent::CanUseCombatState(ECombatState* TestState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.CanUseCombatState");

	UKSWeaponComponent_CanUseCombatState_Params params;
	params.TestState = TestState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponComponent.CanReceiveAttachment
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UKSWeaponAttachment**    InAttachment                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FGameplayTagContainer   AvailableAttachPoints          (Parm, OutParm)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSWeaponComponent::CanReceiveAttachment(class UKSWeaponAttachment** InAttachment, struct FGameplayTagContainer* AvailableAttachPoints)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.CanReceiveAttachment");

	UKSWeaponComponent_CanReceiveAttachment_Params params;
	params.InAttachment = InAttachment;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (AvailableAttachPoints != nullptr)
		*AvailableAttachPoints = params.AvailableAttachPoints;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponComponent.CanLowerWeaponNow
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSWeaponComponent::CanLowerWeaponNow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.CanLowerWeaponNow");

	UKSWeaponComponent_CanLowerWeaponNow_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponComponent.CancelReloadCosmetic
// (BlueprintCosmetic, Event, Public, BlueprintCallable, BlueprintEvent)

void UKSWeaponComponent::CancelReloadCosmetic()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.CancelReloadCosmetic");

	UKSWeaponComponent_CancelReloadCosmetic_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.BroadcastWeaponStateChange
// (Net, Native, Event, NetMulticast, Protected)
// Parameters:
// uint32_t*                      BroadcastId                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FKSWeaponDataUpdateContainer* NewState                       (Parm)

void UKSWeaponComponent::BroadcastWeaponStateChange(uint32_t* BroadcastId, struct FKSWeaponDataUpdateContainer* NewState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.BroadcastWeaponStateChange");

	UKSWeaponComponent_BroadcastWeaponStateChange_Params params;
	params.BroadcastId = BroadcastId;
	params.NewState = NewState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.BroadcastReliableWeaponStateChange
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// uint32_t*                      BroadcastId                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FKSWeaponDataUpdateContainer* NewState                       (Parm)

void UKSWeaponComponent::BroadcastReliableWeaponStateChange(uint32_t* BroadcastId, struct FKSWeaponDataUpdateContainer* NewState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.BroadcastReliableWeaponStateChange");

	UKSWeaponComponent_BroadcastReliableWeaponStateChange_Params params;
	params.BroadcastId = BroadcastId;
	params.NewState = NewState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.BroadcastReliablePostReload
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// uint32_t*                      BroadcastId                    (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char*                 InAmmoInClip                   (Parm, ZeroConstructor, IsPlainOldData)

void UKSWeaponComponent::BroadcastReliablePostReload(uint32_t* BroadcastId, unsigned char* InAmmoInClip)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.BroadcastReliablePostReload");

	UKSWeaponComponent_BroadcastReliablePostReload_Params params;
	params.BroadcastId = BroadcastId;
	params.InAmmoInClip = InAmmoInClip;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.BroadcastReliablePostFireWithAmmo
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// uint32_t*                      BroadcastId                    (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char*                 InAmmoInClip                   (Parm, ZeroConstructor, IsPlainOldData)

void UKSWeaponComponent::BroadcastReliablePostFireWithAmmo(uint32_t* BroadcastId, unsigned char* InAmmoInClip)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.BroadcastReliablePostFireWithAmmo");

	UKSWeaponComponent_BroadcastReliablePostFireWithAmmo_Params params;
	params.BroadcastId = BroadcastId;
	params.InAmmoInClip = InAmmoInClip;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.BroadcastReliableEmptyFire
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// uint32_t*                      BroadcastId                    (Parm, ZeroConstructor, IsPlainOldData)

void UKSWeaponComponent::BroadcastReliableEmptyFire(uint32_t* BroadcastId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.BroadcastReliableEmptyFire");

	UKSWeaponComponent_BroadcastReliableEmptyFire_Params params;
	params.BroadcastId = BroadcastId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.BroadcastReliableAmmoChange
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// uint32_t*                      BroadcastId                    (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char*                 InAmmoInClip                   (Parm, ZeroConstructor, IsPlainOldData)

void UKSWeaponComponent::BroadcastReliableAmmoChange(uint32_t* BroadcastId, unsigned char* InAmmoInClip)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.BroadcastReliableAmmoChange");

	UKSWeaponComponent_BroadcastReliableAmmoChange_Params params;
	params.BroadcastId = BroadcastId;
	params.InAmmoInClip = InAmmoInClip;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.BroadcastReliableAimedPostFireWithAmmo
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// uint32_t*                      BroadcastId                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FAimData*               Aim                            (ConstParm, Parm, ReferenceParm)
// unsigned char*                 InAmmoInClip                   (Parm, ZeroConstructor, IsPlainOldData)

void UKSWeaponComponent::BroadcastReliableAimedPostFireWithAmmo(uint32_t* BroadcastId, struct FAimData* Aim, unsigned char* InAmmoInClip)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.BroadcastReliableAimedPostFireWithAmmo");

	UKSWeaponComponent_BroadcastReliableAimedPostFireWithAmmo_Params params;
	params.BroadcastId = BroadcastId;
	params.Aim = Aim;
	params.InAmmoInClip = InAmmoInClip;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.BroadcastReliableAimedPostFireFull
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// uint32_t*                      BroadcastId                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FFullFireRepData*       Data                           (ConstParm, Parm, ReferenceParm)

void UKSWeaponComponent::BroadcastReliableAimedPostFireFull(uint32_t* BroadcastId, struct FFullFireRepData* Data)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.BroadcastReliableAimedPostFireFull");

	UKSWeaponComponent_BroadcastReliableAimedPostFireFull_Params params;
	params.BroadcastId = BroadcastId;
	params.Data = Data;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.BroadcastReliableAimedPostFire
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// uint32_t*                      BroadcastId                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FAimData*               Aim                            (ConstParm, Parm, ReferenceParm)

void UKSWeaponComponent::BroadcastReliableAimedPostFire(uint32_t* BroadcastId, struct FAimData* Aim)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.BroadcastReliableAimedPostFire");

	UKSWeaponComponent_BroadcastReliableAimedPostFire_Params params;
	params.BroadcastId = BroadcastId;
	params.Aim = Aim;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.BroadcastPostReload
// (Net, Native, Event, NetMulticast, Protected)
// Parameters:
// uint32_t*                      BroadcastId                    (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char*                 InAmmoInClip                   (Parm, ZeroConstructor, IsPlainOldData)

void UKSWeaponComponent::BroadcastPostReload(uint32_t* BroadcastId, unsigned char* InAmmoInClip)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.BroadcastPostReload");

	UKSWeaponComponent_BroadcastPostReload_Params params;
	params.BroadcastId = BroadcastId;
	params.InAmmoInClip = InAmmoInClip;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.BroadcastPostFireWithAmmo
// (Net, Native, Event, NetMulticast, Protected)
// Parameters:
// uint32_t*                      BroadcastId                    (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char*                 InAmmoInClip                   (Parm, ZeroConstructor, IsPlainOldData)

void UKSWeaponComponent::BroadcastPostFireWithAmmo(uint32_t* BroadcastId, unsigned char* InAmmoInClip)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.BroadcastPostFireWithAmmo");

	UKSWeaponComponent_BroadcastPostFireWithAmmo_Params params;
	params.BroadcastId = BroadcastId;
	params.InAmmoInClip = InAmmoInClip;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.BroadcastEmptyFire
// (Net, Native, Event, NetMulticast, Protected)
// Parameters:
// uint32_t*                      BroadcastId                    (Parm, ZeroConstructor, IsPlainOldData)

void UKSWeaponComponent::BroadcastEmptyFire(uint32_t* BroadcastId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.BroadcastEmptyFire");

	UKSWeaponComponent_BroadcastEmptyFire_Params params;
	params.BroadcastId = BroadcastId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.BroadcastAmmoChange
// (Net, Native, Event, NetMulticast, Protected)
// Parameters:
// uint32_t*                      BroadcastId                    (Parm, ZeroConstructor, IsPlainOldData)
// unsigned char*                 InAmmoInClip                   (Parm, ZeroConstructor, IsPlainOldData)

void UKSWeaponComponent::BroadcastAmmoChange(uint32_t* BroadcastId, unsigned char* InAmmoInClip)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.BroadcastAmmoChange");

	UKSWeaponComponent_BroadcastAmmoChange_Params params;
	params.BroadcastId = BroadcastId;
	params.InAmmoInClip = InAmmoInClip;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.BroadcastAimedPostFireWithAmmo
// (Net, Native, Event, NetMulticast, Protected)
// Parameters:
// uint32_t*                      BroadcastId                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FAimData*               Aim                            (ConstParm, Parm, ReferenceParm)
// unsigned char*                 InAmmoInClip                   (Parm, ZeroConstructor, IsPlainOldData)

void UKSWeaponComponent::BroadcastAimedPostFireWithAmmo(uint32_t* BroadcastId, struct FAimData* Aim, unsigned char* InAmmoInClip)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.BroadcastAimedPostFireWithAmmo");

	UKSWeaponComponent_BroadcastAimedPostFireWithAmmo_Params params;
	params.BroadcastId = BroadcastId;
	params.Aim = Aim;
	params.InAmmoInClip = InAmmoInClip;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.BroadcastAimedPostFireFull
// (Net, Native, Event, NetMulticast, Protected)
// Parameters:
// uint32_t*                      BroadcastId                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FFullFireRepData*       Data                           (ConstParm, Parm, ReferenceParm)

void UKSWeaponComponent::BroadcastAimedPostFireFull(uint32_t* BroadcastId, struct FFullFireRepData* Data)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.BroadcastAimedPostFireFull");

	UKSWeaponComponent_BroadcastAimedPostFireFull_Params params;
	params.BroadcastId = BroadcastId;
	params.Data = Data;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.BroadcastAimedPostFire
// (Net, Native, Event, NetMulticast, Protected)
// Parameters:
// uint32_t*                      BroadcastId                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FAimData*               Aim                            (ConstParm, Parm, ReferenceParm)

void UKSWeaponComponent::BroadcastAimedPostFire(uint32_t* BroadcastId, struct FAimData* Aim)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.BroadcastAimedPostFire");

	UKSWeaponComponent_BroadcastAimedPostFire_Params params;
	params.BroadcastId = BroadcastId;
	params.Aim = Aim;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.BlueprintPrepareKillCamPlayback
// (Event, Protected, BlueprintEvent)

void UKSWeaponComponent::BlueprintPrepareKillCamPlayback()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.BlueprintPrepareKillCamPlayback");

	UKSWeaponComponent_BlueprintPrepareKillCamPlayback_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.BlueprintPersistentCosmeticsUpdate
// (Event, Protected, BlueprintEvent)

void UKSWeaponComponent::BlueprintPersistentCosmeticsUpdate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.BlueprintPersistentCosmeticsUpdate");

	UKSWeaponComponent_BlueprintPersistentCosmeticsUpdate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.BlueprintFinishKillCamPlayback
// (Event, Protected, BlueprintEvent)

void UKSWeaponComponent::BlueprintFinishKillCamPlayback()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.BlueprintFinishKillCamPlayback");

	UKSWeaponComponent_BlueprintFinishKillCamPlayback_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.BlueprintFillLegacyDataTable
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UDataTable**             LegacyDataTable                (Parm, ZeroConstructor, IsPlainOldData)

void UKSWeaponComponent::BlueprintFillLegacyDataTable(class UDataTable** LegacyDataTable)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.BlueprintFillLegacyDataTable");

	UKSWeaponComponent_BlueprintFillLegacyDataTable_Params params;
	params.LegacyDataTable = LegacyDataTable;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.AimDownSightsCheckpoint
// (BlueprintCosmetic, Native, Event, Public, BlueprintEvent)

void UKSWeaponComponent::AimDownSightsCheckpoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.AimDownSightsCheckpoint");

	UKSWeaponComponent_AimDownSightsCheckpoint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction Killstreak.KSWeaponFunctionLibrary.OnTraceReactionDelay__DelegateSignature
// (Public, Delegate, HasOutParms, HasDefaults)
// Parameters:
// bool*                          bBlockingHit                   (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FHitResult>*     OutHits                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// struct FVector*                start                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FVector*                end                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)

void UKSWeaponFunctionLibrary::OnTraceReactionDelay__DelegateSignature(bool* bBlockingHit, TArray<struct FHitResult>* OutHits, struct FVector* start, struct FVector* end)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Killstreak.KSWeaponFunctionLibrary.OnTraceReactionDelay__DelegateSignature");

	UKSWeaponFunctionLibrary_OnTraceReactionDelay__DelegateSignature_Params params;
	params.bBlockingHit = bBlockingHit;
	params.OutHits = OutHits;
	params.start = start;
	params.end = end;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponFunctionLibrary.MultiLineWeaponTraceByObjectType
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UKSWeaponAsset**         Weapon                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                start                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                end                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// TArray<TEnumAsByte<EObjectTypeQuery>>* ObjectTypes                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// bool*                          bTraceComplex                  (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class AActor*>*         ActorsToIgnore                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// TEnumAsByte<EDrawDebugTrace>*  DrawDebugType                  (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FHitResult>      OutHits                        (Parm, OutParm, ZeroConstructor)
// bool*                          bIgnoreSelf                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor*           TraceColor                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor*           TraceHitColor                  (Parm, ZeroConstructor, IsPlainOldData)
// float*                         DrawTime                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSWeaponFunctionLibrary::STATIC_MultiLineWeaponTraceByObjectType(class UObject** WorldContextObject, class UKSWeaponAsset** Weapon, struct FVector* start, struct FVector* end, TArray<TEnumAsByte<EObjectTypeQuery>>* ObjectTypes, bool* bTraceComplex, TArray<class AActor*>* ActorsToIgnore, TEnumAsByte<EDrawDebugTrace>* DrawDebugType, bool* bIgnoreSelf, struct FLinearColor* TraceColor, struct FLinearColor* TraceHitColor, float* DrawTime, TArray<struct FHitResult>* OutHits)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponFunctionLibrary.MultiLineWeaponTraceByObjectType");

	UKSWeaponFunctionLibrary_MultiLineWeaponTraceByObjectType_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Weapon = Weapon;
	params.start = start;
	params.end = end;
	params.ObjectTypes = ObjectTypes;
	params.bTraceComplex = bTraceComplex;
	params.ActorsToIgnore = ActorsToIgnore;
	params.DrawDebugType = DrawDebugType;
	params.bIgnoreSelf = bIgnoreSelf;
	params.TraceColor = TraceColor;
	params.TraceHitColor = TraceHitColor;
	params.DrawTime = DrawTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutHits != nullptr)
		*OutHits = params.OutHits;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponFunctionLibrary.MultiLineWeaponTraceByChannel
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UKSWeaponAsset**         Weapon                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                start                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                end                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<ETraceTypeQuery>*  TraceChannel                   (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bTraceComplex                  (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class AActor*>*         ActorsToIgnore                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// TEnumAsByte<EDrawDebugTrace>*  DrawDebugType                  (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FHitResult>      OutHits                        (Parm, OutParm, ZeroConstructor)
// bool*                          bIgnoreSelf                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor*           TraceColor                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor*           TraceHitColor                  (Parm, ZeroConstructor, IsPlainOldData)
// float*                         DrawTime                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSWeaponFunctionLibrary::STATIC_MultiLineWeaponTraceByChannel(class UObject** WorldContextObject, class UKSWeaponAsset** Weapon, struct FVector* start, struct FVector* end, TEnumAsByte<ETraceTypeQuery>* TraceChannel, bool* bTraceComplex, TArray<class AActor*>* ActorsToIgnore, TEnumAsByte<EDrawDebugTrace>* DrawDebugType, bool* bIgnoreSelf, struct FLinearColor* TraceColor, struct FLinearColor* TraceHitColor, float* DrawTime, TArray<struct FHitResult>* OutHits)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponFunctionLibrary.MultiLineWeaponTraceByChannel");

	UKSWeaponFunctionLibrary_MultiLineWeaponTraceByChannel_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Weapon = Weapon;
	params.start = start;
	params.end = end;
	params.TraceChannel = TraceChannel;
	params.bTraceComplex = bTraceComplex;
	params.ActorsToIgnore = ActorsToIgnore;
	params.DrawDebugType = DrawDebugType;
	params.bIgnoreSelf = bIgnoreSelf;
	params.TraceColor = TraceColor;
	params.TraceHitColor = TraceHitColor;
	params.DrawTime = DrawTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutHits != nullptr)
		*OutHits = params.OutHits;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponFunctionLibrary.MeleeBoxOverlapComponents
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UKSWeaponAsset**         Weapon                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                BoxPos                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FRotator*               BoxRot                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                Extent                         (Parm, ZeroConstructor, IsPlainOldData)
// TArray<TEnumAsByte<EObjectTypeQuery>>* ObjectTypes                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// class UClass**                 ComponentClassFilter           (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class AActor*>*         ActorsToIgnore                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// TArray<class UPrimitiveComponent*> OutComponents                  (Parm, OutParm, ZeroConstructor)
// TEnumAsByte<EDrawDebugTrace>*  DrawDebugType                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor*           TraceColor                     (Parm, ZeroConstructor, IsPlainOldData)
// float*                         DrawTime                       (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Thickness                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSWeaponFunctionLibrary::STATIC_MeleeBoxOverlapComponents(class UObject** WorldContextObject, class UKSWeaponAsset** Weapon, struct FVector* BoxPos, struct FRotator* BoxRot, struct FVector* Extent, TArray<TEnumAsByte<EObjectTypeQuery>>* ObjectTypes, class UClass** ComponentClassFilter, TArray<class AActor*>* ActorsToIgnore, TEnumAsByte<EDrawDebugTrace>* DrawDebugType, struct FLinearColor* TraceColor, float* DrawTime, float* Thickness, TArray<class UPrimitiveComponent*>* OutComponents)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponFunctionLibrary.MeleeBoxOverlapComponents");

	UKSWeaponFunctionLibrary_MeleeBoxOverlapComponents_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Weapon = Weapon;
	params.BoxPos = BoxPos;
	params.BoxRot = BoxRot;
	params.Extent = Extent;
	params.ObjectTypes = ObjectTypes;
	params.ComponentClassFilter = ComponentClassFilter;
	params.ActorsToIgnore = ActorsToIgnore;
	params.DrawDebugType = DrawDebugType;
	params.TraceColor = TraceColor;
	params.DrawTime = DrawTime;
	params.Thickness = Thickness;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutComponents != nullptr)
		*OutComponents = params.OutComponents;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponFunctionLibrary.MeleeBoxOverlapActors
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UKSWeaponAsset**         Weapon                         (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                BoxPos                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FRotator*               BoxRot                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                BoxExtent                      (Parm, ZeroConstructor, IsPlainOldData)
// TArray<TEnumAsByte<EObjectTypeQuery>>* ObjectTypes                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// class UClass**                 ActorClassFilter               (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class AActor*>*         ActorsToIgnore                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// TArray<class AActor*>          OutActors                      (Parm, OutParm, ZeroConstructor)
// TEnumAsByte<EDrawDebugTrace>*  DrawDebugType                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor*           TraceColor                     (Parm, ZeroConstructor, IsPlainOldData)
// float*                         DrawTime                       (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Thickness                      (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSWeaponFunctionLibrary::STATIC_MeleeBoxOverlapActors(class UObject** WorldContextObject, class UKSWeaponAsset** Weapon, struct FVector* BoxPos, struct FRotator* BoxRot, struct FVector* BoxExtent, TArray<TEnumAsByte<EObjectTypeQuery>>* ObjectTypes, class UClass** ActorClassFilter, TArray<class AActor*>* ActorsToIgnore, TEnumAsByte<EDrawDebugTrace>* DrawDebugType, struct FLinearColor* TraceColor, float* DrawTime, float* Thickness, TArray<class AActor*>* OutActors)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponFunctionLibrary.MeleeBoxOverlapActors");

	UKSWeaponFunctionLibrary_MeleeBoxOverlapActors_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Weapon = Weapon;
	params.BoxPos = BoxPos;
	params.BoxRot = BoxRot;
	params.BoxExtent = BoxExtent;
	params.ObjectTypes = ObjectTypes;
	params.ActorClassFilter = ActorClassFilter;
	params.ActorsToIgnore = ActorsToIgnore;
	params.DrawDebugType = DrawDebugType;
	params.TraceColor = TraceColor;
	params.DrawTime = DrawTime;
	params.Thickness = Thickness;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutActors != nullptr)
		*OutActors = params.OutActors;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponFunctionLibrary.GetGadgetThrowSpeedMultiplier
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class APawn**                  Instigator                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponFunctionLibrary::STATIC_GetGadgetThrowSpeedMultiplier(class APawn** Instigator)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponFunctionLibrary.GetGadgetThrowSpeedMultiplier");

	UKSWeaponFunctionLibrary_GetGadgetThrowSpeedMultiplier_Params params;
	params.Instigator = Instigator;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponFunctionLibrary.GetGadgetOuterRadiusMultiplier
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class APawn**                  Instigator                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponFunctionLibrary::STATIC_GetGadgetOuterRadiusMultiplier(class APawn** Instigator)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponFunctionLibrary.GetGadgetOuterRadiusMultiplier");

	UKSWeaponFunctionLibrary_GetGadgetOuterRadiusMultiplier_Params params;
	params.Instigator = Instigator;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponFunctionLibrary.GetGadgetInnerRadiusMultiplier
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class APawn**                  Instigator                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponFunctionLibrary::STATIC_GetGadgetInnerRadiusMultiplier(class APawn** Instigator)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponFunctionLibrary.GetGadgetInnerRadiusMultiplier");

	UKSWeaponFunctionLibrary_GetGadgetInnerRadiusMultiplier_Params params;
	params.Instigator = Instigator;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponFunctionLibrary.GetGadgetFXSizeMultiplier
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class APawn**                  Instigator                     (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponFunctionLibrary::STATIC_GetGadgetFXSizeMultiplier(class APawn** Instigator)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponFunctionLibrary.GetGadgetFXSizeMultiplier");

	UKSWeaponFunctionLibrary_GetGadgetFXSizeMultiplier_Params params;
	params.Instigator = Instigator;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponFunctionLibrary.GenerateShotgunSpreadAimDataV2Exact
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// int*                           PelletCount                    (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Accuracy                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FAimData*               InAim                          (ConstParm, Parm, OutParm, ReferenceParm)
// struct FRandomStream           RandomStream                   (Parm, OutParm, ZeroConstructor, ReferenceParm)
// class UKSWeaponAsset**         InWeaponAsset                  (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 InWeaponOwner                  (Parm, ZeroConstructor, IsPlainOldData)
// float*                         InRange                        (Parm, ZeroConstructor, IsPlainOldData)
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FAimData                OutAim                         (Parm, OutParm)

void UKSWeaponFunctionLibrary::STATIC_GenerateShotgunSpreadAimDataV2Exact(int* PelletCount, float* Accuracy, struct FAimData* InAim, class UKSWeaponAsset** InWeaponAsset, class AActor** InWeaponOwner, float* InRange, class UObject** WorldContextObject, struct FRandomStream* RandomStream, struct FAimData* OutAim)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponFunctionLibrary.GenerateShotgunSpreadAimDataV2Exact");

	UKSWeaponFunctionLibrary_GenerateShotgunSpreadAimDataV2Exact_Params params;
	params.PelletCount = PelletCount;
	params.Accuracy = Accuracy;
	params.InAim = InAim;
	params.InWeaponAsset = InWeaponAsset;
	params.InWeaponOwner = InWeaponOwner;
	params.InRange = InRange;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (RandomStream != nullptr)
		*RandomStream = params.RandomStream;
	if (OutAim != nullptr)
		*OutAim = params.OutAim;
}


// Function Killstreak.KSWeaponFunctionLibrary.GenerateShotgunSpreadAimDataV2
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// int*                           PelletCount                    (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Accuracy                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FAimData*               InAim                          (ConstParm, Parm, OutParm, ReferenceParm)
// struct FRandomStream           RandomStream                   (Parm, OutParm, ZeroConstructor, ReferenceParm)
// class UKSWeaponAsset**         InWeaponAsset                  (Parm, ZeroConstructor, IsPlainOldData)
// struct FAimData                OutAim                         (Parm, OutParm)

void UKSWeaponFunctionLibrary::STATIC_GenerateShotgunSpreadAimDataV2(int* PelletCount, float* Accuracy, struct FAimData* InAim, class UKSWeaponAsset** InWeaponAsset, struct FRandomStream* RandomStream, struct FAimData* OutAim)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponFunctionLibrary.GenerateShotgunSpreadAimDataV2");

	UKSWeaponFunctionLibrary_GenerateShotgunSpreadAimDataV2_Params params;
	params.PelletCount = PelletCount;
	params.Accuracy = Accuracy;
	params.InAim = InAim;
	params.InWeaponAsset = InWeaponAsset;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (RandomStream != nullptr)
		*RandomStream = params.RandomStream;
	if (OutAim != nullptr)
		*OutAim = params.OutAim;
}


// Function Killstreak.KSWeaponFunctionLibrary.GenerateShotgunSpreadAimData
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// int*                           PelletCount                    (Parm, ZeroConstructor, IsPlainOldData)
// float*                         Accuracy                       (Parm, ZeroConstructor, IsPlainOldData)
// struct FAimData*               Aim                            (ConstParm, Parm, OutParm, ReferenceParm)
// struct FRandomStream           RandomStream                   (Parm, OutParm, ZeroConstructor, ReferenceParm)
// TArray<struct FAimData>        OutSpread                      (Parm, OutParm, ZeroConstructor)

void UKSWeaponFunctionLibrary::STATIC_GenerateShotgunSpreadAimData(int* PelletCount, float* Accuracy, struct FAimData* Aim, struct FRandomStream* RandomStream, TArray<struct FAimData>* OutSpread)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponFunctionLibrary.GenerateShotgunSpreadAimData");

	UKSWeaponFunctionLibrary_GenerateShotgunSpreadAimData_Params params;
	params.PelletCount = PelletCount;
	params.Accuracy = Accuracy;
	params.Aim = Aim;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (RandomStream != nullptr)
		*RandomStream = params.RandomStream;
	if (OutSpread != nullptr)
		*OutSpread = params.OutSpread;
}


// Function Killstreak.KSWeaponFunctionLibrary.FrameDelayForTrace
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// int*                           NumFramesToDelay               (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bBlockingHit                   (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FHitResult>*     Hits                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// struct FVector*                start                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                end                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FScriptDelegate*        OnDelayComplete                (Parm, ZeroConstructor)
// struct FLatentActionInfo*      LatentInfo                     (Parm)

void UKSWeaponFunctionLibrary::STATIC_FrameDelayForTrace(class UObject** WorldContextObject, int* NumFramesToDelay, bool* bBlockingHit, TArray<struct FHitResult>* Hits, struct FVector* start, struct FVector* end, struct FScriptDelegate* OnDelayComplete, struct FLatentActionInfo* LatentInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponFunctionLibrary.FrameDelayForTrace");

	UKSWeaponFunctionLibrary_FrameDelayForTrace_Params params;
	params.WorldContextObject = WorldContextObject;
	params.NumFramesToDelay = NumFramesToDelay;
	params.bBlockingHit = bBlockingHit;
	params.Hits = Hits;
	params.start = start;
	params.end = end;
	params.OnDelayComplete = OnDelayComplete;
	params.LatentInfo = LatentInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponFunctionLibrary.FindShotgunPelletHitData
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class AKSWeapon**              InWeapon                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FHitResult>*     ShotgunHits                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// struct FShotgunHitData         PelletHitData                  (Parm, OutParm)

void UKSWeaponFunctionLibrary::STATIC_FindShotgunPelletHitData(class AKSWeapon** InWeapon, TArray<struct FHitResult>* ShotgunHits, struct FShotgunHitData* PelletHitData)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponFunctionLibrary.FindShotgunPelletHitData");

	UKSWeaponFunctionLibrary_FindShotgunPelletHitData_Params params;
	params.InWeapon = InWeapon;
	params.ShotgunHits = ShotgunHits;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (PelletHitData != nullptr)
		*PelletHitData = params.PelletHitData;
}


// Function Killstreak.KSWeaponFunctionLibrary.EventSingleShotgunLineTraceByChannelV2
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// struct FAimData*               InAim                          (ConstParm, Parm, OutParm, ReferenceParm)
// float*                         PelletRange                    (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<ETraceTypeQuery>*  TraceChannel                   (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bTraceComplex                  (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class AActor*>*         ActorsToIgnore                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// TEnumAsByte<EDrawDebugTrace>*  DrawDebugType                  (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FHitResult>      OutHits                        (Parm, OutParm, ZeroConstructor)
// bool*                          bIgnoreSelf                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor*           TraceColor                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor*           TraceHitColor                  (Parm, ZeroConstructor, IsPlainOldData)
// float*                         DrawTime                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSWeaponFunctionLibrary::STATIC_EventSingleShotgunLineTraceByChannelV2(class UObject** WorldContextObject, struct FAimData* InAim, float* PelletRange, TEnumAsByte<ETraceTypeQuery>* TraceChannel, bool* bTraceComplex, TArray<class AActor*>* ActorsToIgnore, TEnumAsByte<EDrawDebugTrace>* DrawDebugType, bool* bIgnoreSelf, struct FLinearColor* TraceColor, struct FLinearColor* TraceHitColor, float* DrawTime, TArray<struct FHitResult>* OutHits)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponFunctionLibrary.EventSingleShotgunLineTraceByChannelV2");

	UKSWeaponFunctionLibrary_EventSingleShotgunLineTraceByChannelV2_Params params;
	params.WorldContextObject = WorldContextObject;
	params.InAim = InAim;
	params.PelletRange = PelletRange;
	params.TraceChannel = TraceChannel;
	params.bTraceComplex = bTraceComplex;
	params.ActorsToIgnore = ActorsToIgnore;
	params.DrawDebugType = DrawDebugType;
	params.bIgnoreSelf = bIgnoreSelf;
	params.TraceColor = TraceColor;
	params.TraceHitColor = TraceHitColor;
	params.DrawTime = DrawTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutHits != nullptr)
		*OutHits = params.OutHits;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponFunctionLibrary.EventSingleShotgunLineTraceByChannel
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FAimData>*       Spread                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// float*                         PelletRange                    (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<ETraceTypeQuery>*  TraceChannel                   (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bTraceComplex                  (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class AActor*>*         ActorsToIgnore                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// TEnumAsByte<EDrawDebugTrace>*  DrawDebugType                  (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FHitResult>      OutHits                        (Parm, OutParm, ZeroConstructor)
// bool*                          bIgnoreSelf                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor*           TraceColor                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor*           TraceHitColor                  (Parm, ZeroConstructor, IsPlainOldData)
// float*                         DrawTime                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSWeaponFunctionLibrary::STATIC_EventSingleShotgunLineTraceByChannel(class UObject** WorldContextObject, TArray<struct FAimData>* Spread, float* PelletRange, TEnumAsByte<ETraceTypeQuery>* TraceChannel, bool* bTraceComplex, TArray<class AActor*>* ActorsToIgnore, TEnumAsByte<EDrawDebugTrace>* DrawDebugType, bool* bIgnoreSelf, struct FLinearColor* TraceColor, struct FLinearColor* TraceHitColor, float* DrawTime, TArray<struct FHitResult>* OutHits)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponFunctionLibrary.EventSingleShotgunLineTraceByChannel");

	UKSWeaponFunctionLibrary_EventSingleShotgunLineTraceByChannel_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Spread = Spread;
	params.PelletRange = PelletRange;
	params.TraceChannel = TraceChannel;
	params.bTraceComplex = bTraceComplex;
	params.ActorsToIgnore = ActorsToIgnore;
	params.DrawDebugType = DrawDebugType;
	params.bIgnoreSelf = bIgnoreSelf;
	params.TraceColor = TraceColor;
	params.TraceHitColor = TraceHitColor;
	params.DrawTime = DrawTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutHits != nullptr)
		*OutHits = params.OutHits;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponFunctionLibrary.EventMultiShotgunLineTraceByChannelV3
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// int*                           ShotPenetrationCount           (Parm, ZeroConstructor, IsPlainOldData)
// struct FAimData*               InAim                          (ConstParm, Parm, OutParm, ReferenceParm)
// float*                         PelletRange                    (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<ETraceTypeQuery>*  TraceChannel                   (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bTraceComplex                  (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class AActor*>*         ActorsToIgnore                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// TEnumAsByte<EDrawDebugTrace>*  DrawDebugType                  (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FHitResult>      OutHits                        (Parm, OutParm, ZeroConstructor)
// bool*                          bIgnoreSelf                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FLatentActionInfo*      LatentInfo                     (Parm)
// struct FLinearColor*           TraceColor                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor*           TraceHitColor                  (Parm, ZeroConstructor, IsPlainOldData)
// float*                         DrawTime                       (Parm, ZeroConstructor, IsPlainOldData)

void UKSWeaponFunctionLibrary::STATIC_EventMultiShotgunLineTraceByChannelV3(class UObject** WorldContextObject, int* ShotPenetrationCount, struct FAimData* InAim, float* PelletRange, TEnumAsByte<ETraceTypeQuery>* TraceChannel, bool* bTraceComplex, TArray<class AActor*>* ActorsToIgnore, TEnumAsByte<EDrawDebugTrace>* DrawDebugType, bool* bIgnoreSelf, struct FLatentActionInfo* LatentInfo, struct FLinearColor* TraceColor, struct FLinearColor* TraceHitColor, float* DrawTime, TArray<struct FHitResult>* OutHits)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponFunctionLibrary.EventMultiShotgunLineTraceByChannelV3");

	UKSWeaponFunctionLibrary_EventMultiShotgunLineTraceByChannelV3_Params params;
	params.WorldContextObject = WorldContextObject;
	params.ShotPenetrationCount = ShotPenetrationCount;
	params.InAim = InAim;
	params.PelletRange = PelletRange;
	params.TraceChannel = TraceChannel;
	params.bTraceComplex = bTraceComplex;
	params.ActorsToIgnore = ActorsToIgnore;
	params.DrawDebugType = DrawDebugType;
	params.bIgnoreSelf = bIgnoreSelf;
	params.LatentInfo = LatentInfo;
	params.TraceColor = TraceColor;
	params.TraceHitColor = TraceHitColor;
	params.DrawTime = DrawTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutHits != nullptr)
		*OutHits = params.OutHits;
}


// Function Killstreak.KSWeaponFunctionLibrary.EventMultiShotgunLineTraceByChannelV2
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UKSWeaponAsset**         Weapon                         (Parm, ZeroConstructor, IsPlainOldData)
// int*                           ShotPenetrationCount           (Parm, ZeroConstructor, IsPlainOldData)
// struct FAimData*               InAim                          (ConstParm, Parm, OutParm, ReferenceParm)
// float*                         PelletRange                    (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<ETraceTypeQuery>*  TraceChannel                   (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bTraceComplex                  (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class AActor*>*         ActorsToIgnore                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// TEnumAsByte<EDrawDebugTrace>*  DrawDebugType                  (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FHitResult>      OutHits                        (Parm, OutParm, ZeroConstructor)
// bool*                          bIgnoreSelf                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor*           TraceColor                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor*           TraceHitColor                  (Parm, ZeroConstructor, IsPlainOldData)
// float*                         DrawTime                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSWeaponFunctionLibrary::STATIC_EventMultiShotgunLineTraceByChannelV2(class UObject** WorldContextObject, class UKSWeaponAsset** Weapon, int* ShotPenetrationCount, struct FAimData* InAim, float* PelletRange, TEnumAsByte<ETraceTypeQuery>* TraceChannel, bool* bTraceComplex, TArray<class AActor*>* ActorsToIgnore, TEnumAsByte<EDrawDebugTrace>* DrawDebugType, bool* bIgnoreSelf, struct FLinearColor* TraceColor, struct FLinearColor* TraceHitColor, float* DrawTime, TArray<struct FHitResult>* OutHits)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponFunctionLibrary.EventMultiShotgunLineTraceByChannelV2");

	UKSWeaponFunctionLibrary_EventMultiShotgunLineTraceByChannelV2_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Weapon = Weapon;
	params.ShotPenetrationCount = ShotPenetrationCount;
	params.InAim = InAim;
	params.PelletRange = PelletRange;
	params.TraceChannel = TraceChannel;
	params.bTraceComplex = bTraceComplex;
	params.ActorsToIgnore = ActorsToIgnore;
	params.DrawDebugType = DrawDebugType;
	params.bIgnoreSelf = bIgnoreSelf;
	params.TraceColor = TraceColor;
	params.TraceHitColor = TraceHitColor;
	params.DrawTime = DrawTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutHits != nullptr)
		*OutHits = params.OutHits;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponFunctionLibrary.EventMultiShotgunLineTraceByChannel
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData)
// class UKSWeaponAsset**         Weapon                         (Parm, ZeroConstructor, IsPlainOldData)
// int*                           ShotPenetrationCount           (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FAimData>*       Spread                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// float*                         PelletRange                    (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<ETraceTypeQuery>*  TraceChannel                   (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          bTraceComplex                  (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class AActor*>*         ActorsToIgnore                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// TEnumAsByte<EDrawDebugTrace>*  DrawDebugType                  (Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FHitResult>      OutHits                        (Parm, OutParm, ZeroConstructor)
// bool*                          bIgnoreSelf                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor*           TraceColor                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FLinearColor*           TraceHitColor                  (Parm, ZeroConstructor, IsPlainOldData)
// float*                         DrawTime                       (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSWeaponFunctionLibrary::STATIC_EventMultiShotgunLineTraceByChannel(class UObject** WorldContextObject, class UKSWeaponAsset** Weapon, int* ShotPenetrationCount, TArray<struct FAimData>* Spread, float* PelletRange, TEnumAsByte<ETraceTypeQuery>* TraceChannel, bool* bTraceComplex, TArray<class AActor*>* ActorsToIgnore, TEnumAsByte<EDrawDebugTrace>* DrawDebugType, bool* bIgnoreSelf, struct FLinearColor* TraceColor, struct FLinearColor* TraceHitColor, float* DrawTime, TArray<struct FHitResult>* OutHits)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponFunctionLibrary.EventMultiShotgunLineTraceByChannel");

	UKSWeaponFunctionLibrary_EventMultiShotgunLineTraceByChannel_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Weapon = Weapon;
	params.ShotPenetrationCount = ShotPenetrationCount;
	params.Spread = Spread;
	params.PelletRange = PelletRange;
	params.TraceChannel = TraceChannel;
	params.bTraceComplex = bTraceComplex;
	params.ActorsToIgnore = ActorsToIgnore;
	params.DrawDebugType = DrawDebugType;
	params.bIgnoreSelf = bIgnoreSelf;
	params.TraceColor = TraceColor;
	params.TraceHitColor = TraceHitColor;
	params.DrawTime = DrawTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutHits != nullptr)
		*OutHits = params.OutHits;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponFunctionLibrary.DoRadialDamageWithPreventionChannel
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                Origin                         (Parm, ZeroConstructor, IsPlainOldData)
// class UKSWeaponAsset**         InAsset                        (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class AActor*>*         IgnoreActors                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// class UClass**                 DamageTypeClass                (Parm, ZeroConstructor, IsPlainOldData)
// class AController**            DamageInstigator               (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)
// TEnumAsByte<ECollisionChannel>* DamagePreventionChannel        (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSWeaponFunctionLibrary::STATIC_DoRadialDamageWithPreventionChannel(class UObject** WorldContextObject, struct FVector* Origin, class UKSWeaponAsset** InAsset, TArray<class AActor*>* IgnoreActors, class UClass** DamageTypeClass, class AController** DamageInstigator, class AActor** DamageCauser, TEnumAsByte<ECollisionChannel>* DamagePreventionChannel)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponFunctionLibrary.DoRadialDamageWithPreventionChannel");

	UKSWeaponFunctionLibrary_DoRadialDamageWithPreventionChannel_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Origin = Origin;
	params.InAsset = InAsset;
	params.IgnoreActors = IgnoreActors;
	params.DamageTypeClass = DamageTypeClass;
	params.DamageInstigator = DamageInstigator;
	params.DamageCauser = DamageCauser;
	params.DamagePreventionChannel = DamagePreventionChannel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponFunctionLibrary.DoRadialDamage
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject**                WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                Origin                         (Parm, ZeroConstructor, IsPlainOldData)
// class UKSWeaponAsset**         InAsset                        (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class AActor*>*         AdditionalIgnoreActors         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// class AController**            DamageInstigator               (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSWeaponFunctionLibrary::STATIC_DoRadialDamage(class UObject** WorldContextObject, struct FVector* Origin, class UKSWeaponAsset** InAsset, TArray<class AActor*>* AdditionalIgnoreActors, class AController** DamageInstigator, class AActor** DamageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponFunctionLibrary.DoRadialDamage");

	UKSWeaponFunctionLibrary_DoRadialDamage_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Origin = Origin;
	params.InAsset = InAsset;
	params.AdditionalIgnoreActors = AdditionalIgnoreActors;
	params.DamageInstigator = DamageInstigator;
	params.DamageCauser = DamageCauser;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponFunctionLibrary.DoPointDamage
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor**                 DamagedActor                   (Parm, ZeroConstructor, IsPlainOldData)
// float*                         BaseDamage                     (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                HitFromDirection               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData)
// struct FHitResult*             HitInfo                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// class AController**            EventInstigator                (Parm, ZeroConstructor, IsPlainOldData)
// class AActor**                 DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData)
// class UClass**                 DamageTypeClass                (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponFunctionLibrary::STATIC_DoPointDamage(class AActor** DamagedActor, float* BaseDamage, struct FVector* HitFromDirection, struct FHitResult* HitInfo, class AController** EventInstigator, class AActor** DamageCauser, class UClass** DamageTypeClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponFunctionLibrary.DoPointDamage");

	UKSWeaponFunctionLibrary_DoPointDamage_Params params;
	params.DamagedActor = DamagedActor;
	params.BaseDamage = BaseDamage;
	params.HitFromDirection = HitFromDirection;
	params.HitInfo = HitInfo;
	params.EventInstigator = EventInstigator;
	params.DamageCauser = DamageCauser;
	params.DamageTypeClass = DamageTypeClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponFunctionLibrary.CongregateShotgunHits
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class AKSWeapon**              InWeapon                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData)
// TArray<struct FHitResult>*     ShotgunHits                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm)
// TArray<struct FCongregatedShotgunHit> CongregatedResults             (Parm, OutParm, ZeroConstructor)

void UKSWeaponFunctionLibrary::STATIC_CongregateShotgunHits(class AKSWeapon** InWeapon, TArray<struct FHitResult>* ShotgunHits, TArray<struct FCongregatedShotgunHit>* CongregatedResults)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponFunctionLibrary.CongregateShotgunHits");

	UKSWeaponFunctionLibrary_CongregateShotgunHits_Params params;
	params.InWeapon = InWeapon;
	params.ShotgunHits = ShotgunHits;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (CongregatedResults != nullptr)
		*CongregatedResults = params.CongregatedResults;
}


// Function Killstreak.KSWeaponMasteryManager.GetKDAForWeapon
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UKSWeaponAsset**         Weapon                         (Parm, ZeroConstructor, IsPlainOldData)
// class AKSPlayerController**    Player                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponMasteryManager::GetKDAForWeapon(class UKSWeaponAsset** Weapon, class AKSPlayerController** Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponMasteryManager.GetKDAForWeapon");

	UKSWeaponMasteryManager_GetKDAForWeapon_Params params;
	params.Weapon = Weapon;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponMasteryManager.GetActivityInstancesWithWeapon
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UKSWeaponAsset**         Weapon                         (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UKSActivityInstance*> OutActivityInstances           (Parm, OutParm, ZeroConstructor)
// class AKSPlayerController**    Player                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSWeaponMasteryManager::GetActivityInstancesWithWeapon(class UKSWeaponAsset** Weapon, class AKSPlayerController** Player, TArray<class UKSActivityInstance*>* OutActivityInstances)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponMasteryManager.GetActivityInstancesWithWeapon");

	UKSWeaponMasteryManager_GetActivityInstancesWithWeapon_Params params;
	params.Weapon = Weapon;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutActivityInstances != nullptr)
		*OutActivityInstances = params.OutActivityInstances;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponMasteryManager.GetActivityInstancesWithType
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// EKSWeaponMasteryActivityType*  Type                           (Parm, ZeroConstructor, IsPlainOldData)
// TArray<class UKSActivityInstance*> OutActivityInstances           (Parm, OutParm, ZeroConstructor)
// class AKSPlayerController**    Player                         (Parm, ZeroConstructor, IsPlainOldData)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool UKSWeaponMasteryManager::GetActivityInstancesWithType(EKSWeaponMasteryActivityType* Type, class AKSPlayerController** Player, TArray<class UKSActivityInstance*>* OutActivityInstances)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponMasteryManager.GetActivityInstancesWithType");

	UKSWeaponMasteryManager_GetActivityInstancesWithType_Params params;
	params.Type = Type;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	if (OutActivityInstances != nullptr)
		*OutActivityInstances = params.OutActivityInstances;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponMasteryManager.GetAccuracyForWeapon
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UKSWeaponAsset**         Weapon                         (Parm, ZeroConstructor, IsPlainOldData)
// class AKSPlayerController**    Player                         (Parm, ZeroConstructor, IsPlainOldData)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float UKSWeaponMasteryManager::GetAccuracyForWeapon(class UKSWeaponAsset** Weapon, class AKSPlayerController** Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponMasteryManager.GetAccuracyForWeapon");

	UKSWeaponMasteryManager_GetAccuracyForWeapon_Params params;
	params.Weapon = Weapon;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWeaponMasteryManager.FindActivityByWeaponAndType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UKSWeaponAsset**         Weapon                         (Parm, ZeroConstructor, IsPlainOldData)
// EKSWeaponMasteryActivityType*  Type                           (Parm, ZeroConstructor, IsPlainOldData)
// class UKSWeaponMasteryActivity* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

class UKSWeaponMasteryActivity* UKSWeaponMasteryManager::FindActivityByWeaponAndType(class UKSWeaponAsset** Weapon, EKSWeaponMasteryActivityType* Type)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponMasteryManager.FindActivityByWeaponAndType");

	UKSWeaponMasteryManager_FindActivityByWeaponAndType_Params params;
	params.Weapon = Weapon;
	params.Type = Type;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSWorldSettings.LevelActorDestroyed
// (Final, Native, Protected)
// Parameters:
// class AActor**                 TheActor                       (Parm, ZeroConstructor, IsPlainOldData)

void AKSWorldSettings::LevelActorDestroyed(class AActor** TheActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWorldSettings.LevelActorDestroyed");

	AKSWorldSettings_LevelActorDestroyed_Params params;
	params.TheActor = TheActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSZipLine.SetReadyToRide
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool*                          bIsReadyToRide                 (Parm, ZeroConstructor, IsPlainOldData)

void AKSZipLine::SetReadyToRide(bool* bIsReadyToRide)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSZipLine.SetReadyToRide");

	AKSZipLine_SetReadyToRide_Params params;
	params.bIsReadyToRide = bIsReadyToRide;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSZipLine.OnPlayerZiplineCooldownEnd
// (Event, Public, BlueprintEvent)
// Parameters:
// class AKSCharacter**           Character                      (Parm, ZeroConstructor, IsPlainOldData)

void AKSZipLine::OnPlayerZiplineCooldownEnd(class AKSCharacter** Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSZipLine.OnPlayerZiplineCooldownEnd");

	AKSZipLine_OnPlayerZiplineCooldownEnd_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSZipLine.OnPlayerStopZiplining
// (Event, Public, BlueprintEvent)
// Parameters:
// class AKSCharacter**           Character                      (Parm, ZeroConstructor, IsPlainOldData)

void AKSZipLine::OnPlayerStopZiplining(class AKSCharacter** Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSZipLine.OnPlayerStopZiplining");

	AKSZipLine_OnPlayerStopZiplining_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSZipLine.OnPlayerStartZiplining
// (Event, Public, BlueprintEvent)
// Parameters:
// class AKSCharacter**           Character                      (Parm, ZeroConstructor, IsPlainOldData)

void AKSZipLine::OnPlayerStartZiplining(class AKSCharacter** Character)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSZipLine.OnPlayerStartZiplining");

	AKSZipLine_OnPlayerStartZiplining_Params params;
	params.Character = Character;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSZipLine.IsUpline
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

bool AKSZipLine::IsUpline()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSZipLine.IsUpline");

	AKSZipLine_IsUpline_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSZipLine.GetAutoReleaseDistance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float AKSZipLine::GetAutoReleaseDistance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSZipLine.GetAutoReleaseDistance");

	AKSZipLine_GetAutoReleaseDistance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSZipLine.ComputeAutoReleaseVelocity
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRotator*               CharRotation                   (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

struct FVector AKSZipLine::ComputeAutoReleaseVelocity(struct FRotator* CharRotation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSZipLine.ComputeAutoReleaseVelocity");

	AKSZipLine_ComputeAutoReleaseVelocity_Params params;
	params.CharRotation = CharRotation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.KSZipLine_Dynamic.SetDynamicAnchors
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector*                StartAnchor                    (Parm, ZeroConstructor, IsPlainOldData)
// struct FVector*                EndAnchor                      (Parm, ZeroConstructor, IsPlainOldData)

void AKSZipLine_Dynamic::SetDynamicAnchors(struct FVector* StartAnchor, struct FVector* EndAnchor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSZipLine_Dynamic.SetDynamicAnchors");

	AKSZipLine_Dynamic_SetDynamicAnchors_Params params;
	params.StartAnchor = StartAnchor;
	params.EndAnchor = EndAnchor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.LobbyPlayerController.LoadRoute
// (Final, Exec, Native, Protected)
// Parameters:
// struct FName*                  RouteName                      (Parm, ZeroConstructor, IsPlainOldData)
// bool*                          ForceTransition                (Parm, ZeroConstructor, IsPlainOldData)

void ALobbyPlayerController::LoadRoute(struct FName* RouteName, bool* ForceTransition)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.LobbyPlayerController.LoadRoute");

	ALobbyPlayerController_LoadRoute_Params params;
	params.RouteName = RouteName;
	params.ForceTransition = ForceTransition;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.ParticleSystemChannelComponent.UpdateChannels
// (Final, Native, Protected, BlueprintCallable)

void UParticleSystemChannelComponent::UpdateChannels()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.ParticleSystemChannelComponent.UpdateChannels");

	UParticleSystemChannelComponent_UpdateChannels_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.PerkCategory.GetSoftCategoryIcon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)

void UPerkCategory::GetSoftCategoryIcon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.PerkCategory.GetSoftCategoryIcon");

	UPerkCategory_GetSoftCategoryIcon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.SmoothRepTimelineActor.SetTimelineComponentToSimulate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTimelineComponent**     InTimelineComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void ASmoothRepTimelineActor::SetTimelineComponentToSimulate(class UTimelineComponent** InTimelineComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.SmoothRepTimelineActor.SetTimelineComponentToSimulate");

	ASmoothRepTimelineActor_SetTimelineComponentToSimulate_Params params;
	params.InTimelineComponent = InTimelineComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.SmoothRepTimelineActor.OnRep_SmoothTimeline
// (Final, Native, Private)

void ASmoothRepTimelineActor::OnRep_SmoothTimeline()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.SmoothRepTimelineActor.OnRep_SmoothTimeline");

	ASmoothRepTimelineActor_OnRep_SmoothTimeline_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.SplineMovementComponent.StopSimulating
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FHitResult*             HitResult                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)

void USplineMovementComponent::StopSimulating(struct FHitResult* HitResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.SplineMovementComponent.StopSimulating");

	USplineMovementComponent_StopSimulating_Params params;
	params.HitResult = HitResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.SplineMovementComponent.SetInitialOffsetOnSpline
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float*                         Distance                       (Parm, ZeroConstructor, IsPlainOldData)

void USplineMovementComponent::SetInitialOffsetOnSpline(float* Distance)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.SplineMovementComponent.SetInitialOffsetOnSpline");

	USplineMovementComponent_SetInitialOffsetOnSpline_Params params;
	params.Distance = Distance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.SplineMovementComponent.RestartMovement
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float*                         InitialDirection               (Parm, ZeroConstructor, IsPlainOldData)

void USplineMovementComponent::RestartMovement(float* InitialDirection)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.SplineMovementComponent.RestartMovement");

	USplineMovementComponent_RestartMovement_Params params;
	params.InitialDirection = InitialDirection;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction Killstreak.SplineMovementComponent.OnSplineWaitEndDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasOutParms)
// Parameters:
// struct FHitResult*             ImpactResult                   (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float*                         Time                           (Parm, ZeroConstructor, IsPlainOldData)

void USplineMovementComponent::OnSplineWaitEndDelegate__DelegateSignature(struct FHitResult* ImpactResult, float* Time)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Killstreak.SplineMovementComponent.OnSplineWaitEndDelegate__DelegateSignature");

	USplineMovementComponent_OnSplineWaitEndDelegate__DelegateSignature_Params params;
	params.ImpactResult = ImpactResult;
	params.Time = Time;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction Killstreak.SplineMovementComponent.OnSplineWaitBeginDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasOutParms)
// Parameters:
// struct FHitResult*             ImpactResult                   (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float*                         Time                           (Parm, ZeroConstructor, IsPlainOldData)

void USplineMovementComponent::OnSplineWaitBeginDelegate__DelegateSignature(struct FHitResult* ImpactResult, float* Time)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Killstreak.SplineMovementComponent.OnSplineWaitBeginDelegate__DelegateSignature");

	USplineMovementComponent_OnSplineWaitBeginDelegate__DelegateSignature_Params params;
	params.ImpactResult = ImpactResult;
	params.Time = Time;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction Killstreak.SplineMovementComponent.OnSplineStopDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasOutParms)
// Parameters:
// struct FHitResult*             ImpactResult                   (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float*                         Time                           (Parm, ZeroConstructor, IsPlainOldData)

void USplineMovementComponent::OnSplineStopDelegate__DelegateSignature(struct FHitResult* ImpactResult, float* Time)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Killstreak.SplineMovementComponent.OnSplineStopDelegate__DelegateSignature");

	USplineMovementComponent_OnSplineStopDelegate__DelegateSignature_Params params;
	params.ImpactResult = ImpactResult;
	params.Time = Time;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction Killstreak.SplineMovementComponent.OnSplineReverseDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasOutParms)
// Parameters:
// struct FHitResult*             ImpactResult                   (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float*                         Time                           (Parm, ZeroConstructor, IsPlainOldData)

void USplineMovementComponent::OnSplineReverseDelegate__DelegateSignature(struct FHitResult* ImpactResult, float* Time)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Killstreak.SplineMovementComponent.OnSplineReverseDelegate__DelegateSignature");

	USplineMovementComponent_OnSplineReverseDelegate__DelegateSignature_Params params;
	params.ImpactResult = ImpactResult;
	params.Time = Time;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction Killstreak.SplineMovementComponent.OnSplineResetDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasOutParms)
// Parameters:
// struct FHitResult*             ImpactResult                   (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData)
// float*                         Time                           (Parm, ZeroConstructor, IsPlainOldData)

void USplineMovementComponent::OnSplineResetDelegate__DelegateSignature(struct FHitResult* ImpactResult, float* Time)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Killstreak.SplineMovementComponent.OnSplineResetDelegate__DelegateSignature");

	USplineMovementComponent_OnSplineResetDelegate__DelegateSignature_Params params;
	params.ImpactResult = ImpactResult;
	params.Time = Time;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.SplineMovementComponent.GoToTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float*                         Time                           (Parm, ZeroConstructor, IsPlainOldData)

void USplineMovementComponent::GoToTime(float* Time)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.SplineMovementComponent.GoToTime");

	USplineMovementComponent_GoToTime_Params params;
	params.Time = Time;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.SplineMovementComponent.GetAlpha
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData)

float USplineMovementComponent::GetAlpha()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.SplineMovementComponent.GetAlpha");

	USplineMovementComponent_GetAlpha_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.ThermalScopeManagerComponent.CreateThermalManagerComponent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AKSCharacter**           InCharacter                    (Parm, ZeroConstructor, IsPlainOldData)
// class UKSWeaponComponent**     InWeaponComponent              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)
// class UClass**                 ThermalPostProcessClass        (Parm, ZeroConstructor, IsPlainOldData)
// class UThermalScopeManagerComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData)

class UThermalScopeManagerComponent* UThermalScopeManagerComponent::STATIC_CreateThermalManagerComponent(class AKSCharacter** InCharacter, class UKSWeaponComponent** InWeaponComponent, class UClass** ThermalPostProcessClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.ThermalScopeManagerComponent.CreateThermalManagerComponent");

	UThermalScopeManagerComponent_CreateThermalManagerComponent_Params params;
	params.InCharacter = InCharacter;
	params.InWeaponComponent = InWeaponComponent;
	params.ThermalPostProcessClass = ThermalPostProcessClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;

	return params.ReturnValue;
}


// Function Killstreak.TracerParticlePoolComponent.OnTracerDestinationReached
// (Native, Public)
// Parameters:
// class USceneComponent**        TracerComponent                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UTracerParticlePoolComponent::OnTracerDestinationReached(class USceneComponent** TracerComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.TracerParticlePoolComponent.OnTracerDestinationReached");

	UTracerParticlePoolComponent_OnTracerDestinationReached_Params params;
	params.TracerComponent = TracerComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.TracerStaticMeshPoolComponent.OnTracerDestinationReached
// (Native, Protected)
// Parameters:
// class USceneComponent**        TracerComponent                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData)

void UTracerStaticMeshPoolComponent::OnTracerDestinationReached(class USceneComponent** TracerComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.TracerStaticMeshPoolComponent.OnTracerDestinationReached");

	UTracerStaticMeshPoolComponent_OnTracerDestinationReached_Params params;
	params.TracerComponent = TracerComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x400;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


}

#ifdef _MSC_VER
	#pragma pack(pop)
#endif
